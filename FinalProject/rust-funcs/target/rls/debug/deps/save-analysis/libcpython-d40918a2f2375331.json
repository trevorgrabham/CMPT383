{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2","program":"C:\\Users\\treva\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cpython","--edition=2018","C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"extension-module\"","--cfg","feature=\"python3-sys\"","-C","metadata=d40918a2f2375331","-C","extra-filename=-d40918a2f2375331","--out-dir","c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps","--extern","libc=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\liblibc-f0de403a9b52c83a.rmeta","--extern","num_traits=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libnum_traits-9e8067a262769e4e.rmeta","--extern","paste=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libpaste-608065fc23c470e8.rmeta","--extern","python3_sys=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libpython3_sys-4563d3ee0e08ea6e.rmeta","--cap-lints","allow","--cfg","py_sys_config=\"Py_UNICODE_SIZE_2\"","--cfg","py_sys_config=\"Py_USING_UNICODE\"","--cfg","py_sys_config=\"WITH_THREAD\"","-L","native=C:\\Users\\treva\\AppData\\Local\\Programs\\Python\\Python39\\libs","--error-format=json","--sysroot","C:\\Users\\treva\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libcpython-d40918a2f2375331.rmeta"},"prelude":{"crate_id":{"name":"cpython","disambiguator":[18018447595306168705,10174581449264823350]},"crate_root":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src","external_crates":[{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":14,"id":{"name":"python3_sys","disambiguator":[3277814832076949139,15290935564478982792]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","num":15,"id":{"name":"libc","disambiguator":[8115237375878882692,10461185075909509090]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","num":16,"id":{"name":"num_traits","disambiguator":[12637468738524569527,2873122016162683679]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":17,"id":{"name":"paste","disambiguator":[8204012779314607291,18060523887073349398]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":18,"id":{"name":"proc_macro_hack","disambiguator":[7723182486196319677,16025779152400902286]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","num":19,"id":{"name":"paste_impl","disambiguator":[15394776270267704489,12795412188358997386]}}],"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1108,"byte_end":13129,"line_start":19,"line_end":412,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":63},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3766,"byte_end":3776,"line_start":95,"line_end":95,"column_start":14,"column_end":24},"alias_span":null,"name":"Py_ssize_t","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3807,"byte_end":3819,"line_start":97,"line_end":97,"column_start":29,"column_end":41},"alias_span":null,"name":"FromPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3821,"byte_end":3836,"line_start":97,"line_end":97,"column_start":43,"column_end":58},"alias_span":null,"name":"RefFromPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3838,"byte_end":3848,"line_start":97,"line_end":97,"column_start":60,"column_end":70},"alias_span":null,"name":"ToPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3872,"byte_end":3877,"line_start":98,"line_end":98,"column_start":22,"column_end":27},"alias_span":null,"name":"PyErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3879,"byte_end":3887,"line_start":98,"line_end":98,"column_start":29,"column_end":37},"alias_span":null,"name":"PyResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3921,"byte_end":3935,"line_start":99,"line_end":99,"column_start":32,"column_end":46},"alias_span":null,"name":"ObjectProtocol","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3961,"byte_end":3962,"line_start":100,"line_end":100,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"PyDict, PyInt, exc, PyModule, PyObject","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4639},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3989,"byte_end":3998,"line_start":101,"line_end":101,"column_start":26,"column_end":35},"alias_span":null,"name":"CompareOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4029,"byte_end":4036,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"alias_span":null,"name":"PyClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4038,"byte_end":4044,"line_start":103,"line_end":103,"column_start":14,"column_end":20},"alias_span":null,"name":"PyDrop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4046,"byte_end":4052,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"alias_span":null,"name":"Python","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4054,"byte_end":4066,"line_start":103,"line_end":103,"column_start":30,"column_end":42},"alias_span":null,"name":"PythonObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4068,"byte_end":4093,"line_start":103,"line_end":103,"column_start":44,"column_end":69},"alias_span":null,"name":"PythonObjectDowncastError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4099,"byte_end":4130,"line_start":104,"line_end":104,"column_start":5,"column_end":36},"alias_span":null,"name":"PythonObjectWithCheckedDowncast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4132,"byte_end":4158,"line_start":104,"line_end":104,"column_start":38,"column_end":64},"alias_span":null,"name":"PythonObjectWithTypeObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4190,"byte_end":4217,"line_start":106,"line_end":106,"column_start":28,"column_end":55},"alias_span":null,"name":"prepare_freethreaded_python","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4219,"byte_end":4227,"line_start":106,"line_end":106,"column_start":57,"column_end":65},"alias_span":null,"name":"GILGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4229,"byte_end":4241,"line_start":106,"line_end":106,"column_start":67,"column_end":79},"alias_span":null,"name":"GILProtected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4276,"byte_end":4287,"line_start":108,"line_end":108,"column_start":5,"column_end":16},"alias_span":null,"name":"PyLeakedRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4289,"byte_end":4303,"line_start":108,"line_end":108,"column_start":18,"column_end":32},"alias_span":null,"name":"PyLeakedRefMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4305,"byte_end":4316,"line_start":108,"line_end":108,"column_start":34,"column_end":45},"alias_span":null,"name":"PySharedRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4660},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4318,"byte_end":4333,"line_start":108,"line_end":108,"column_start":47,"column_end":62},"alias_span":null,"name":"PySharedRefCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4335,"byte_end":4349,"line_start":108,"line_end":108,"column_start":64,"column_end":78},"alias_span":null,"name":"UnsafePyLeaked","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7109,"byte_end":7110,"line_start":224,"line_end":224,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"PyObject","parent":{"krate":0,"index":2327}},{"kind":"Use","ref_id":{"krate":15,"index":69},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7160,"byte_end":7166,"line_start":227,"line_end":227,"column_start":24,"column_end":30},"alias_span":null,"name":"c_char","value":"","parent":{"krate":0,"index":2329}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7168,"byte_end":7173,"line_start":227,"line_end":227,"column_start":32,"column_end":37},"alias_span":null,"name":"c_int","value":"","parent":{"krate":0,"index":2329}},{"kind":"Use","ref_id":{"krate":2,"index":4469},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7175,"byte_end":7181,"line_start":227,"line_end":227,"column_start":39,"column_end":45},"alias_span":null,"name":"c_void","value":"","parent":{"krate":0,"index":2329}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7215,"byte_end":7238,"line_start":229,"line_end":229,"column_start":26,"column_end":49},"alias_span":null,"name":"from_owned_ptr_or_panic","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7240,"byte_end":7261,"line_start":229,"line_end":229,"column_start":51,"column_end":72},"alias_span":null,"name":"result_from_owned_ptr","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7303,"byte_end":7318,"line_start":231,"line_end":231,"column_start":9,"column_end":24},"alias_span":null,"name":"handle_callback","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7320,"byte_end":7330,"line_start":231,"line_end":231,"column_start":26,"column_end":36},"alias_span":null,"name":"py_fn_impl","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7332,"byte_end":7343,"line_start":231,"line_end":231,"column_start":38,"column_end":49},"alias_span":null,"name":"AbortOnDrop","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7332,"byte_end":7343,"line_start":231,"line_end":231,"column_start":38,"column_end":49},"alias_span":null,"name":"AbortOnDrop","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7345,"byte_end":7370,"line_start":231,"line_end":231,"column_start":51,"column_end":76},"alias_span":null,"name":"PyObjectCallbackConverter","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7345,"byte_end":7370,"line_start":231,"line_end":231,"column_start":51,"column_end":76},"alias_span":null,"name":"PyObjectCallbackConverter","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7380,"byte_end":7409,"line_start":232,"line_end":232,"column_start":9,"column_end":38},"alias_span":null,"name":"PythonObjectCallbackConverter","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7380,"byte_end":7409,"line_start":232,"line_end":232,"column_start":9,"column_end":38},"alias_span":null,"name":"PythonObjectCallbackConverter","value":"","parent":{"krate":0,"index":2326}},{"kind":"Use","ref_id":{"krate":17,"index":0},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7430,"byte_end":7435,"line_start":234,"line_end":234,"column_start":13,"column_end":18},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":2326}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1108,"byte_end":13129,"line_start":19,"line_end":412,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":95},{"krate":0,"index":167},{"krate":0,"index":283},{"krate":0,"index":347},{"krate":0,"index":440},{"krate":0,"index":551},{"krate":0,"index":653},{"krate":0,"index":1743},{"krate":0,"index":1858},{"krate":0,"index":1900},{"krate":0,"index":2192},{"krate":0,"index":2326},{"krate":0,"index":2367}],"decl_id":null,"docs":" Rust bindings to the Python interpreter.","sig":null,"attributes":[{"value":"allow(unused_imports)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1271,"byte_end":1296,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/ Rust bindings to the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1364,"byte_end":1408,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1409,"byte_end":1412,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Ownership and Lifetimes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1413,"byte_end":1442,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ In Python, all objects are implicitly reference counted.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1443,"byte_end":1503,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/ In rust, we will use the `PyObject` type to represent a reference to a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1504,"byte_end":1593,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1594,"byte_end":1597,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The method `clone_ref()` (from trait `PyClone`) can be used to create additional","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1598,"byte_end":1682,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ references to the same Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1683,"byte_end":1724,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1725,"byte_end":1728,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Because all Python objects potentially have multiple owners, the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1729,"byte_end":1797,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ concept of Rust mutability does not apply to Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1798,"byte_end":1862,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ As a result, this API will allow mutating Python objects even if they are not stored","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1863,"byte_end":1951,"line_start":36,"line_end":36,"column_start":1,"column_end":89}},{"value":"/ in a mutable Rust variable.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1952,"byte_end":1983,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1984,"byte_end":1987,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The Python interpreter uses a global interpreter lock (GIL)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":1988,"byte_end":2051,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ to ensure thread-safety.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2052,"byte_end":2080,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ This API uses a zero-sized `struct Python<'p>` as a token to indicate","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2081,"byte_end":2154,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ that a function can assume that the GIL is held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2155,"byte_end":2207,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2208,"byte_end":2211,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ You obtain a `Python` instance by acquiring the GIL,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2212,"byte_end":2268,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ and have to pass it into all operations that call into the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2269,"byte_end":2347,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2348,"byte_end":2351,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Python 2.7","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2352,"byte_end":2368,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/ The library will use the python3 bindings by default. To use the python2 bindings","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2369,"byte_end":2454,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/ you must specific the `python27` feature explicitly in your `Cargo.toml`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2455,"byte_end":2532,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2533,"byte_end":2536,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2537,"byte_end":2550,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/ [dependencies.cpython]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2551,"byte_end":2577,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ version = \"*\"","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2578,"byte_end":2595,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2596,"byte_end":2624,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ features = [\"python27-sys\"]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2625,"byte_end":2656,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2657,"byte_end":2664,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2665,"byte_end":2668,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Error Handling","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2669,"byte_end":2689,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/ The vast majority of operations in this library will return `PyResult<...>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2690,"byte_end":2770,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ This is an alias for the type `Result<..., PyErr>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2771,"byte_end":2826,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2827,"byte_end":2830,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A `PyErr` represents a Python exception. Errors within the rust-cpython library are","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2831,"byte_end":2918,"line_start":62,"line_end":62,"column_start":1,"column_end":88}},{"value":"/ also exposed as Python exceptions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2919,"byte_end":2957,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2958,"byte_end":2961,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2962,"byte_end":2975,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2976,"byte_end":2983,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use cpython::{Python, PyDict, PyResult};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":2984,"byte_end":3028,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3029,"byte_end":3032,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3033,"byte_end":3048,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/     let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3049,"byte_end":3089,"line_start":70,"line_end":70,"column_start":1,"column_end":41}},{"value":"/     hello(gil.python()).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3090,"byte_end":3127,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3128,"byte_end":3133,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3134,"byte_end":3137,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn hello(py: Python) -> PyResult<()> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3138,"byte_end":3180,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/     let sys = py.import(\"sys\")?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3181,"byte_end":3217,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/     let version: String = sys.get(py, \"version\")?.extract(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3218,"byte_end":3285,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3286,"byte_end":3289,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     let locals = PyDict::new(py);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3290,"byte_end":3327,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/     locals.set_item(py, \"os\", py.import(\"os\")?)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3328,"byte_end":3381,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/     let user: String = py.eval(\"os.getenv('USER') or os.getenv('USERNAME')\", None, Some(&locals))?.extract(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3382,"byte_end":3498,"line_start":80,"line_end":80,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3499,"byte_end":3502,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     println!(\"Hello {}, I'm Python {}\", user, version);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3503,"byte_end":3562,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3563,"byte_end":3577,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3578,"byte_end":3583,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":3584,"byte_end":3591,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4527,"byte_end":4536,"line_start":117,"line_end":117,"column_start":10,"column_end":19},"name":"Py_hash_t","qualname":"::Py_hash_t","value":"ffi::Py_hash_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4455,"byte_end":4486,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":4487,"byte_end":4517,"line_start":116,"line_end":116,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"argparse","qualname":"::argparse","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":162}],"decl_id":null,"docs":" This module contains logic for parsing a python argument list.\n See also the macros `py_argparse!`, `py_fn!` and `py_method!`.\n","sig":null,"attributes":[{"value":"/ This module contains logic for parsing a python argument list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14239,"byte_end":14305,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ See also the macros `py_argparse!`, `py_fn!` and `py_method!`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14306,"byte_end":14372,"line_start":20,"line_end":20,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14676,"byte_end":14692,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"ParamDescription","qualname":"::argparse::ParamDescription","value":"ParamDescription { name, is_optional }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" Description of a python parameter; used for `parse_args()`.\n","sig":null,"attributes":[{"value":"/ Description of a python parameter; used for `parse_args()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14601,"byte_end":14664,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14742,"byte_end":14746,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"name","qualname":"::argparse::ParamDescription::name","value":"&'a str","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" The name of the parameter.\n","sig":null,"attributes":[{"value":"/ The name of the parameter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14703,"byte_end":14733,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14808,"byte_end":14819,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"name":"is_optional","qualname":"::argparse::ParamDescription::is_optional","value":"bool","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Whether the parameter is optional.\n","sig":null,"attributes":[{"value":"/ Whether the parameter is optional.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14761,"byte_end":14799,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14915,"byte_end":14919,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"name","qualname":"<ParamDescription>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name, with leading `r#` stripped.\n","sig":null,"attributes":[{"value":"/ Name, with leading `r#` stripped.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14866,"byte_end":14903,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15322,"byte_end":15332,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"parse_args","qualname":"::argparse::parse_args","value":"pub fn parse_args(Python, Option<&str>, &[ParamDescription], &PyTuple,\n                  Option<&PyDict>, &mut [Option<PyObject>]) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Parse argument list","sig":null,"attributes":[{"value":"/ Parse argument list","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14983,"byte_end":15006,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15007,"byte_end":15010,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/  * fname:  Name of the current function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15011,"byte_end":15054,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/  * params: Declared parameters of the function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15055,"byte_end":15105,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"/  * args:   Positional arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15106,"byte_end":15141,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/  * kwargs: Keyword arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15142,"byte_end":15174,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/  * output: Output array that receives the arguments.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15175,"byte_end":15231,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/           Must have same length as `params` and must be initialized to `None`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":15232,"byte_end":15314,"line_start":52,"line_end":52,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":28969,"byte_end":28979,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"name":"get_kwargs","qualname":"::argparse::get_kwargs","value":"pub unsafe fn get_kwargs(Python, *mut ffi::PyObject) -> Option<PyDict>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":28930,"byte_end":28939,"line_start":399,"line_end":399,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":33499,"byte_end":33524,"line_start":508,"line_end":508,"column_start":8,"column_end":33},"name":"with_extracted_or_default","qualname":"::argparse::with_extracted_or_default","value":"pub fn with_extracted_or_default<P: ?Sized, R,\n                                 F>(Python, Option<&PyObject>, F, &'static P)\n-> PyResult<R> where F: FnOnce(&P) -> PyResult<R>, P: RefFromPyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":33954,"byte_end":33988,"line_start":528,"line_end":528,"column_start":8,"column_end":42},"name":"with_extracted_optional_or_default","qualname":"::argparse::with_extracted_optional_or_default","value":"pub fn with_extracted_optional_or_default<P: ?Sized, R,\n                                          F>(Python, Option<&PyObject>, F,\n                                             Option<&'static P>)\n-> PyResult<R> where F: FnOnce(Option<&P>) -> PyResult<R>, P: RefFromPyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":2369},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":37785,"byte_end":37793,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PyBuffer","qualname":"::buffer::PyBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Allows access to the underlying buffer used by a python object such as `bytes`, `bytearray` or `array.array`.\n","sig":null,"attributes":[{"value":"/ Allows access to the underlying buffer used by a python object such as `bytes`, `bytearray` or `array.array`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":37660,"byte_end":37773,"line_start":29,"line_end":29,"column_start":1,"column_end":114}}]},{"kind":"StructVariant","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38191,"byte_end":38204,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"SignedInteger","qualname":"::buffer::ElementType::SignedInteger","value":"ElementType::SignedInteger { bytes }","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38227,"byte_end":38242,"line_start":40,"line_end":40,"column_start":5,"column_end":20},"name":"UnsignedInteger","qualname":"::buffer::ElementType::UnsignedInteger","value":"ElementType::UnsignedInteger { bytes }","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38265,"byte_end":38269,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Bool","qualname":"::buffer::ElementType::Bool","value":"ElementType::Bool","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38275,"byte_end":38280,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Float","qualname":"::buffer::ElementType::Float","value":"ElementType::Float { bytes }","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38303,"byte_end":38310,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::buffer::ElementType::Unknown","value":"ElementType::Unknown","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38173,"byte_end":38184,"line_start":38,"line_end":38,"column_start":10,"column_end":21},"name":"ElementType","qualname":"::buffer::ElementType","value":"pub enum ElementType {\n    SignedInteger {\n        bytes: usize,\n    },\n    UnsignedInteger {\n        bytes: usize,\n    },\n    Bool,\n    Float {\n        bytes: usize,\n    },\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38345,"byte_end":38356,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"from_format","qualname":"<ElementType>::from_format","value":"pub fn from_format(&CStr) -> ElementType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41572,"byte_end":41579,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"name":"Element","qualname":"::buffer::Element","value":"Element","parent":null,"children":[{"krate":0,"index":220}],"decl_id":null,"docs":" Trait implemented for possible element types of `PyBuffer`.\n","sig":null,"attributes":[{"value":"/ Trait implemented for possible element types of `PyBuffer`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41491,"byte_end":41554,"line_start":151,"line_end":151,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41750,"byte_end":41770,"line_start":155,"line_end":155,"column_start":8,"column_end":28},"name":"is_compatible_format","qualname":"::buffer::Element::is_compatible_format","value":"pub fn is_compatible_format(&CStr) -> bool","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" Gets whether the element specified in the format string is potentially compatible.\n Alignment and size are checked separately from this function.\n","sig":null,"attributes":[{"value":"/ Gets whether the element specified in the format string is potentially compatible.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41586,"byte_end":41672,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ Alignment and size are checked separately from this function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41677,"byte_end":41742,"line_start":154,"line_end":154,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42077,"byte_end":42080,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<PyBuffer>::get","value":"pub fn get(Python, &PyObject) -> PyResult<PyBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying buffer from the specified python object.\n","sig":null,"attributes":[{"value":"/ Get the underlying buffer from the specified python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42002,"byte_end":42065,"line_start":165,"line_end":165,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42685,"byte_end":42692,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"buf_ptr","qualname":"<PyBuffer>::buf_ptr","value":"pub fn buf_ptr(&Self) -> *mut libc::c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets the pointer to the start of the buffer memory.","sig":null,"attributes":[{"value":"/ Gets the pointer to the start of the buffer memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42456,"byte_end":42511,"line_start":178,"line_end":178,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42516,"byte_end":42519,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Warning: the buffer memory might be mutated by other Python functions,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42524,"byte_end":42598,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ and thus may only be accessed while the GIL is held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42603,"byte_end":42659,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42664,"byte_end":42673,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42933,"byte_end":42940,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"get_ptr","qualname":"<PyBuffer>::get_ptr","value":"pub fn get_ptr(&Self, &[usize]) -> *mut libc::c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets a pointer to the specified item.","sig":null,"attributes":[{"value":"/ Gets a pointer to the specified item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42753,"byte_end":42794,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42799,"byte_end":42802,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If `indices.len() < self.dimensions()`, returns the start address of the sub-array at the specified dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":42807,"byte_end":42921,"line_start":189,"line_end":189,"column_start":5,"column_end":119}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43448,"byte_end":43456,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"readonly","qualname":"<PyBuffer>::readonly","value":"pub fn readonly(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the underlying buffer is read-only.\n","sig":null,"attributes":[{"value":"/ Gets whether the underlying buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43370,"byte_end":43422,"line_start":203,"line_end":203,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43427,"byte_end":43436,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43686,"byte_end":43695,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"item_size","qualname":"<PyBuffer>::item_size","value":"pub fn item_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of a single element, in bytes.\n Important exception: when requesting an unformatted buffer, item_size still has the value\n","sig":null,"attributes":[{"value":"/ Gets the size of a single element, in bytes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43514,"byte_end":43562,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ Important exception: when requesting an unformatted buffer, item_size still has the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43567,"byte_end":43660,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43665,"byte_end":43674,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43819,"byte_end":43829,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"item_count","qualname":"<PyBuffer>::item_count","value":"pub fn item_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the total number of items.\n","sig":null,"attributes":[{"value":"/ Gets the total number of items.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43758,"byte_end":43793,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43798,"byte_end":43807,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44199,"byte_end":44208,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"len_bytes","qualname":"<PyBuffer>::len_bytes","value":"pub fn len_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" `item_size() * item_count()`.\n For contiguous arrays, this is the length of the underlying memory block.\n For non-contiguous arrays, it is the length that the logical structure would have if it were copied to a contiguous representation.\n","sig":null,"attributes":[{"value":"/ `item_size() * item_count()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43918,"byte_end":43951,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/ For contiguous arrays, this is the length of the underlying memory block.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":43956,"byte_end":44033,"line_start":223,"line_end":223,"column_start":5,"column_end":82}},{"value":"/ For non-contiguous arrays, it is the length that the logical structure would have if it were copied to a contiguous representation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44038,"byte_end":44173,"line_start":224,"line_end":224,"column_start":5,"column_end":140}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44178,"byte_end":44187,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44386,"byte_end":44396,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<PyBuffer>::dimensions","value":"pub fn dimensions(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of dimensions.","sig":null,"attributes":[{"value":"/ Gets the number of dimensions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44266,"byte_end":44300,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44305,"byte_end":44308,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ May be 0 to indicate a single scalar value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44313,"byte_end":44360,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44365,"byte_end":44374,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44970,"byte_end":44975,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"shape","qualname":"<PyBuffer>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array of length `dimensions`. `shape()[i]` is the length of the array in dimension number `i`.","sig":null,"attributes":[{"value":"/ Returns an array of length `dimensions`. `shape()[i]` is the length of the array in dimension number `i`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44455,"byte_end":44564,"line_start":238,"line_end":238,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44569,"byte_end":44572,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ May return None for single-dimensional arrays or scalar values (`dimensions() <= 1`);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44577,"byte_end":44666,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ You can call `item_count()` to get the length of the single dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44671,"byte_end":44745,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44750,"byte_end":44753,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Despite Python using an array of signed integers, the values are guaranteed to be non-negative.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44758,"byte_end":44857,"line_start":243,"line_end":243,"column_start":5,"column_end":104}},{"value":"/ However, dimensions of length 0 are possible and might need special attention.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44862,"byte_end":44944,"line_start":244,"line_end":244,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":44949,"byte_end":44958,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45426,"byte_end":45433,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"strides","qualname":"<PyBuffer>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array that holds, for each dimension, the number of bytes to skip to get to the next element in the dimension.","sig":null,"attributes":[{"value":"/ Returns an array that holds, for each dimension, the number of bytes to skip to get to the next element in the dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45101,"byte_end":45226,"line_start":250,"line_end":250,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45231,"byte_end":45234,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Stride values can be any integer. For regular arrays, strides are usually positive,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45239,"byte_end":45326,"line_start":252,"line_end":252,"column_start":5,"column_end":92}},{"value":"/ but a consumer MUST be able to handle the case `strides[n] <= 0`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45331,"byte_end":45400,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45405,"byte_end":45414,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46041,"byte_end":46051,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"suboffsets","qualname":"<PyBuffer>::suboffsets","value":"pub fn suboffsets(&Self) -> Option<&[isize]>","parent":null,"children":[],"decl_id":null,"docs":" An array of length ndim.\n If suboffsets[n] >= 0, the values stored along the nth dimension are pointers and the suboffset value dictates how many bytes to add to each pointer after de-referencing.\n A suboffset value that is negative indicates that no de-referencing should occur (striding in a contiguous memory block).","sig":null,"attributes":[{"value":"/ An array of length ndim.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45545,"byte_end":45573,"line_start":259,"line_end":259,"column_start":5,"column_end":33}},{"value":"/ If suboffsets[n] >= 0, the values stored along the nth dimension are pointers and the suboffset value dictates how many bytes to add to each pointer after de-referencing.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45578,"byte_end":45752,"line_start":260,"line_end":260,"column_start":5,"column_end":179}},{"value":"/ A suboffset value that is negative indicates that no de-referencing should occur (striding in a contiguous memory block).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45757,"byte_end":45882,"line_start":261,"line_end":261,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45887,"byte_end":45890,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If all suboffsets are negative (i.e. no de-referencing is needed), then this field must be NULL (the default value).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":45895,"byte_end":46015,"line_start":263,"line_end":263,"column_start":5,"column_end":125}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46020,"byte_end":46029,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46489,"byte_end":46495,"line_start":280,"line_end":280,"column_start":12,"column_end":18},"name":"format","qualname":"<PyBuffer>::format","value":"pub fn format(&Self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":" A NUL terminated string in struct module style syntax describing the contents of a single item.\n","sig":null,"attributes":[{"value":"/ A NUL terminated string in struct module style syntax describing the contents of a single item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46364,"byte_end":46463,"line_start":278,"line_end":278,"column_start":5,"column_end":104}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46468,"byte_end":46477,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46825,"byte_end":46840,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"is_c_contiguous","qualname":"<PyBuffer>::is_c_contiguous","value":"pub fn is_c_contiguous(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the buffer is contiguous in C-style order (last index varies fastest when visiting items in order of memory address).\n","sig":null,"attributes":[{"value":"/ Gets whether the buffer is contiguous in C-style order (last index varies fastest when visiting items in order of memory address).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46665,"byte_end":46799,"line_start":288,"line_end":288,"column_start":5,"column_end":139}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":46804,"byte_end":46813,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47310,"byte_end":47331,"line_start":302,"line_end":302,"column_start":12,"column_end":33},"name":"is_fortran_contiguous","qualname":"<PyBuffer>::is_fortran_contiguous","value":"pub fn is_fortran_contiguous(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the buffer is contiguous in Fortran-style order (first index varies fastest when visiting items in order of memory address).\n","sig":null,"attributes":[{"value":"/ Gets whether the buffer is contiguous in Fortran-style order (first index varies fastest when visiting items in order of memory address).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47143,"byte_end":47284,"line_start":300,"line_end":300,"column_start":5,"column_end":146}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47289,"byte_end":47298,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48085,"byte_end":48093,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<PyBuffer>::as_slice","value":"pub fn as_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [ReadOnlyCell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47634,"byte_end":47672,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47677,"byte_end":47680,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47685,"byte_end":47715,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47720,"byte_end":47767,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47772,"byte_end":47858,"line_start":316,"line_end":316,"column_start":5,"column_end":91}},{"value":"/  * the buffer is C-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47863,"byte_end":47902,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47907,"byte_end":47910,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":47915,"byte_end":48030,"line_start":319,"line_end":319,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48035,"byte_end":48073,"line_start":320,"line_end":320,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49128,"byte_end":49140,"line_start":348,"line_end":348,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<PyBuffer>::as_mut_slice","value":"pub fn as_mut_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [cell::Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48638,"byte_end":48676,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48681,"byte_end":48684,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48689,"byte_end":48719,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/  * the buffer is not read-only","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48724,"byte_end":48758,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48763,"byte_end":48810,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48815,"byte_end":48901,"line_start":343,"line_end":343,"column_start":5,"column_end":91}},{"value":"/  * the buffer is C-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48906,"byte_end":48945,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48950,"byte_end":48953,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":48958,"byte_end":49073,"line_start":346,"line_end":346,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49078,"byte_end":49116,"line_start":347,"line_end":347,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50170,"byte_end":50186,"line_start":375,"line_end":375,"column_start":12,"column_end":28},"name":"as_fortran_slice","qualname":"<PyBuffer>::as_fortran_slice","value":"pub fn as_fortran_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [ReadOnlyCell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49713,"byte_end":49751,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49756,"byte_end":49759,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49764,"byte_end":49794,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49799,"byte_end":49846,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49851,"byte_end":49937,"line_start":370,"line_end":370,"column_start":5,"column_end":91}},{"value":"/  * the buffer is Fortran-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49942,"byte_end":49987,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":49992,"byte_end":49995,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50000,"byte_end":50115,"line_start":373,"line_end":373,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50120,"byte_end":50158,"line_start":374,"line_end":374,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51256,"byte_end":51276,"line_start":405,"line_end":405,"column_start":12,"column_end":32},"name":"as_fortran_mut_slice","qualname":"<PyBuffer>::as_fortran_mut_slice","value":"pub fn as_fortran_mut_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [cell::Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50760,"byte_end":50798,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50803,"byte_end":50806,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50811,"byte_end":50841,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/  * the buffer is not read-only","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50846,"byte_end":50880,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50885,"byte_end":50932,"line_start":399,"line_end":399,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":50937,"byte_end":51023,"line_start":400,"line_end":400,"column_start":5,"column_end":91}},{"value":"/  * the buffer is Fortran-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51028,"byte_end":51073,"line_start":401,"line_end":401,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51078,"byte_end":51081,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51086,"byte_end":51201,"line_start":403,"line_end":403,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51206,"byte_end":51244,"line_start":404,"line_end":404,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52449,"byte_end":52462,"line_start":435,"line_end":435,"column_start":12,"column_end":25},"name":"copy_to_slice","qualname":"<PyBuffer>::copy_to_slice","value":"pub fn copy_to_slice<T: Element + Copy>(&Self, Python, &mut [T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to the specified slice.\n If the buffer is multi-dimensional, the elements are written in C-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to the specified slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51878,"byte_end":51932,"line_start":426,"line_end":426,"column_start":5,"column_end":59}},{"value":"/ If the buffer is multi-dimensional, the elements are written in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":51937,"byte_end":52019,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52024,"byte_end":52027,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52032,"byte_end":52112,"line_start":429,"line_end":429,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52117,"byte_end":52183,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52188,"byte_end":52191,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52196,"byte_end":52276,"line_start":432,"line_end":432,"column_start":5,"column_end":85}},{"value":"/ you can use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52281,"byte_end":52358,"line_start":433,"line_end":433,"column_start":5,"column_end":82}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52363,"byte_end":52437,"line_start":434,"line_end":434,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":53175,"byte_end":53196,"line_start":448,"line_end":448,"column_start":12,"column_end":33},"name":"copy_to_fortran_slice","qualname":"<PyBuffer>::copy_to_fortran_slice","value":"pub fn copy_to_fortran_slice<T: Element + Copy>(&Self, Python, &mut [T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to the specified slice.\n If the buffer is multi-dimensional, the elements are written in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to the specified slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52598,"byte_end":52652,"line_start":439,"line_end":439,"column_start":5,"column_end":59}},{"value":"/ If the buffer is multi-dimensional, the elements are written in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52657,"byte_end":52745,"line_start":440,"line_end":440,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52750,"byte_end":52753,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52758,"byte_end":52838,"line_start":442,"line_end":442,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52843,"byte_end":52909,"line_start":443,"line_end":443,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52914,"byte_end":52917,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":52922,"byte_end":53002,"line_start":445,"line_end":445,"column_start":5,"column_end":85}},{"value":"/ you can use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":53007,"byte_end":53084,"line_start":446,"line_end":446,"column_start":5,"column_end":82}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":53089,"byte_end":53163,"line_start":447,"line_end":447,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54390,"byte_end":54396,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<PyBuffer>::to_vec","value":"pub fn to_vec<T: Element + Copy>(&Self, Python) -> PyResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to a newly allocated vector.\n If the buffer is multi-dimensional, the elements are written in C-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to a newly allocated vector.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54156,"byte_end":54215,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/ If the buffer is multi-dimensional, the elements are written in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54220,"byte_end":54302,"line_start":482,"line_end":482,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54307,"byte_end":54310,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54315,"byte_end":54378,"line_start":484,"line_end":484,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54743,"byte_end":54757,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"to_fortran_vec","qualname":"<PyBuffer>::to_fortran_vec","value":"pub fn to_fortran_vec<T: Element + Copy>(&Self, Python) -> PyResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to a newly allocated vector.\n If the buffer is multi-dimensional, the elements are written in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to a newly allocated vector.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54503,"byte_end":54562,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/ If the buffer is multi-dimensional, the elements are written in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54567,"byte_end":54655,"line_start":490,"line_end":490,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54660,"byte_end":54663,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":54668,"byte_end":54731,"line_start":492,"line_end":492,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56520,"byte_end":56535,"line_start":532,"line_end":532,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<PyBuffer>::copy_from_slice","value":"pub fn copy_from_slice<T: Element + Copy>(&Self, Python, &[T]) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the specified slice into the buffer.\n If the buffer is multi-dimensional, the elements in the slice are expected to be in C-style order.","sig":null,"attributes":[{"value":"/ Copies the specified slice into the buffer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":55899,"byte_end":55946,"line_start":522,"line_end":522,"column_start":5,"column_end":52}},{"value":"/ If the buffer is multi-dimensional, the elements in the slice are expected to be in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":55951,"byte_end":56053,"line_start":523,"line_end":523,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56058,"byte_end":56061,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/  * Fails if the buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56066,"byte_end":56106,"line_start":525,"line_end":525,"column_start":5,"column_end":45}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56111,"byte_end":56191,"line_start":526,"line_end":526,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56196,"byte_end":56262,"line_start":527,"line_end":527,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56267,"byte_end":56270,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56275,"byte_end":56355,"line_start":529,"line_end":529,"column_start":5,"column_end":85}},{"value":"/ use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56360,"byte_end":56429,"line_start":530,"line_end":530,"column_start":5,"column_end":74}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56434,"byte_end":56508,"line_start":531,"line_end":531,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":57296,"byte_end":57319,"line_start":546,"line_end":546,"column_start":12,"column_end":35},"name":"copy_from_fortran_slice","qualname":"<PyBuffer>::copy_from_fortran_slice","value":"pub fn copy_from_fortran_slice<T: Element + Copy>(&Self, Python, &[T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the specified slice into the buffer.\n If the buffer is multi-dimensional, the elements in the slice are expected to be in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the specified slice into the buffer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56669,"byte_end":56716,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/ If the buffer is multi-dimensional, the elements in the slice are expected to be in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56721,"byte_end":56829,"line_start":537,"line_end":537,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56834,"byte_end":56837,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/  * Fails if the buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56842,"byte_end":56882,"line_start":539,"line_end":539,"column_start":5,"column_end":45}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56887,"byte_end":56967,"line_start":540,"line_end":540,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":56972,"byte_end":57038,"line_start":541,"line_end":541,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":57043,"byte_end":57046,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":57051,"byte_end":57131,"line_start":543,"line_end":543,"column_start":5,"column_end":85}},{"value":"/ use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":57136,"byte_end":57205,"line_start":544,"line_end":544,"column_start":5,"column_end":74}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":57210,"byte_end":57284,"line_start":545,"line_end":545,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59469,"byte_end":59481,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"ReadOnlyCell","qualname":"::buffer::ReadOnlyCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `std::mem::cell`, but only provides read-only access to the data.","sig":null,"attributes":[{"value":"/ Like `std::mem::cell`, but only provides read-only access to the data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59204,"byte_end":59278,"line_start":618,"line_end":618,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59279,"byte_end":59282,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ `&ReadOnlyCell<T>` is basically a safe version of `*const T`:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59283,"byte_end":59348,"line_start":620,"line_end":620,"column_start":1,"column_end":66}},{"value":"/  The data cannot be modified through the reference, but other references may","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59349,"byte_end":59429,"line_start":621,"line_end":621,"column_start":1,"column_end":81}},{"value":"/  be modifying the data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59430,"byte_end":59457,"line_start":622,"line_end":622,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59565,"byte_end":59568,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"get","qualname":"<ReadOnlyCell<T>>::get","value":"pub fn get(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59544,"byte_end":59553,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59648,"byte_end":59654,"line_start":632,"line_end":632,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ReadOnlyCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59627,"byte_end":59636,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65596,"byte_end":65606,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"ToPyObject","qualname":"::conversion::ToPyObject","value":"ToPyObject","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" Conversion trait that allows various objects to be converted into Python objects.","sig":null,"attributes":[{"value":"/ Conversion trait that allows various objects to be converted into Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65086,"byte_end":65171,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65172,"byte_end":65175,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note: The associated type `ObjectType` is used so that some Rust types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65176,"byte_end":65250,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ convert to a more precise type of Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65251,"byte_end":65303,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ For example, `[T]::to_py_object()` will result in a `PyList`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65304,"byte_end":65369,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ You can always calls `val.to_py_object(py).into_py_object()` in order to obtain `PyObject`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65370,"byte_end":65464,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ (the second into_py_object() call via the PythonObject trait corresponds to the upcast from `PyList` to `PyObject`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65465,"byte_end":65585,"line_start":30,"line_end":30,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65618,"byte_end":65628,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"name":"ObjectType","qualname":"::conversion::ToPyObject::ObjectType","value":"type ObjectType: PythonObject;","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65696,"byte_end":65708,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"to_py_object","qualname":"::conversion::ToPyObject::to_py_object","value":"pub fn to_py_object(&Self, Python) -> Self::ObjectType","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Converts self into a Python object.\n","sig":null,"attributes":[{"value":"/ Converts self into a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65649,"byte_end":65688,"line_start":34,"line_end":34,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65940,"byte_end":65954,"line_start":42,"line_end":42,"column_start":8,"column_end":22},"name":"into_py_object","qualname":"::conversion::ToPyObject::into_py_object","value":"pub fn into_py_object(Self, Python) -> Self::ObjectType where Self: Sized","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Converts self into a Python object.","sig":null,"attributes":[{"value":"/ Converts self into a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65754,"byte_end":65793,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65798,"byte_end":65801,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ May be more efficient than `to_py_object` in some cases because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65806,"byte_end":65873,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ it can move out of the input object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65878,"byte_end":65918,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":65923,"byte_end":65932,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66398,"byte_end":66415,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"with_borrowed_ptr","qualname":"::conversion::ToPyObject::with_borrowed_ptr","value":"pub fn with_borrowed_ptr<F, R>(&Self, Python, F) -> R where\nF: FnOnce(*mut ffi::PyObject) -> R","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Converts self into a Python object and calls the specified closure\n on the native FFI pointer underlying the Python object.","sig":null,"attributes":[{"value":"/ Converts self into a Python object and calls the specified closure","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66071,"byte_end":66141,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ on the native FFI pointer underlying the Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66146,"byte_end":66205,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66210,"byte_end":66213,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ May be more efficient than `to_py_object` because it does not need","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66218,"byte_end":66288,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ to touch any reference counts when the input object already is a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66293,"byte_end":66376,"line_start":53,"line_end":53,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":66381,"byte_end":66390,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68405,"byte_end":68417,"line_start":102,"line_end":102,"column_start":11,"column_end":23},"name":"FromPyObject","qualname":"::conversion::FromPyObject","value":"FromPyObject<'s>: Sized","parent":null,"children":[{"krate":0,"index":318}],"decl_id":null,"docs":" FromPyObject is implemented by various types that can be extracted from a Python object.","sig":null,"attributes":[{"value":"/ FromPyObject is implemented by various types that can be extracted from a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67503,"byte_end":67595,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67596,"byte_end":67599,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Normal usage is through the `PyObject::extract` helper method:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67600,"byte_end":67666,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ ```let obj: PyObject = ...;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67667,"byte_end":67698,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"/ let value = obj.extract::<TargetType>(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67699,"byte_end":67746,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67747,"byte_end":67754,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67755,"byte_end":67758,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Each target type for this conversion supports a different Python objects as input.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67759,"byte_end":67845,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/ Calls with an unsupported input object will result in an exception (usually a `TypeError`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67846,"byte_end":67941,"line_start":94,"line_end":94,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67942,"byte_end":67945,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This trait is also used by the `py_fn!` and `py_class!` and `py_argparse!` macros","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":67946,"byte_end":68031,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ in order to translate from Python objects to the expected Rust parameter types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68032,"byte_end":68115,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ For example, the parameter `x` in `def method(self, x: i32)` will use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68116,"byte_end":68189,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/ `impl FromPyObject for i32` to convert the input Python object into a Rust `i32`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68190,"byte_end":68275,"line_start":99,"line_end":99,"column_start":1,"column_end":86}},{"value":"/ When these macros are used with reference parameters (`x: &str`), the trait","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68276,"byte_end":68355,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ `RefFromPyObject` is used instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68356,"byte_end":68394,"line_start":101,"line_end":101,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68490,"byte_end":68497,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"extract","qualname":"::conversion::FromPyObject::extract","value":"pub fn extract(Python, &'s PyObject) -> PyResult<Self>","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Extracts `Self` from the source `PyObject`.\n","sig":null,"attributes":[{"value":"/ Extracts `Self` from the source `PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68435,"byte_end":68482,"line_start":103,"line_end":103,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69810,"byte_end":69825,"line_start":131,"line_end":131,"column_start":11,"column_end":26},"name":"RefFromPyObject","qualname":"::conversion::RefFromPyObject","value":"RefFromPyObject","parent":null,"children":[{"krate":0,"index":320}],"decl_id":null,"docs":" RefFromPyObject is implemented by various types that can be extracted\n as a reference from a Python object.\n Depending on the input object, the reference may point into memory owned\n by the Python interpreter; or into a temporary object.","sig":null,"attributes":[{"value":"/ RefFromPyObject is implemented by various types that can be extracted","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68605,"byte_end":68678,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/ as a reference from a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68679,"byte_end":68719,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ Depending on the input object, the reference may point into memory owned","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68720,"byte_end":68796,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ by the Python interpreter; or into a temporary object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68797,"byte_end":68855,"line_start":112,"line_end":112,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68856,"byte_end":68859,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```let obj: PyObject = ...;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68860,"byte_end":68891,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ let sum_of_bytes = <[u8] as RefFromPyObject>::with_extracted(py, obj,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68892,"byte_end":68965,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/     |data: &[u8]| data.iter().sum()","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68966,"byte_end":69005,"line_start":116,"line_end":116,"column_start":1,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69006,"byte_end":69012,"line_start":117,"line_end":117,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69013,"byte_end":69020,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ A lambda has to be used because the slice may refer to temporary object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69021,"byte_end":69096,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ that exists only during the `with_extracted` call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69097,"byte_end":69151,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69152,"byte_end":69155,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Each target type for this conversion supports a different Python objects as input.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69156,"byte_end":69242,"line_start":122,"line_end":122,"column_start":1,"column_end":87}},{"value":"/ Calls with an unsupported input object will result in an exception (usually a `TypeError`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69243,"byte_end":69338,"line_start":123,"line_end":123,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69339,"byte_end":69342,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This trait is also used by the `py_fn!` and `py_class!` and `py_argparse!` macros","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69343,"byte_end":69428,"line_start":125,"line_end":125,"column_start":1,"column_end":86}},{"value":"/ in order to translate from Python objects to the expected Rust parameter types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69429,"byte_end":69512,"line_start":126,"line_end":126,"column_start":1,"column_end":84}},{"value":"/ For example, the parameter `x` in `def method(self, x: &[u8])` will use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69513,"byte_end":69588,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ `impl RefFromPyObject for [u8]` to convert the input Python object into a Rust `&[u8]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69589,"byte_end":69680,"line_start":128,"line_end":128,"column_start":1,"column_end":92}},{"value":"/ When these macros are used with non-reference parameters (`x: i32`), the trait","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69681,"byte_end":69763,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ `FromPyObject` is used instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69764,"byte_end":69799,"line_start":130,"line_end":130,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69835,"byte_end":69849,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"with_extracted","qualname":"::conversion::RefFromPyObject::with_extracted","value":"pub fn with_extracted<F, R>(Python, &PyObject, F) -> PyResult<R> where\nF: FnOnce(&Self) -> R","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78412,"byte_end":78417,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"PyErr","qualname":"::err::PyErr","value":"PyErr { ptype, pvalue, ptraceback }","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433}],"decl_id":null,"docs":" Represents a Python exception that was raised.\n","sig":null,"attributes":[{"value":"/ Represents a Python exception that was raised.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78333,"byte_end":78383,"line_start":142,"line_end":142,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78512,"byte_end":78517,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"ptype","qualname":"::err::PyErr::ptype","value":"objects::object::PyObject","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" The type of the exception. This should be either a `PyClass` or a `PyType`.\n","sig":null,"attributes":[{"value":"/ The type of the exception. This should be either a `PyClass` or a `PyType`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78424,"byte_end":78503,"line_start":145,"line_end":145,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78845,"byte_end":78851,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"pvalue","qualname":"::err::PyErr::pvalue","value":"std::option::Option<objects::object::PyObject>","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" The value of the exception.","sig":null,"attributes":[{"value":"/ The value of the exception.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78533,"byte_end":78564,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78569,"byte_end":78572,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This can be either an instance of `ptype`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78577,"byte_end":78623,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"/ a tuple of arguments to be passed to `ptype`'s constructor,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78628,"byte_end":78691,"line_start":150,"line_end":150,"column_start":5,"column_end":68}},{"value":"/ or a single argument to be passed to `ptype`'s constructor.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78696,"byte_end":78759,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/ Call `PyErr::instance()` to get the exception instance in all cases.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78764,"byte_end":78836,"line_start":152,"line_end":152,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78939,"byte_end":78949,"line_start":155,"line_end":155,"column_start":9,"column_end":19},"name":"ptraceback","qualname":"::err::PyErr::ptraceback","value":"std::option::Option<objects::object::PyObject>","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" The `PyTraceBack` object associated with the error.\n","sig":null,"attributes":[{"value":"/ The `PyTraceBack` object associated with the error.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78875,"byte_end":78930,"line_start":154,"line_end":154,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79025,"byte_end":79033,"line_start":159,"line_end":159,"column_start":10,"column_end":18},"name":"PyResult","qualname":"::err::PyResult","value":"Result<T, PyErr>","parent":null,"children":[],"decl_id":null,"docs":" Represents the result of a Python call.\n","sig":null,"attributes":[{"value":"/ Represents the result of a Python call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":78972,"byte_end":79015,"line_start":158,"line_end":158,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79593,"byte_end":79596,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<PyErr>::new","value":"pub fn new<T, V>(Python, V) -> PyErr where T: PythonObjectWithTypeObject,\nV: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new PyErr of type `T`.","sig":null,"attributes":[{"value":"/ Creates a new PyErr of type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79075,"byte_end":79111,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79116,"byte_end":79119,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ `value` can be:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79124,"byte_end":79143,"line_start":164,"line_end":164,"column_start":5,"column_end":24}},{"value":"/  * `NoArgs`: the exception instance will be created using python `T()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79148,"byte_end":79222,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/  * a tuple: the exception instance will be created using python `T(*tuple)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79227,"byte_end":79306,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/  * any other value: the exception instance will be created using python `T(value)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79311,"byte_end":79397,"line_start":167,"line_end":167,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79402,"byte_end":79405,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Panics if `T` is not a python class derived from `BaseException`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79410,"byte_end":79479,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79484,"byte_end":79487,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79492,"byte_end":79504,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/  `return Err(PyErr::new::<exc::TypeError, _>(py, \"Error message\"));`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79509,"byte_end":79581,"line_start":172,"line_end":172,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79915,"byte_end":79923,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"occurred","qualname":"<PyErr>::occurred","value":"pub fn occurred(Python) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether an error is present in the Python interpreter's global state.\n","sig":null,"attributes":[{"value":"/ Gets whether an error is present in the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79811,"byte_end":79889,"line_start":181,"line_end":181,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79894,"byte_end":79903,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80343,"byte_end":80351,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"new_type","qualname":"<PyErr>::new_type","value":"pub fn new_type(Python, &str, Option<PyObject>, Option<PyObject>) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new exception type with the given name, which must be of the form\n `<module>.<ExceptionName>`, as required by `PyErr_NewException`.","sig":null,"attributes":[{"value":"/ Creates a new exception type with the given name, which must be of the form","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80008,"byte_end":80087,"line_start":187,"line_end":187,"column_start":5,"column_end":84}},{"value":"/ `<module>.<ExceptionName>`, as required by `PyErr_NewException`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80092,"byte_end":80160,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80165,"byte_end":80168,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ `base` can be an existing exception type to subclass, or a tuple of classes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80173,"byte_end":80252,"line_start":190,"line_end":190,"column_start":5,"column_end":84}},{"value":"/ `dict` specifies an optional dictionary of class variables and methods","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":80257,"byte_end":80331,"line_start":191,"line_end":191,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":81287,"byte_end":81292,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"fetch","qualname":"<PyErr>::fetch","value":"pub fn fetch(Python) -> PyErr","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the current error from the Python interpreter's global state.\n The error is cleared from the Python interpreter.\n If no error is set, returns a `SystemError`.\n","sig":null,"attributes":[{"value":"/ Retrieves the current error from the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":81089,"byte_end":81164,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ The error is cleared from the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":81169,"byte_end":81222,"line_start":217,"line_end":217,"column_start":5,"column_end":58}},{"value":"/ If no error is set, returns a `SystemError`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":81227,"byte_end":81275,"line_start":218,"line_end":218,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82950,"byte_end":82963,"line_start":262,"line_end":262,"column_start":12,"column_end":25},"name":"from_instance","qualname":"<PyErr>::from_instance","value":"pub fn from_instance<O>(Python, O) -> PyErr where O: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new PyErr.","sig":null,"attributes":[{"value":"/ Creates a new PyErr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82655,"byte_end":82679,"line_start":257,"line_end":257,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82684,"byte_end":82687,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ `obj` must be an Python exception instance, the PyErr will use that instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82692,"byte_end":82773,"line_start":259,"line_end":259,"column_start":5,"column_end":86}},{"value":"/ If `obj` is a Python exception type object, the PyErr will (lazily) create a new instance of that type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82778,"byte_end":82885,"line_start":260,"line_end":260,"column_start":5,"column_end":112}},{"value":"/ Otherwise, a `TypeError` is created instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":82890,"byte_end":82938,"line_start":261,"line_end":261,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84403,"byte_end":84416,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"new_lazy_init","qualname":"<PyErr>::new_lazy_init","value":"pub fn new_lazy_init(PyType, Option<PyObject>) -> PyErr","parent":null,"children":[],"decl_id":null,"docs":" Construct a new error, with the usual lazy initialization of Python exceptions.\n `exc` is the exception type; usually one of the standard exceptions like `py.get_type::<exc::RuntimeError>()`.\n `value` is the exception instance, or a tuple of arguments to pass to the exception constructor.\n","sig":null,"attributes":[{"value":"/ Construct a new error, with the usual lazy initialization of Python exceptions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84070,"byte_end":84153,"line_start":297,"line_end":297,"column_start":5,"column_end":88}},{"value":"/ `exc` is the exception type; usually one of the standard exceptions like `py.get_type::<exc::RuntimeError>()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84158,"byte_end":84272,"line_start":298,"line_end":298,"column_start":5,"column_end":119}},{"value":"/ `value` is the exception instance, or a tuple of arguments to pass to the exception constructor.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84277,"byte_end":84377,"line_start":299,"line_end":299,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84382,"byte_end":84391,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84655,"byte_end":84660,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"name":"print","qualname":"<PyErr>::print","value":"pub fn print(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Print a standard traceback to sys.stderr.\n","sig":null,"attributes":[{"value":"/ Print a standard traceback to sys.stderr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84598,"byte_end":84643,"line_start":309,"line_end":309,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84816,"byte_end":84843,"line_start":316,"line_end":316,"column_start":12,"column_end":39},"name":"print_and_set_sys_last_vars","qualname":"<PyErr>::print_and_set_sys_last_vars","value":"pub fn print_and_set_sys_last_vars(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Print a standard traceback to sys.stderr.\n","sig":null,"attributes":[{"value":"/ Print a standard traceback to sys.stderr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84759,"byte_end":84804,"line_start":315,"line_end":315,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":85243,"byte_end":85250,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"matches","qualname":"<PyErr>::matches","value":"pub fn matches<T>(&Self, Python, T) -> bool where T: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return true if the current exception matches the exception in `exc`.\n If `exc` is a class object, this also returns `true` when `self` is an instance of a subclass.\n If `exc` is a tuple, all exceptions in the tuple (and recursively in subtuples) are searched for a match.\n","sig":null,"attributes":[{"value":"/ Return true if the current exception matches the exception in `exc`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":84942,"byte_end":85014,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ If `exc` is a class object, this also returns `true` when `self` is an instance of a subclass.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":85019,"byte_end":85117,"line_start":322,"line_end":322,"column_start":5,"column_end":103}},{"value":"/ If `exc` is a tuple, all exceptions in the tuple (and recursively in subtuples) are searched for a match.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":85122,"byte_end":85231,"line_start":323,"line_end":323,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":85588,"byte_end":85597,"line_start":334,"line_end":334,"column_start":12,"column_end":21},"name":"normalize","qualname":"<PyErr>::normalize","value":"pub fn normalize(&mut Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the error. This ensures that the exception value is an instance of the exception type.\n","sig":null,"attributes":[{"value":"/ Normalizes the error. This ensures that the exception value is an instance of the exception type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":85475,"byte_end":85576,"line_start":333,"line_end":333,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87180,"byte_end":87188,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"get_type","qualname":"<PyErr>::get_type","value":"pub fn get_type(&Self, Python) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the exception type.\n","sig":null,"attributes":[{"value":"/ Retrieves the exception type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87093,"byte_end":87126,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"cfg(not(feature = \"python27-sys\"))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87131,"byte_end":87168,"line_start":375,"line_end":375,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87573,"byte_end":87581,"line_start":386,"line_end":386,"column_start":12,"column_end":20},"name":"instance","qualname":"<PyErr>::instance","value":"pub fn instance(&mut Self, Python) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the exception instance for this error.\n This method takes `&mut self` because the error might need\n to be normalized in order to create the exception instance.\n","sig":null,"attributes":[{"value":"/ Retrieves the exception instance for this error.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87374,"byte_end":87426,"line_start":383,"line_end":383,"column_start":5,"column_end":57}},{"value":"/ This method takes `&mut self` because the error might need","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87431,"byte_end":87493,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/ to be normalized in order to create the exception instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87498,"byte_end":87561,"line_start":385,"line_end":385,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87928,"byte_end":87935,"line_start":397,"line_end":397,"column_start":12,"column_end":19},"name":"restore","qualname":"<PyErr>::restore","value":"pub fn restore(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Writes the error back to the Python interpreter's global state.\n This is the opposite of `PyErr::fetch()`.\n","sig":null,"attributes":[{"value":"/ Writes the error back to the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87785,"byte_end":87852,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ This is the opposite of `PyErr::fetch()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87857,"byte_end":87902,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":87907,"byte_end":87916,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88357,"byte_end":88361,"line_start":414,"line_end":414,"column_start":12,"column_end":16},"name":"warn","qualname":"<PyErr>::warn","value":"pub fn warn(Python, &PyObject, &str, i32) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Issue a warning message.\n May return a PyErr if warnings-as-errors is enabled.\n","sig":null,"attributes":[{"value":"/ Issue a warning message.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88256,"byte_end":88284,"line_start":412,"line_end":412,"column_start":5,"column_end":33}},{"value":"/ May return a PyErr if warnings-as-errors is enabled.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88289,"byte_end":88345,"line_start":413,"line_end":413,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89968,"byte_end":89989,"line_start":465,"line_end":465,"column_start":15,"column_end":36},"name":"result_from_owned_ptr","qualname":"::err::result_from_owned_ptr","value":"pub unsafe fn result_from_owned_ptr(Python, *mut ffi::PyObject)\n-> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Construct PyObject from the result of a Python FFI call that returns a new reference (owned pointer).\n Returns `Err(PyErr)` if the pointer is `null`.\n Unsafe because the pointer might be invalid.\n","sig":null,"attributes":[{"value":"/ Construct PyObject from the result of a Python FFI call that returns a new reference (owned pointer).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89738,"byte_end":89843,"line_start":461,"line_end":461,"column_start":1,"column_end":106}},{"value":"/ Returns `Err(PyErr)` if the pointer is `null`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89844,"byte_end":89894,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/ Unsafe because the pointer might be invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89895,"byte_end":89943,"line_start":463,"line_end":463,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89944,"byte_end":89953,"line_start":464,"line_end":464,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":90321,"byte_end":90344,"line_start":481,"line_end":481,"column_start":15,"column_end":38},"name":"from_owned_ptr_or_panic","qualname":"::err::from_owned_ptr_or_panic","value":"pub unsafe fn from_owned_ptr_or_panic(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":90297,"byte_end":90306,"line_start":480,"line_end":480,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98126,"byte_end":98136,"line_start":162,"line_end":162,"column_start":15,"column_end":25},"name":"py_fn_impl","qualname":"::function::py_fn_impl","value":"pub unsafe fn py_fn_impl(Python, *mut ffi::PyMethodDef) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98299,"byte_end":98316,"line_start":166,"line_end":166,"column_start":11,"column_end":28},"name":"CallbackConverter","qualname":"::function::CallbackConverter","value":"CallbackConverter<S>","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98331,"byte_end":98332,"line_start":167,"line_end":167,"column_start":10,"column_end":11},"name":"R","qualname":"::function::CallbackConverter::R","value":"type R;","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98342,"byte_end":98349,"line_start":169,"line_end":169,"column_start":8,"column_end":15},"name":"convert","qualname":"::function::CallbackConverter::convert","value":"pub fn convert(S, Python) -> Self::R","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98389,"byte_end":98400,"line_start":170,"line_end":170,"column_start":8,"column_end":19},"name":"error_value","qualname":"::function::CallbackConverter::error_value","value":"pub fn error_value() -> Self::R","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98429,"byte_end":98454,"line_start":173,"line_end":173,"column_start":12,"column_end":37},"name":"PyObjectCallbackConverter","qualname":"::function::PyObjectCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98803,"byte_end":98832,"line_start":191,"line_end":191,"column_start":12,"column_end":41},"name":"PythonObjectCallbackConverter","qualname":"::function::PythonObjectCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98836,"byte_end":98862,"line_start":191,"line_end":191,"column_start":45,"column_end":71},"name":"0","qualname":"::function::PythonObjectCallbackConverter::0","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":99262,"byte_end":99277,"line_start":210,"line_end":210,"column_start":15,"column_end":30},"name":"handle_callback","qualname":"::function::handle_callback","value":"pub unsafe fn handle_callback<F, T, C>(&str, C, F) -> C::R where\nF: FnOnce(Python) -> PyResult<T>, F: panic::UnwindSafe,\nC: CallbackConverter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":100269,"byte_end":100280,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"AbortOnDrop","qualname":"::function::AbortOnDrop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":100285,"byte_end":100296,"line_start":246,"line_end":246,"column_start":28,"column_end":39},"name":"0","qualname":"::function::AbortOnDrop::0","value":"&'a str","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":101976,"byte_end":101990,"line_start":30,"line_end":30,"column_start":11,"column_end":25},"name":"ObjectProtocol","qualname":"::objectprotocol::ObjectProtocol","value":"ObjectProtocol: PythonObject","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":644}],"decl_id":null,"docs":" Trait that contains methods\n","sig":null,"attributes":[{"value":"/ Trait that contains methods","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":101934,"byte_end":101965,"line_start":29,"line_end":29,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102172,"byte_end":102179,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"hasattr","qualname":"::objectprotocol::ObjectProtocol::hasattr","value":"pub fn hasattr<N>(&Self, Python, N) -> PyResult<bool> where N: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Determines whether this object has the given attribute.\n This is equivalent to the Python expression 'hasattr(self, attr_name)'.\n","sig":null,"attributes":[{"value":"/ Determines whether this object has the given attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102011,"byte_end":102070,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/ This is equivalent to the Python expression 'hasattr(self, attr_name)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102075,"byte_end":102150,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102155,"byte_end":102164,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102550,"byte_end":102557,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"getattr","qualname":"::objectprotocol::ObjectProtocol::getattr","value":"pub fn getattr<N>(&Self, Python, N) -> PyResult<PyObject> where N: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Retrieves an attribute value.\n This is equivalent to the Python expression 'self.attr_name'.\n","sig":null,"attributes":[{"value":"/ Retrieves an attribute value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102425,"byte_end":102458,"line_start":43,"line_end":43,"column_start":5,"column_end":38}},{"value":"/ This is equivalent to the Python expression 'self.attr_name'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102463,"byte_end":102528,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102533,"byte_end":102542,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102958,"byte_end":102965,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"setattr","qualname":"::objectprotocol::ObjectProtocol::setattr","value":"pub fn setattr<N, V>(&Self, Python, N, V) -> PyResult<()> where N: ToPyObject,\nV: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Sets an attribute value.\n This is equivalent to the Python expression 'self.attr_name = value'.\n","sig":null,"attributes":[{"value":"/ Sets an attribute value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102830,"byte_end":102858,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/ This is equivalent to the Python expression 'self.attr_name = value'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102863,"byte_end":102936,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":102941,"byte_end":102950,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103466,"byte_end":103473,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"delattr","qualname":"::objectprotocol::ObjectProtocol::delattr","value":"pub fn delattr<N>(&Self, Python, N) -> PyResult<()> where N: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Deletes an attribute.\n This is equivalent to the Python expression 'del self.attr_name'.\n","sig":null,"attributes":[{"value":"/ Deletes an attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103345,"byte_end":103370,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/ This is equivalent to the Python expression 'del self.attr_name'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103375,"byte_end":103444,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103449,"byte_end":103458,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104196,"byte_end":104203,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"compare","qualname":"::objectprotocol::ObjectProtocol::compare","value":"pub fn compare<O>(&Self, Python, O) -> PyResult<Ordering> where O: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Compares two Python objects.","sig":null,"attributes":[{"value":"/ Compares two Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103736,"byte_end":103768,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103773,"byte_end":103776,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ On Python 2, this is equivalent to the Python expression 'cmp(self, other)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103781,"byte_end":103861,"line_start":84,"line_end":84,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103866,"byte_end":103869,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ On Python 3, this is equivalent to:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103874,"byte_end":103913,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103918,"byte_end":103931,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ if self == other:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103936,"byte_end":103957,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     return Equal","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103962,"byte_end":103982,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/ elif a < b:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":103987,"byte_end":104002,"line_start":90,"line_end":90,"column_start":5,"column_end":20}},{"value":"/     return Less","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104007,"byte_end":104026,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ elif a > b:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104031,"byte_end":104046,"line_start":92,"line_end":92,"column_start":5,"column_end":20}},{"value":"/     return Greater","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104051,"byte_end":104073,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ else:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104078,"byte_end":104087,"line_start":94,"line_end":94,"column_start":5,"column_end":14}},{"value":"/     raise TypeError(\"ObjectProtocol::compare(): All comparisons returned false\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104092,"byte_end":104176,"line_start":95,"line_end":95,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":104181,"byte_end":104188,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106441,"byte_end":106453,"line_start":160,"line_end":160,"column_start":8,"column_end":20},"name":"rich_compare","qualname":"::objectprotocol::ObjectProtocol::rich_compare","value":"pub fn rich_compare<O>(&Self, Python, O, crate::CompareOp)\n-> PyResult<PyObject> where O: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Compares two Python objects.","sig":null,"attributes":[{"value":"/ Compares two Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106034,"byte_end":106066,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106071,"byte_end":106074,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Depending on the value of `compare_op`, equivalent to one of the following Python expressions:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106079,"byte_end":106177,"line_start":153,"line_end":153,"column_start":5,"column_end":103}},{"value":"/   * CompareOp::Eq: `self == other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106182,"byte_end":106220,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Ne: `self != other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106225,"byte_end":106263,"line_start":155,"line_end":155,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Lt: `self < other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106268,"byte_end":106305,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/   * CompareOp::Le: `self <= other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106310,"byte_end":106348,"line_start":157,"line_end":157,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Gt: `self > other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106353,"byte_end":106390,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/   * CompareOp::Ge: `self >= other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106395,"byte_end":106433,"line_start":159,"line_end":159,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106996,"byte_end":107000,"line_start":180,"line_end":180,"column_start":8,"column_end":12},"name":"repr","qualname":"::objectprotocol::ObjectProtocol::repr","value":"pub fn repr(&Self, Python) -> PyResult<PyString>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Compute the string representation of self.\n This is equivalent to the Python expression 'repr(self)'.\n","sig":null,"attributes":[{"value":"/ Compute the string representation of self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106862,"byte_end":106908,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/ This is equivalent to the Python expression 'repr(self)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106913,"byte_end":106974,"line_start":178,"line_end":178,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":106979,"byte_end":106988,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107278,"byte_end":107281,"line_start":187,"line_end":187,"column_start":8,"column_end":11},"name":"str","qualname":"::objectprotocol::ObjectProtocol::str","value":"pub fn str(&Self, Python) -> PyResult<PyString>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Compute the string representation of self.\n This is equivalent to the Python expression 'str(self)'.\n","sig":null,"attributes":[{"value":"/ Compute the string representation of self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107145,"byte_end":107191,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/ This is equivalent to the Python expression 'str(self)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107196,"byte_end":107256,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107261,"byte_end":107270,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107846,"byte_end":107857,"line_start":201,"line_end":201,"column_start":8,"column_end":19},"name":"is_callable","qualname":"::objectprotocol::ObjectProtocol::is_callable","value":"pub fn is_callable(&Self, Python) -> bool","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Determines whether this object is callable.\n","sig":null,"attributes":[{"value":"/ Determines whether this object is callable.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107777,"byte_end":107824,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107829,"byte_end":107838,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108344,"byte_end":108348,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"call","qualname":"::objectprotocol::ObjectProtocol::call","value":"pub fn call<A>(&Self, Python, A, Option<&PyDict>) -> PyResult<PyObject> where\nA: ToPyObject<ObjectType = PyTuple>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Calls the object.\n This is equivalent to the Python expression: 'self(*args, **kwargs)'","sig":null,"attributes":[{"value":"/ Calls the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107960,"byte_end":107981,"line_start":205,"line_end":205,"column_start":5,"column_end":26}},{"value":"/ This is equivalent to the Python expression: 'self(*args, **kwargs)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":107986,"byte_end":108058,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108063,"byte_end":108066,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108071,"byte_end":108151,"line_start":208,"line_end":208,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108156,"byte_end":108190,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108195,"byte_end":108263,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108268,"byte_end":108322,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108327,"byte_end":108336,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109532,"byte_end":109543,"line_start":243,"line_end":243,"column_start":8,"column_end":19},"name":"call_method","qualname":"::objectprotocol::ObjectProtocol::call_method","value":"pub fn call_method<A>(&Self, Python, &str, A, Option<&PyDict>)\n-> PyResult<PyObject> where A: ToPyObject<ObjectType = PyTuple>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Calls a method on the object.\n This is equivalent to the Python expression: 'self.name(*args, **kwargs)'","sig":null,"attributes":[{"value":"/ Calls a method on the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108662,"byte_end":108695,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/ This is equivalent to the Python expression: 'self.name(*args, **kwargs)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108700,"byte_end":108777,"line_start":223,"line_end":223,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108782,"byte_end":108785,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108790,"byte_end":108870,"line_start":225,"line_end":225,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108875,"byte_end":108909,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108914,"byte_end":108982,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":108987,"byte_end":109041,"line_start":228,"line_end":228,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109046,"byte_end":109049,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109054,"byte_end":109067,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109072,"byte_end":109085,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/ use cpython::{NoArgs, ObjectProtocol};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109090,"byte_end":109132,"line_start":232,"line_end":232,"column_start":5,"column_end":47}},{"value":"/ # use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109137,"byte_end":109163,"line_start":233,"line_end":233,"column_start":5,"column_end":31}},{"value":"/ # let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109168,"byte_end":109206,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ # let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109211,"byte_end":109239,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/ # let obj = py.None();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109244,"byte_end":109270,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ // Call method without arguments:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109275,"byte_end":109312,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/ let value = obj.call_method(py, \"method0\", NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109317,"byte_end":109387,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ // Call method with a single argument:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109392,"byte_end":109434,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ obj.call_method(py, \"method1\", (true,), None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109439,"byte_end":109498,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109503,"byte_end":109510,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109515,"byte_end":109524,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109938,"byte_end":109942,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"hash","qualname":"::objectprotocol::ObjectProtocol::hash","value":"pub fn hash(&Self, Python) -> PyResult<crate::Py_hash_t>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Retrieves the hash code of the object.\n This is equivalent to the Python expression: 'hash(self)'\n","sig":null,"attributes":[{"value":"/ Retrieves the hash code of the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109808,"byte_end":109850,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ This is equivalent to the Python expression: 'hash(self)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109855,"byte_end":109916,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":109921,"byte_end":109930,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110313,"byte_end":110320,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"is_true","qualname":"::objectprotocol::ObjectProtocol::is_true","value":"pub fn is_true(&Self, Python) -> PyResult<bool>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Returns whether the object is considered to be true.\n This is equivalent to the Python expression: 'not not self'\n","sig":null,"attributes":[{"value":"/ Returns whether the object is considered to be true.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110167,"byte_end":110223,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/ This is equivalent to the Python expression: 'not not self'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110228,"byte_end":110291,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110296,"byte_end":110305,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110677,"byte_end":110680,"line_start":283,"line_end":283,"column_start":8,"column_end":11},"name":"len","qualname":"::objectprotocol::ObjectProtocol::len","value":"pub fn len(&Self, Python) -> PyResult<usize>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Returns the length of the sequence or mapping.\n This is equivalent to the Python expression: 'len(self)'\n","sig":null,"attributes":[{"value":"/ Returns the length of the sequence or mapping.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110540,"byte_end":110590,"line_start":280,"line_end":280,"column_start":5,"column_end":55}},{"value":"/ This is equivalent to the Python expression: 'len(self)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110595,"byte_end":110655,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110660,"byte_end":110669,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110985,"byte_end":110993,"line_start":294,"line_end":294,"column_start":8,"column_end":16},"name":"get_item","qualname":"::objectprotocol::ObjectProtocol::get_item","value":"pub fn get_item<K>(&Self, Python, K) -> PyResult<PyObject> where K: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" This is equivalent to the Python expression: 'self[key]'\n","sig":null,"attributes":[{"value":"/ This is equivalent to the Python expression: 'self[key]'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110903,"byte_end":110963,"line_start":292,"line_end":292,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":110968,"byte_end":110977,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111360,"byte_end":111368,"line_start":306,"line_end":306,"column_start":8,"column_end":16},"name":"set_item","qualname":"::objectprotocol::ObjectProtocol::set_item","value":"pub fn set_item<K, V>(&Self, Python, K, V) -> PyResult<()> where\nK: ToPyObject, V: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Sets an item value.\n This is equivalent to the Python expression 'self[key] = value'.\n","sig":null,"attributes":[{"value":"/ Sets an item value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111242,"byte_end":111265,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/ This is equivalent to the Python expression 'self[key] = value'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111270,"byte_end":111338,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111343,"byte_end":111352,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111835,"byte_end":111843,"line_start":321,"line_end":321,"column_start":8,"column_end":16},"name":"del_item","qualname":"::objectprotocol::ObjectProtocol::del_item","value":"pub fn del_item<K>(&Self, Python, K) -> PyResult<()> where K: ToPyObject","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Deletes an item.\n This is equivalent to the Python expression 'del self[key]'.\n","sig":null,"attributes":[{"value":"/ Deletes an item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111724,"byte_end":111744,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/ This is equivalent to the Python expression 'del self[key]'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111749,"byte_end":111813,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":111818,"byte_end":111827,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112261,"byte_end":112265,"line_start":334,"line_end":334,"column_start":8,"column_end":12},"name":"iter","qualname":"::objectprotocol::ObjectProtocol::iter","value":"pub fn iter<'p>(&Self, Python) -> PyResult<crate::objects::PyIterator>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Takes an object and returns an iterator for it.\n This is typically a new iterator but if the argument\n is an iterator, this returns itself.\n","sig":null,"attributes":[{"value":"/ Takes an object and returns an iterator for it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112082,"byte_end":112133,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/ This is typically a new iterator but if the argument","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112138,"byte_end":112194,"line_start":331,"line_end":331,"column_start":5,"column_end":61}},{"value":"/ is an iterator, this returns itself.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112199,"byte_end":112239,"line_start":332,"line_end":332,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112244,"byte_end":112253,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":119941,"byte_end":119947,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"PyBool","qualname":"::objects::boolobject::PyBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `bool`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `bool`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":119898,"byte_end":119929,"line_start":7,"line_end":7,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120119,"byte_end":120122,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"get","qualname":"<PyBool>::get","value":"pub fn get(Python, bool) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Depending on `val`, returns `py.True()` or `py.False()`.\n","sig":null,"attributes":[{"value":"/ Depending on `val`, returns `py.True()` or `py.False()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120033,"byte_end":120093,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120098,"byte_end":120107,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120324,"byte_end":120331,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"is_true","qualname":"<PyBool>::is_true","value":"pub fn is_true(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether this boolean is `true`.\n","sig":null,"attributes":[{"value":"/ Gets whether this boolean is `true`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120258,"byte_end":120298,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120303,"byte_end":120312,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128746,"byte_end":128755,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"PyCapsule","qualname":"::objects::capsule::PyCapsule","value":"","parent":null,"children":[],"decl_id":null,"docs":" Capsules are the preferred way to export/import C APIs between extension modules,\n see [Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#using-capsules).","sig":null,"attributes":[{"value":"/ Capsules are the preferred way to export/import C APIs between extension modules,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122207,"byte_end":122292,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ see [Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#using-capsules).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122293,"byte_end":122412,"line_start":13,"line_end":13,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122413,"byte_end":122416,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ In particular, capsules can be very useful to start adding Rust extensions besides","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122417,"byte_end":122503,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ existing traditional C ones, be it for gradual rewrites or to extend with new functionality.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122504,"byte_end":122600,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ They can also be used for interaction between independently compiled Rust extensions if needed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122601,"byte_end":122700,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122701,"byte_end":122704,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Capsules can point to data, usually static arrays of constants and function pointers,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122705,"byte_end":122794,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ or to function pointers directly. These two cases have to be handled differently in Rust,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122795,"byte_end":122888,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ and the latter is possible only for architectures were data and function pointers have","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122889,"byte_end":122979,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ the same sizes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":122980,"byte_end":122999,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123000,"byte_end":123003,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123004,"byte_end":123018,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ ## Using a capsule defined in another extension module","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123019,"byte_end":123077,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ This retrieves and use one of the simplest capsules in the Python standard library, found in","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123078,"byte_end":123174,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ the `unicodedata` module. The C API enclosed in this capsule is the same for all Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123175,"byte_end":123266,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ versions supported by this crate. This is not the case of all capsules from the standard","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123267,"byte_end":123359,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ library. For instance the `struct` referenced by `datetime.datetime_CAPI` gets a new member","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123360,"byte_end":123455,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/ in version 3.7.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123456,"byte_end":123475,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123476,"byte_end":123479,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note: this example is a lower-level version of the [`py_capsule!`] example. Only the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123480,"byte_end":123568,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ capsule retrieval actually differs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123569,"byte_end":123608,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123609,"byte_end":123616,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use cpython::{Python, PyCapsule};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123617,"byte_end":123654,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ use libc::{c_void, c_char, c_int};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123655,"byte_end":123693,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ use std::ffi::{CStr, CString};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123694,"byte_end":123728,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123729,"byte_end":123746,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ use std::ptr::null;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123747,"byte_end":123770,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123771,"byte_end":123774,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123775,"byte_end":123809,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ type Py_UCS4 = u32;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123810,"byte_end":123833,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ const UNICODE_NAME_MAXLEN: usize = 256;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123834,"byte_end":123877,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123878,"byte_end":123881,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123882,"byte_end":123896,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ pub struct unicode_name_CAPI {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123897,"byte_end":123931,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/     // the `ucd` signature arguments are actually optional (can be `NULL`) FFI PyObject","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":123932,"byte_end":124023,"line_start":47,"line_end":47,"column_start":1,"column_end":92}},{"value":"/     // pointers used to pass alternate (former) versions of Unicode data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124024,"byte_end":124101,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/     // We won't need to use them with an actual value in these examples, so it's enough to","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124102,"byte_end":124196,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/     // specify them as `*const c_void`, and it spares us a direct reference to the lower","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124197,"byte_end":124289,"line_start":50,"line_end":50,"column_start":1,"column_end":93}},{"value":"/     // level Python FFI bindings.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124290,"byte_end":124327,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/     size: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124328,"byte_end":124348,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/     getname: unsafe extern \"C\" fn(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124349,"byte_end":124387,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/         ucd: *const c_void,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124388,"byte_end":124419,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         code: Py_UCS4,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124420,"byte_end":124446,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/         buffer: *const c_char,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124447,"byte_end":124481,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/         buflen: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124482,"byte_end":124508,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/         with_alias_and_seq: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124509,"byte_end":124547,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/     ) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124548,"byte_end":124567,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/     getcode: unsafe extern \"C\" fn(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124568,"byte_end":124606,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/         ucd: *const c_void,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124607,"byte_end":124638,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/         name: *const c_char,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124639,"byte_end":124671,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/         namelen: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124672,"byte_end":124699,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/         code: *const Py_UCS4,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124700,"byte_end":124733,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/     ) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124734,"byte_end":124753,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124754,"byte_end":124759,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124760,"byte_end":124763,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124764,"byte_end":124795,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ pub enum UnicodeDataError {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124796,"byte_end":124827,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     InvalidCode,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124828,"byte_end":124848,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/     UnknownName,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124849,"byte_end":124869,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124870,"byte_end":124875,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124876,"byte_end":124879,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ impl unicode_name_CAPI {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124880,"byte_end":124908,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/     pub fn get_name(&self, code: Py_UCS4) -> Result<CString, UnicodeDataError> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124909,"byte_end":124993,"line_start":75,"line_end":75,"column_start":1,"column_end":85}},{"value":"/         let mut buf: Vec<c_char> = Vec::with_capacity(UNICODE_NAME_MAXLEN);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":124994,"byte_end":125073,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/         let buf_ptr = buf.as_mut_ptr();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125074,"byte_end":125117,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/         if unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125118,"byte_end":125141,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/           ((*self).getname)(null(), code, buf_ptr, UNICODE_NAME_MAXLEN as c_int, 0)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125142,"byte_end":125229,"line_start":79,"line_end":79,"column_start":1,"column_end":88}},{"value":"/         } != 1 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125230,"byte_end":125250,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/             return Err(UnicodeDataError::InvalidCode);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125251,"byte_end":125309,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125310,"byte_end":125323,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/         mem::forget(buf);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125324,"byte_end":125353,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/         Ok(unsafe { CString::from_raw(buf_ptr) })","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125354,"byte_end":125407,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125408,"byte_end":125417,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125418,"byte_end":125421,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     pub fn get_code(&self, name: &CStr) -> Result<Py_UCS4, UnicodeDataError> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125422,"byte_end":125504,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/         let namelen = name.to_bytes().len() as c_int;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125505,"byte_end":125562,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/         let mut code: [Py_UCS4; 1] = [0; 1];","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125563,"byte_end":125611,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/         if unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125612,"byte_end":125635,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/             ((*self).getcode)(null(), name.as_ptr(), namelen, code.as_mut_ptr())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125636,"byte_end":125720,"line_start":91,"line_end":91,"column_start":1,"column_end":85}},{"value":"/         } != 1 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125721,"byte_end":125741,"line_start":92,"line_end":92,"column_start":1,"column_end":21}},{"value":"/             return Err(UnicodeDataError::UnknownName);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125742,"byte_end":125800,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125801,"byte_end":125814,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/         Ok(code[0])","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125815,"byte_end":125838,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125839,"byte_end":125848,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125849,"byte_end":125854,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125855,"byte_end":125858,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125859,"byte_end":125895,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/ let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125896,"byte_end":125922,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125923,"byte_end":125926,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let capi: &unicode_name_CAPI = unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125927,"byte_end":125970,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/     PyCapsule::import_data(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":125971,"byte_end":126002,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/         py,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126003,"byte_end":126018,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/         CStr::from_bytes_with_nul_unchecked(b\"unicodedata.ucnhash_CAPI\\0\"),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126019,"byte_end":126098,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/     )","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126099,"byte_end":126108,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126109,"byte_end":126114,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ .unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126115,"byte_end":126129,"line_start":108,"line_end":108,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126130,"byte_end":126133,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(capi.get_name(32).unwrap().to_str(), Ok(\"SPACE\"));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126134,"byte_end":126199,"line_start":110,"line_end":110,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(capi.get_name(0), Err(UnicodeDataError::InvalidCode));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126200,"byte_end":126269,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126270,"byte_end":126273,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126274,"byte_end":126289,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"/     capi.get_code(CStr::from_bytes_with_nul(b\"COMMA\\0\").unwrap()),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126290,"byte_end":126360,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/     Ok(44)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126361,"byte_end":126375,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126376,"byte_end":126382,"line_start":116,"line_end":116,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126383,"byte_end":126398,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/     capi.get_code(CStr::from_bytes_with_nul(b\"\\0\").unwrap()),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126399,"byte_end":126464,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"/     Err(UnicodeDataError::UnknownName)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126465,"byte_end":126507,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126508,"byte_end":126514,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126515,"byte_end":126522,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126523,"byte_end":126526,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Creating a capsule from Rust","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126527,"byte_end":126562,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/ In this example, we enclose some data and a function in a capsule, using an intermediate","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126563,"byte_end":126655,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ `struct` as enclosing type, then retrieve them back and use them.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126656,"byte_end":126725,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126726,"byte_end":126729,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Warning: you definitely need to declare the data as `static`. If it's","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126730,"byte_end":126803,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ only `const`, it's possible it would get cloned elsewhere, with the orginal","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126804,"byte_end":126883,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ location being deallocated before it's actually used from another Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126884,"byte_end":126960,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ extension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126961,"byte_end":126975,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126976,"byte_end":126979,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126980,"byte_end":126983,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126984,"byte_end":126991,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use libc::{c_void, c_int};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":126992,"byte_end":127022,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ use cpython::{PyCapsule, Python};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127023,"byte_end":127060,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use std::ffi::{CStr, CString};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127061,"byte_end":127095,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127096,"byte_end":127099,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127100,"byte_end":127114,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/ struct CapsData {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127115,"byte_end":127136,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/     value: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127137,"byte_end":127158,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/     fun: fn(c_int, c_int) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127159,"byte_end":127198,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127199,"byte_end":127204,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127205,"byte_end":127208,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ fn add(a: c_int, b: c_int) -> c_int {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127209,"byte_end":127250,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127251,"byte_end":127264,"line_start":145,"line_end":145,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127265,"byte_end":127270,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127271,"byte_end":127274,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ static DATA: CapsData = CapsData{value: 1, fun: add};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127275,"byte_end":127332,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127333,"byte_end":127336,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127337,"byte_end":127352,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/     let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127353,"byte_end":127393,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/     let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127394,"byte_end":127424,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/     let caps = PyCapsule::new_data(py, &DATA, \"somemod.capsdata\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127425,"byte_end":127504,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127505,"byte_end":127508,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/     let retrieved: &CapsData = unsafe {caps.data_ref(\"somemod.capsdata\")}.unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127509,"byte_end":127596,"line_start":155,"line_end":155,"column_start":1,"column_end":88}},{"value":"/     assert_eq!(retrieved.value, 1);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127597,"byte_end":127636,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/     assert_eq!((retrieved.fun)(2 as c_int, 3 as c_int), 5);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127637,"byte_end":127700,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127701,"byte_end":127706,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127707,"byte_end":127714,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127715,"byte_end":127718,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Of course, a more realistic example would be to store the capsule in a Python module,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127719,"byte_end":127808,"line_start":161,"line_end":161,"column_start":1,"column_end":90}},{"value":"/ allowing another extension (possibly foreign) to retrieve and use it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127809,"byte_end":127882,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ Note that in that case, the capsule `name` must be full dotted name of the capsule object,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127883,"byte_end":127977,"line_start":163,"line_end":163,"column_start":1,"column_end":95}},{"value":"/ as we're doing here.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":127978,"byte_end":128002,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128003,"byte_end":128010,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ # use libc::c_int;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128011,"byte_end":128033,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/ # use cpython::{PyCapsule, py_module_initializer};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128034,"byte_end":128088,"line_start":167,"line_end":167,"column_start":1,"column_end":55}},{"value":"/ # #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128089,"byte_end":128105,"line_start":168,"line_end":168,"column_start":1,"column_end":17}},{"value":"/ # struct CapsData {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128106,"byte_end":128129,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/ #     value: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128130,"byte_end":128153,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"/ #     fun: fn(c_int, c_int) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128154,"byte_end":128195,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128196,"byte_end":128203,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # fn add(a: c_int, b: c_int) -> c_int {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128204,"byte_end":128247,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/ #     a + b","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128248,"byte_end":128263,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128264,"byte_end":128271,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ # static DATA: CapsData = CapsData{value: 1, fun: add};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128272,"byte_end":128331,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/ py_module_initializer!(somemod, |py, m| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128332,"byte_end":128377,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/   m.add(py, \"__doc__\", \"A module holding a capsule\")?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128378,"byte_end":128436,"line_start":178,"line_end":178,"column_start":1,"column_end":59}},{"value":"/   m.add(py, \"capsdata\", PyCapsule::new_data(py, &DATA, \"somemod.capsdata\").unwrap())?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128437,"byte_end":128527,"line_start":179,"line_end":179,"column_start":1,"column_end":91}},{"value":"/   Ok(())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128528,"byte_end":128540,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128541,"byte_end":128548,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128549,"byte_end":128567,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128568,"byte_end":128575,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ Another Rust extension could then declare `CapsData` and use `PyCapsule::import_data` to","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128576,"byte_end":128668,"line_start":184,"line_end":184,"column_start":1,"column_end":93}},{"value":"/ fetch it back.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128669,"byte_end":128687,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128688,"byte_end":128691,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`py_capsule!`]: macro.py_capsule.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":128692,"byte_end":128734,"line_start":187,"line_end":187,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141274,"byte_end":141285,"line_start":531,"line_end":531,"column_start":19,"column_end":30},"name":"import_data","qualname":"<PyCapsule>::import_data","value":"pub unsafe fn import_data<'a, T>(Python, &CStr) -> PyResult<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the contents of a capsule pointing to some data as a reference.","sig":null,"attributes":[{"value":"/ Retrieve the contents of a capsule pointing to some data as a reference.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140675,"byte_end":140751,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140756,"byte_end":140759,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The retrieved data would typically be an array of static data and/or function pointers.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140764,"byte_end":140855,"line_start":522,"line_end":522,"column_start":5,"column_end":96}},{"value":"/ This method doesn't work for standalone function pointers.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140860,"byte_end":140922,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140927,"byte_end":140930,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140935,"byte_end":140947,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/ This method is unsafe, because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140952,"byte_end":140986,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ - nothing guarantees that the `T` type is appropriate for the data referenced by the capsule","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140991,"byte_end":141087,"line_start":527,"line_end":527,"column_start":5,"column_end":101}},{"value":"/   pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141092,"byte_end":141105,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ - the returned lifetime doesn't guarantee either to cover the actual lifetime of the data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141110,"byte_end":141203,"line_start":529,"line_end":529,"column_start":5,"column_end":98}},{"value":"/   (although capsule data is usually static)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141208,"byte_end":141255,"line_start":530,"line_end":530,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141839,"byte_end":141845,"line_start":542,"line_end":542,"column_start":12,"column_end":18},"name":"import","qualname":"<PyCapsule>::import","value":"pub fn import(Python, &CStr) -> PyResult<*const c_void>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the contents of a capsule as a void pointer by its name.","sig":null,"attributes":[{"value":"/ Retrieves the contents of a capsule as a void pointer by its name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141402,"byte_end":141472,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141477,"byte_end":141480,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This is suitable in particular for later conversion as a function pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141485,"byte_end":141562,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ with `mem::transmute`, for architectures where data and function pointers have","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141567,"byte_end":141649,"line_start":538,"line_end":538,"column_start":5,"column_end":87}},{"value":"/ the same size (see details about this in the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141654,"byte_end":141702,"line_start":539,"line_end":539,"column_start":5,"column_end":53}},{"value":"/ [documentation](https://doc.rust-lang.org/std/mem/fn.transmute.html#examples)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141707,"byte_end":141788,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ of the Rust standard library).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":141793,"byte_end":141827,"line_start":541,"line_end":541,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142334,"byte_end":142342,"line_start":557,"line_end":557,"column_start":12,"column_end":20},"name":"new_data","qualname":"<PyCapsule>::new_data","value":"pub fn new_data<T, N>(Python, &'static T, N) -> Result<Self, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to create a capsule for some data","sig":null,"attributes":[{"value":"/ Convenience method to create a capsule for some data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142086,"byte_end":142142,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142147,"byte_end":142150,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The encapsuled data may be an array of functions, but it can't be itself a","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142155,"byte_end":142233,"line_start":552,"line_end":552,"column_start":5,"column_end":83}},{"value":"/ function directly.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142238,"byte_end":142260,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142265,"byte_end":142268,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ May panic when running out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142273,"byte_end":142314,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142319,"byte_end":142322,"line_start":556,"line_end":556,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143072,"byte_end":143075,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"new","qualname":"<PyCapsule>::new","value":"pub fn new<N>(Python, *const c_void, N) -> Result<Self, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new capsule from a raw void pointer","sig":null,"attributes":[{"value":"/ Creates a new capsule from a raw void pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142530,"byte_end":142579,"line_start":564,"line_end":564,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142584,"byte_end":142587,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This is suitable in particular to store a function pointer in a capsule. These","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142592,"byte_end":142674,"line_start":566,"line_end":566,"column_start":5,"column_end":87}},{"value":"/ can be obtained simply by a simple cast:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142679,"byte_end":142723,"line_start":567,"line_end":567,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142728,"byte_end":142731,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142736,"byte_end":142743,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use libc::c_void;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142748,"byte_end":142769,"line_start":570,"line_end":570,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142774,"byte_end":142777,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ extern \"C\" fn inc(a: i32) -> i32 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142782,"byte_end":142820,"line_start":572,"line_end":572,"column_start":5,"column_end":43}},{"value":"/     a + 1","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142825,"byte_end":142838,"line_start":573,"line_end":573,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142843,"byte_end":142848,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142853,"byte_end":142856,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142861,"byte_end":142876,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     let ptr = inc as *const c_void;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142881,"byte_end":142920,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142925,"byte_end":142930,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142935,"byte_end":142942,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142947,"byte_end":142950,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142955,"byte_end":142967,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/ This method returns `NulError` if `name` contains a 0 byte (see also `CString::new`)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":142972,"byte_end":143060,"line_start":582,"line_end":582,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144377,"byte_end":144385,"line_start":614,"line_end":614,"column_start":19,"column_end":27},"name":"data_ref","qualname":"<PyCapsule>::data_ref","value":"pub unsafe fn data_ref<'a, T, N>(&Self, N) -> Result<&'a T, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the capsule data.","sig":null,"attributes":[{"value":"/ Returns a reference to the capsule data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143639,"byte_end":143683,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143688,"byte_end":143691,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The name must match exactly the one given at capsule creation time (see `new_data`) and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143696,"byte_end":143787,"line_start":602,"line_end":602,"column_start":5,"column_end":96}},{"value":"/ is converted to a C string under the hood. If that's too much overhead, consider using","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143792,"byte_end":143882,"line_start":603,"line_end":603,"column_start":5,"column_end":95}},{"value":"/ `data_ref_cstr()` or caching strategies.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143887,"byte_end":143931,"line_start":604,"line_end":604,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143936,"byte_end":143939,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ This is unsafe, because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143944,"byte_end":143971,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/ - nothing guarantees that the `T` type is appropriate for the data referenced by the capsule","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":143976,"byte_end":144072,"line_start":607,"line_end":607,"column_start":5,"column_end":101}},{"value":"/   pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144077,"byte_end":144090,"line_start":608,"line_end":608,"column_start":5,"column_end":18}},{"value":"/ - the returned lifetime doesn't guarantee either to cover the actual lifetime of the data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144095,"byte_end":144188,"line_start":609,"line_end":609,"column_start":5,"column_end":98}},{"value":"/   (although capsule data is usually static)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144193,"byte_end":144240,"line_start":610,"line_end":610,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144245,"byte_end":144248,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144253,"byte_end":144265,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/ This method returns `NulError` if `name` contains a 0 byte (see also `CString::new`)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144270,"byte_end":144358,"line_start":613,"line_end":613,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144847,"byte_end":144860,"line_start":626,"line_end":626,"column_start":19,"column_end":32},"name":"data_ref_cstr","qualname":"<PyCapsule>::data_ref_cstr","value":"pub unsafe fn data_ref_cstr<'a, T>(&Self, &CStr) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the capsule data.","sig":null,"attributes":[{"value":"/ Returns a reference to the capsule data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144545,"byte_end":144589,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144594,"byte_end":144597,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This is identical to `data_ref`, except for the name passing. This allows to use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144602,"byte_end":144686,"line_start":623,"line_end":623,"column_start":5,"column_end":89}},{"value":"/ lower level constructs without overhead, such as `CStr::from_bytes_with_nul_unchecked`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144691,"byte_end":144781,"line_start":624,"line_end":624,"column_start":5,"column_end":95}},{"value":"/ or the `cstr!` macro of `rust-cpython`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":144786,"byte_end":144828,"line_start":625,"line_end":625,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146351,"byte_end":146357,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"PyDict","qualname":"::objects::dict::PyDict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `dict`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `dict`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146308,"byte_end":146339,"line_start":27,"line_end":27,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146544,"byte_end":146547,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<PyDict>::new","value":"pub fn new(Python) -> PyDict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty dictionary.","sig":null,"attributes":[{"value":"/ Creates a new empty dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146443,"byte_end":146478,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146483,"byte_end":146486,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ May panic when running out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146491,"byte_end":146532,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146793,"byte_end":146797,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"copy","qualname":"<PyDict>::copy","value":"pub fn copy(&Self, Python) -> PyResult<PyDict>","parent":null,"children":[],"decl_id":null,"docs":" Return a new dictionary that contains the same key-value pairs as self.\n Corresponds to `dict(self)` in Python.\n","sig":null,"attributes":[{"value":"/ Return a new dictionary that contains the same key-value pairs as self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146659,"byte_end":146734,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ Corresponds to `dict(self)` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146739,"byte_end":146781,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147022,"byte_end":147027,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"clear","qualname":"<PyDict>::clear","value":"pub fn clear(&Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Empty an existing dictionary of all key-value pairs.\n","sig":null,"attributes":[{"value":"/ Empty an existing dictionary of all key-value pairs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146940,"byte_end":146996,"line_start":46,"line_end":46,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147001,"byte_end":147010,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147244,"byte_end":147247,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"len","qualname":"<PyDict>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of items in the dictionary.\n This is equivalent to len(p) on a dictionary.\n","sig":null,"attributes":[{"value":"/ Return the number of items in the dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147115,"byte_end":147164,"line_start":52,"line_end":52,"column_start":5,"column_end":54}},{"value":"/ This is equivalent to len(p) on a dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147169,"byte_end":147218,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147223,"byte_end":147232,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147490,"byte_end":147498,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"contains","qualname":"<PyDict>::contains","value":"pub fn contains<K>(&Self, Python, K) -> PyResult<bool> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if the dictionary contains the specified key.\n This is equivalent to the Python expression `key in self`.\n","sig":null,"attributes":[{"value":"/ Determine if the dictionary contains the specified key.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147352,"byte_end":147411,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ This is equivalent to the Python expression `key in self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147416,"byte_end":147478,"line_start":60,"line_end":60,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147962,"byte_end":147970,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyDict>::get_item","value":"pub fn get_item<K>(&Self, Python, K) -> Option<PyObject> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets an item from the dictionary.\n Returns None if the item is not present, or if an error occurs.\n","sig":null,"attributes":[{"value":"/ Gets an item from the dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147841,"byte_end":147878,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/ Returns None if the item is not present, or if an error occurs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":147883,"byte_end":147950,"line_start":75,"line_end":75,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148330,"byte_end":148338,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PyDict>::set_item","value":"pub fn set_item<K, V>(&Self, Python, K, V) -> PyResult<()> where\nK: ToPyObject, V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Sets an item value.\n This is equivalent to the Python expression `self[key] = value`.\n","sig":null,"attributes":[{"value":"/ Sets an item value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148222,"byte_end":148245,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/ This is equivalent to the Python expression `self[key] = value`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148250,"byte_end":148318,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148795,"byte_end":148803,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"del_item","qualname":"<PyDict>::del_item","value":"pub fn del_item<K>(&Self, Python, K) -> PyResult<()> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Deletes an item.\n This is equivalent to the Python expression `del self[key]`.\n","sig":null,"attributes":[{"value":"/ Deletes an item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148694,"byte_end":148714,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ This is equivalent to the Python expression `del self[key]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":148719,"byte_end":148783,"line_start":100,"line_end":100,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":149149,"byte_end":149159,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"items_list","qualname":"<PyDict>::items_list","value":"pub fn items_list(&Self, Python) -> PyList","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":149368,"byte_end":149373,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"items","qualname":"<PyDict>::items","value":"pub fn items(&Self, Python) -> Vec<(PyObject, PyObject)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of (key,value) pairs in this dictionary.\n","sig":null,"attributes":[{"value":"/ Returns the list of (key,value) pairs in this dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":149295,"byte_end":149356,"line_start":116,"line_end":116,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exc","qualname":"::objects::exc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":2529},{"krate":0,"index":2546},{"krate":0,"index":2553},{"krate":0,"index":2559},{"krate":0,"index":2540},{"krate":0,"index":2532},{"krate":0,"index":2538},{"krate":0,"index":2562},{"krate":0,"index":2579},{"krate":0,"index":2586},{"krate":0,"index":2592},{"krate":0,"index":2573},{"krate":0,"index":2565},{"krate":0,"index":2571},{"krate":0,"index":2595},{"krate":0,"index":2612},{"krate":0,"index":2619},{"krate":0,"index":2625},{"krate":0,"index":2606},{"krate":0,"index":2598},{"krate":0,"index":2604},{"krate":0,"index":2628},{"krate":0,"index":2645},{"krate":0,"index":2652},{"krate":0,"index":2658},{"krate":0,"index":2639},{"krate":0,"index":2631},{"krate":0,"index":2637},{"krate":0,"index":2661},{"krate":0,"index":2678},{"krate":0,"index":2685},{"krate":0,"index":2691},{"krate":0,"index":2672},{"krate":0,"index":2664},{"krate":0,"index":2670},{"krate":0,"index":2694},{"krate":0,"index":2711},{"krate":0,"index":2718},{"krate":0,"index":2724},{"krate":0,"index":2705},{"krate":0,"index":2697},{"krate":0,"index":2703},{"krate":0,"index":2727},{"krate":0,"index":2744},{"krate":0,"index":2751},{"krate":0,"index":2757},{"krate":0,"index":2738},{"krate":0,"index":2730},{"krate":0,"index":2736},{"krate":0,"index":2760},{"krate":0,"index":2777},{"krate":0,"index":2784},{"krate":0,"index":2790},{"krate":0,"index":2771},{"krate":0,"index":2763},{"krate":0,"index":2769},{"krate":0,"index":2793},{"krate":0,"index":2810},{"krate":0,"index":2817},{"krate":0,"index":2823},{"krate":0,"index":2804},{"krate":0,"index":2796},{"krate":0,"index":2802},{"krate":0,"index":2826},{"krate":0,"index":2843},{"krate":0,"index":2850},{"krate":0,"index":2856},{"krate":0,"index":2837},{"krate":0,"index":2829},{"krate":0,"index":2835},{"krate":0,"index":2859},{"krate":0,"index":2876},{"krate":0,"index":2883},{"krate":0,"index":2889},{"krate":0,"index":2870},{"krate":0,"index":2862},{"krate":0,"index":2868},{"krate":0,"index":2892},{"krate":0,"index":2909},{"krate":0,"index":2916},{"krate":0,"index":2922},{"krate":0,"index":2903},{"krate":0,"index":2895},{"krate":0,"index":2901},{"krate":0,"index":2925},{"krate":0,"index":2942},{"krate":0,"index":2949},{"krate":0,"index":2955},{"krate":0,"index":2936},{"krate":0,"index":2928},{"krate":0,"index":2934},{"krate":0,"index":2958},{"krate":0,"index":2975},{"krate":0,"index":2982},{"krate":0,"index":2988},{"krate":0,"index":2969},{"krate":0,"index":2961},{"krate":0,"index":2967},{"krate":0,"index":2991},{"krate":0,"index":3008},{"krate":0,"index":3015},{"krate":0,"index":3021},{"krate":0,"index":3002},{"krate":0,"index":2994},{"krate":0,"index":3000},{"krate":0,"index":3024},{"krate":0,"index":3041},{"krate":0,"index":3048},{"krate":0,"index":3054},{"krate":0,"index":3035},{"krate":0,"index":3027},{"krate":0,"index":3033},{"krate":0,"index":3057},{"krate":0,"index":3074},{"krate":0,"index":3081},{"krate":0,"index":3087},{"krate":0,"index":3068},{"krate":0,"index":3060},{"krate":0,"index":3066},{"krate":0,"index":3090},{"krate":0,"index":3107},{"krate":0,"index":3114},{"krate":0,"index":3120},{"krate":0,"index":3101},{"krate":0,"index":3093},{"krate":0,"index":3099},{"krate":0,"index":3123},{"krate":0,"index":3140},{"krate":0,"index":3147},{"krate":0,"index":3153},{"krate":0,"index":3134},{"krate":0,"index":3126},{"krate":0,"index":3132},{"krate":0,"index":3156},{"krate":0,"index":3173},{"krate":0,"index":3180},{"krate":0,"index":3186},{"krate":0,"index":3167},{"krate":0,"index":3159},{"krate":0,"index":3165},{"krate":0,"index":3189},{"krate":0,"index":3206},{"krate":0,"index":3213},{"krate":0,"index":3219},{"krate":0,"index":3200},{"krate":0,"index":3192},{"krate":0,"index":3198},{"krate":0,"index":3222},{"krate":0,"index":3239},{"krate":0,"index":3246},{"krate":0,"index":3252},{"krate":0,"index":3233},{"krate":0,"index":3225},{"krate":0,"index":3231},{"krate":0,"index":3255},{"krate":0,"index":3272},{"krate":0,"index":3279},{"krate":0,"index":3285},{"krate":0,"index":3266},{"krate":0,"index":3258},{"krate":0,"index":3264},{"krate":0,"index":3288},{"krate":0,"index":3305},{"krate":0,"index":3312},{"krate":0,"index":3318},{"krate":0,"index":3299},{"krate":0,"index":3291},{"krate":0,"index":3297},{"krate":0,"index":3321},{"krate":0,"index":3338},{"krate":0,"index":3345},{"krate":0,"index":3351},{"krate":0,"index":3332},{"krate":0,"index":3324},{"krate":0,"index":3330},{"krate":0,"index":3354},{"krate":0,"index":3371},{"krate":0,"index":3378},{"krate":0,"index":3384},{"krate":0,"index":3365},{"krate":0,"index":3357},{"krate":0,"index":3363},{"krate":0,"index":3387},{"krate":0,"index":3404},{"krate":0,"index":3411},{"krate":0,"index":3417},{"krate":0,"index":3398},{"krate":0,"index":3390},{"krate":0,"index":3396},{"krate":0,"index":3420},{"krate":0,"index":3437},{"krate":0,"index":3444},{"krate":0,"index":3450},{"krate":0,"index":3431},{"krate":0,"index":3423},{"krate":0,"index":3429},{"krate":0,"index":3453},{"krate":0,"index":3470},{"krate":0,"index":3477},{"krate":0,"index":3483},{"krate":0,"index":3464},{"krate":0,"index":3456},{"krate":0,"index":3462},{"krate":0,"index":3486},{"krate":0,"index":3503},{"krate":0,"index":3510},{"krate":0,"index":3516},{"krate":0,"index":3497},{"krate":0,"index":3489},{"krate":0,"index":3495},{"krate":0,"index":3519},{"krate":0,"index":3536},{"krate":0,"index":3543},{"krate":0,"index":3549},{"krate":0,"index":3530},{"krate":0,"index":3522},{"krate":0,"index":3528},{"krate":0,"index":3552},{"krate":0,"index":3569},{"krate":0,"index":3576},{"krate":0,"index":3582},{"krate":0,"index":3563},{"krate":0,"index":3555},{"krate":0,"index":3561},{"krate":0,"index":3585},{"krate":0,"index":3602},{"krate":0,"index":3609},{"krate":0,"index":3615},{"krate":0,"index":3596},{"krate":0,"index":3588},{"krate":0,"index":3594},{"krate":0,"index":3618},{"krate":0,"index":3635},{"krate":0,"index":3642},{"krate":0,"index":3648},{"krate":0,"index":3629},{"krate":0,"index":3621},{"krate":0,"index":3627},{"krate":0,"index":3651},{"krate":0,"index":3668},{"krate":0,"index":3675},{"krate":0,"index":3681},{"krate":0,"index":3662},{"krate":0,"index":3654},{"krate":0,"index":3660},{"krate":0,"index":3684},{"krate":0,"index":3701},{"krate":0,"index":3708},{"krate":0,"index":3714},{"krate":0,"index":3695},{"krate":0,"index":3687},{"krate":0,"index":3693},{"krate":0,"index":3717},{"krate":0,"index":3734},{"krate":0,"index":3741},{"krate":0,"index":3747},{"krate":0,"index":3728},{"krate":0,"index":3720},{"krate":0,"index":3726},{"krate":0,"index":3750},{"krate":0,"index":3767},{"krate":0,"index":3774},{"krate":0,"index":3780},{"krate":0,"index":3761},{"krate":0,"index":3753},{"krate":0,"index":3759},{"krate":0,"index":3783},{"krate":0,"index":3800},{"krate":0,"index":3807},{"krate":0,"index":3813},{"krate":0,"index":3794},{"krate":0,"index":3786},{"krate":0,"index":3792},{"krate":0,"index":3816},{"krate":0,"index":3833},{"krate":0,"index":3840},{"krate":0,"index":3846},{"krate":0,"index":3827},{"krate":0,"index":3819},{"krate":0,"index":3825},{"krate":0,"index":3849},{"krate":0,"index":3866},{"krate":0,"index":3873},{"krate":0,"index":3879},{"krate":0,"index":3860},{"krate":0,"index":3852},{"krate":0,"index":3858},{"krate":0,"index":3882},{"krate":0,"index":3899},{"krate":0,"index":3906},{"krate":0,"index":3912},{"krate":0,"index":3893},{"krate":0,"index":3885},{"krate":0,"index":3891},{"krate":0,"index":3915},{"krate":0,"index":3932},{"krate":0,"index":3939},{"krate":0,"index":3945},{"krate":0,"index":3926},{"krate":0,"index":3918},{"krate":0,"index":3924},{"krate":0,"index":3948},{"krate":0,"index":3965},{"krate":0,"index":3972},{"krate":0,"index":3978},{"krate":0,"index":3959},{"krate":0,"index":3951},{"krate":0,"index":3957},{"krate":0,"index":3981},{"krate":0,"index":3998},{"krate":0,"index":4005},{"krate":0,"index":4011},{"krate":0,"index":3992},{"krate":0,"index":3984},{"krate":0,"index":3990},{"krate":0,"index":4014},{"krate":0,"index":4031},{"krate":0,"index":4038},{"krate":0,"index":4044},{"krate":0,"index":4025},{"krate":0,"index":4017},{"krate":0,"index":4023},{"krate":0,"index":939}],"decl_id":null,"docs":" This module contains the python exception types.\n","sig":null,"attributes":[{"value":"/ This module contains the python exception types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":156585,"byte_end":156637,"line_start":19,"line_end":19,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":158778,"byte_end":158791,"line_start":85,"line_end":85,"column_start":11,"column_end":24},"name":"BaseException","qualname":"::objects::exc::BaseException","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":158825,"byte_end":158834,"line_start":86,"line_end":86,"column_start":11,"column_end":20},"name":"Exception","qualname":"::objects::exc::Exception","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":158944,"byte_end":158955,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"LookupError","qualname":"::objects::exc::LookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":158987,"byte_end":159001,"line_start":90,"line_end":90,"column_start":11,"column_end":25},"name":"AssertionError","qualname":"::objects::exc::AssertionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159036,"byte_end":159050,"line_start":91,"line_end":91,"column_start":11,"column_end":25},"name":"AttributeError","qualname":"::objects::exc::AttributeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159117,"byte_end":159132,"line_start":93,"line_end":93,"column_start":11,"column_end":26},"name":"BlockingIOError","qualname":"::objects::exc::BlockingIOError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159200,"byte_end":159215,"line_start":95,"line_end":95,"column_start":11,"column_end":26},"name":"BrokenPipeError","qualname":"::objects::exc::BrokenPipeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159283,"byte_end":159300,"line_start":97,"line_end":97,"column_start":11,"column_end":28},"name":"ChildProcessError","qualname":"::objects::exc::ChildProcessError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159370,"byte_end":159392,"line_start":99,"line_end":99,"column_start":11,"column_end":33},"name":"ConnectionAbortedError","qualname":"::objects::exc::ConnectionAbortedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159467,"byte_end":159482,"line_start":101,"line_end":101,"column_start":11,"column_end":26},"name":"ConnectionError","qualname":"::objects::exc::ConnectionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159550,"byte_end":159572,"line_start":103,"line_end":103,"column_start":11,"column_end":33},"name":"ConnectionRefusedError","qualname":"::objects::exc::ConnectionRefusedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159647,"byte_end":159667,"line_start":105,"line_end":105,"column_start":11,"column_end":31},"name":"ConnectionResetError","qualname":"::objects::exc::ConnectionResetError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159708,"byte_end":159716,"line_start":106,"line_end":106,"column_start":11,"column_end":19},"name":"EOFError","qualname":"::objects::exc::EOFError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159745,"byte_end":159761,"line_start":107,"line_end":107,"column_start":11,"column_end":27},"name":"EnvironmentError","qualname":"::objects::exc::EnvironmentError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159830,"byte_end":159845,"line_start":109,"line_end":109,"column_start":11,"column_end":26},"name":"FileExistsError","qualname":"::objects::exc::FileExistsError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159913,"byte_end":159930,"line_start":111,"line_end":111,"column_start":11,"column_end":28},"name":"FileNotFoundError","qualname":"::objects::exc::FileNotFoundError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":159968,"byte_end":159986,"line_start":112,"line_end":112,"column_start":11,"column_end":29},"name":"FloatingPointError","qualname":"::objects::exc::FloatingPointError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160025,"byte_end":160032,"line_start":113,"line_end":113,"column_start":11,"column_end":18},"name":"IOError","qualname":"::objects::exc::IOError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160060,"byte_end":160071,"line_start":114,"line_end":114,"column_start":11,"column_end":22},"name":"ImportError","qualname":"::objects::exc::ImportError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160103,"byte_end":160113,"line_start":115,"line_end":115,"column_start":11,"column_end":21},"name":"IndexError","qualname":"::objects::exc::IndexError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160176,"byte_end":160192,"line_start":117,"line_end":117,"column_start":11,"column_end":27},"name":"InterruptedError","qualname":"::objects::exc::InterruptedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160261,"byte_end":160278,"line_start":119,"line_end":119,"column_start":11,"column_end":28},"name":"IsADirectoryError","qualname":"::objects::exc::IsADirectoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160316,"byte_end":160324,"line_start":120,"line_end":120,"column_start":11,"column_end":19},"name":"KeyError","qualname":"::objects::exc::KeyError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160353,"byte_end":160370,"line_start":121,"line_end":121,"column_start":11,"column_end":28},"name":"KeyboardInterrupt","qualname":"::objects::exc::KeyboardInterrupt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160408,"byte_end":160419,"line_start":122,"line_end":122,"column_start":11,"column_end":22},"name":"MemoryError","qualname":"::objects::exc::MemoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160451,"byte_end":160460,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"NameError","qualname":"::objects::exc::NameError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160522,"byte_end":160540,"line_start":125,"line_end":125,"column_start":11,"column_end":29},"name":"NotADirectoryError","qualname":"::objects::exc::NotADirectoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160579,"byte_end":160598,"line_start":126,"line_end":126,"column_start":11,"column_end":30},"name":"NotImplementedError","qualname":"::objects::exc::NotImplementedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3453},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160638,"byte_end":160645,"line_start":127,"line_end":127,"column_start":11,"column_end":18},"name":"OSError","qualname":"::objects::exc::OSError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160673,"byte_end":160686,"line_start":128,"line_end":128,"column_start":11,"column_end":24},"name":"OverflowError","qualname":"::objects::exc::OverflowError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160752,"byte_end":160767,"line_start":130,"line_end":130,"column_start":11,"column_end":26},"name":"PermissionError","qualname":"::objects::exc::PermissionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160835,"byte_end":160853,"line_start":132,"line_end":132,"column_start":11,"column_end":29},"name":"ProcessLookupError","qualname":"::objects::exc::ProcessLookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160892,"byte_end":160906,"line_start":133,"line_end":133,"column_start":11,"column_end":25},"name":"ReferenceError","qualname":"::objects::exc::ReferenceError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160941,"byte_end":160953,"line_start":134,"line_end":134,"column_start":11,"column_end":23},"name":"RuntimeError","qualname":"::objects::exc::RuntimeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":160986,"byte_end":160997,"line_start":135,"line_end":135,"column_start":11,"column_end":22},"name":"SyntaxError","qualname":"::objects::exc::SyntaxError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161029,"byte_end":161040,"line_start":136,"line_end":136,"column_start":11,"column_end":22},"name":"SystemError","qualname":"::objects::exc::SystemError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161072,"byte_end":161082,"line_start":137,"line_end":137,"column_start":11,"column_end":21},"name":"SystemExit","qualname":"::objects::exc::SystemExit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161145,"byte_end":161157,"line_start":139,"line_end":139,"column_start":11,"column_end":23},"name":"TimeoutError","qualname":"::objects::exc::TimeoutError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161190,"byte_end":161199,"line_start":140,"line_end":140,"column_start":11,"column_end":20},"name":"TypeError","qualname":"::objects::exc::TypeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3816},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161229,"byte_end":161239,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"ValueError","qualname":"::objects::exc::ValueError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3849},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161300,"byte_end":161312,"line_start":143,"line_end":143,"column_start":11,"column_end":23},"name":"WindowsError","qualname":"::objects::exc::WindowsError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161345,"byte_end":161362,"line_start":144,"line_end":144,"column_start":11,"column_end":28},"name":"ZeroDivisionError","qualname":"::objects::exc::ZeroDivisionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161401,"byte_end":161412,"line_start":146,"line_end":146,"column_start":11,"column_end":22},"name":"BufferError","qualname":"::objects::exc::BufferError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3948},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161445,"byte_end":161463,"line_start":148,"line_end":148,"column_start":11,"column_end":29},"name":"UnicodeDecodeError","qualname":"::objects::exc::UnicodeDecodeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161502,"byte_end":161520,"line_start":149,"line_end":149,"column_start":11,"column_end":29},"name":"UnicodeEncodeError","qualname":"::objects::exc::UnicodeEncodeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161559,"byte_end":161580,"line_start":150,"line_end":150,"column_start":11,"column_end":32},"name":"UnicodeTranslateError","qualname":"::objects::exc::UnicodeTranslateError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161650,"byte_end":161653,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<UnicodeDecodeError>::new","value":"pub fn new(Python, &CStr, &[u8], ops::Range<usize>, &CStr)\n-> PyResult<UnicodeDecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":162336,"byte_end":162344,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"new_utf8","qualname":"<UnicodeDecodeError>::new_utf8","value":"pub fn new_utf8(Python, &[u8], std::str::Utf8Error)\n-> PyResult<UnicodeDecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164171,"byte_end":164181,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"PyIterator","qualname":"::objects::iterator::PyIterator","value":"PyIterator {  }","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"decl_id":null,"docs":" A python iterator object.","sig":null,"attributes":[{"value":"/ A python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":163988,"byte_end":164017,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164018,"byte_end":164021,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Unlike other python objects, this class includes a `Python<'p>` token","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164022,"byte_end":164095,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ so that PyIterator can implement the rust `Iterator` trait.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164096,"byte_end":164159,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164331,"byte_end":164342,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"from_object","qualname":"<PyIterator>::from_object","value":"pub fn from_object(Python, PyObject)\n-> Result<PyIterator, PythonObjectDowncastError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a PyIterator from a Python iterator object.\n","sig":null,"attributes":[{"value":"/ Constructs a PyIterator from a Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164261,"byte_end":164319,"line_start":35,"line_end":35,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164813,"byte_end":164822,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"as_object","qualname":"<PyIterator>::as_object","value":"pub fn as_object(&Self) -> &PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python iterator object.\n","sig":null,"attributes":[{"value":"/ Gets the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164751,"byte_end":164787,"line_start":51,"line_end":51,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164792,"byte_end":164801,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164937,"byte_end":164948,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"into_object","qualname":"<PyIterator>::into_object","value":"pub fn into_object(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python iterator object.\n","sig":null,"attributes":[{"value":"/ Gets the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164875,"byte_end":164911,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164916,"byte_end":164925,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167746,"byte_end":167752,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"PyList","qualname":"::objects::list::PyList","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `list`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `list`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167703,"byte_end":167734,"line_start":25,"line_end":25,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167899,"byte_end":167902,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<PyList>::new","value":"pub fn new(Python, &[PyObject]) -> PyList","parent":null,"children":[],"decl_id":null,"docs":" Construct a new list with the given elements.\n","sig":null,"attributes":[{"value":"/ Construct a new list with the given elements.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167838,"byte_end":167887,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168407,"byte_end":168410,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<PyList>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of the list.\n","sig":null,"attributes":[{"value":"/ Gets the length of the list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168349,"byte_end":168381,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168386,"byte_end":168395,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168690,"byte_end":168698,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyList>::get_item","value":"pub fn get_item(&Self, Python, usize) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the item at the specified index.","sig":null,"attributes":[{"value":"/ Gets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168584,"byte_end":168625,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168630,"byte_end":168633,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":168638,"byte_end":168678,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169129,"byte_end":169137,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PyList>::set_item","value":"pub fn set_item(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Sets the item at the specified index.","sig":null,"attributes":[{"value":"/ Sets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169023,"byte_end":169064,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169069,"byte_end":169072,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169077,"byte_end":169117,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169450,"byte_end":169456,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"insert","qualname":"<PyList>::insert","value":"pub fn insert(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the specified index.","sig":null,"attributes":[{"value":"/ Inserts an item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169342,"byte_end":169385,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169390,"byte_end":169393,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169398,"byte_end":169438,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169772,"byte_end":169783,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"insert_item","qualname":"<PyList>::insert_item","value":"pub fn insert_item(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.1\", note = \"use list.insert() instead\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169675,"byte_end":169741,"line_start":84,"line_end":84,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169938,"byte_end":169944,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"append","qualname":"<PyList>::append","value":"pub fn append(&Self, Python, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Appends an item to the end of the list\n","sig":null,"attributes":[{"value":"/ Appends an item to the end of the list","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":169884,"byte_end":169926,"line_start":90,"line_end":90,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170086,"byte_end":170090,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"iter","qualname":"<PyList>::iter","value":"pub fn iter<'a, 'p>(&'a Self, Python) -> PyListIterator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170065,"byte_end":170074,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170304,"byte_end":170318,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"PyListIterator","qualname":"::objects::list::PyListIterator","value":"PyListIterator {  }","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" Used by `PyList::iter()`.\n","sig":null,"attributes":[{"value":"/ Used by `PyList::iter()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170263,"byte_end":170292,"line_start":105,"line_end":105,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":176902,"byte_end":176910,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"PyModule","qualname":"::objects::module::PyModule","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python module object.\n","sig":null,"attributes":[{"value":"/ Represents a Python module object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":176852,"byte_end":176890,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177089,"byte_end":177092,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<PyModule>::new","value":"pub fn new(Python, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Create a new module object with the `__name__` attribute set to name.\n","sig":null,"attributes":[{"value":"/ Create a new module object with the `__name__` attribute set to name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177004,"byte_end":177077,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177354,"byte_end":177360,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"import","qualname":"<PyModule>::import","value":"pub fn import(Python, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Import the Python module with the specified name.\n","sig":null,"attributes":[{"value":"/ Import the Python module with the specified name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177289,"byte_end":177342,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177728,"byte_end":177732,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"dict","qualname":"<PyModule>::dict","value":"pub fn dict(&Self, Python) -> PyDict","parent":null,"children":[],"decl_id":null,"docs":" Return the dictionary object that implements module's namespace;\n this object is the same as the `__dict__` attribute of the module object.\n","sig":null,"attributes":[{"value":"/ Return the dictionary object that implements module's namespace;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177566,"byte_end":177634,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ this object is the same as the `__dict__` attribute of the module object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":177639,"byte_end":177716,"line_start":49,"line_end":49,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178561,"byte_end":178565,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"name","qualname":"<PyModule>::name","value":"pub fn name<'a>(&'a Self, Python) -> PyResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module name.","sig":null,"attributes":[{"value":"/ Gets the module name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178447,"byte_end":178472,"line_start":72,"line_end":72,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178477,"byte_end":178480,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__name__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178485,"byte_end":178549,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178850,"byte_end":178858,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"filename","qualname":"<PyModule>::filename","value":"pub fn filename<'a>(&'a Self, Python) -> PyResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module filename.","sig":null,"attributes":[{"value":"/ Gets the module filename.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178707,"byte_end":178736,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178741,"byte_end":178744,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__file__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178749,"byte_end":178813,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":178818,"byte_end":178838,"line_start":82,"line_end":82,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179165,"byte_end":179180,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"filename_object","qualname":"<PyModule>::filename_object","value":"pub fn filename_object<'a>(&'a Self, Python) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module filename object.","sig":null,"attributes":[{"value":"/ Gets the module filename object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179004,"byte_end":179040,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179045,"byte_end":179048,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__file__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179053,"byte_end":179117,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179122,"byte_end":179153,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179596,"byte_end":179599,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"get","qualname":"<PyModule>::get","value":"pub fn get(&Self, Python, &str) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Gets a member from the module.\n This is equivalent to the Python expression: `getattr(module, name)`\n","sig":null,"attributes":[{"value":"/ Gets a member from the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179473,"byte_end":179507,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ This is equivalent to the Python expression: `getattr(module, name)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179512,"byte_end":179584,"line_start":101,"line_end":101,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180587,"byte_end":180591,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"call","qualname":"<PyModule>::call","value":"pub fn call<A>(&Self, Python, &str, A, Option<&PyDict>) -> PyResult<PyObject>\nwhere A: ToPyObject<ObjectType = PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Calls a function in the module.\n This is equivalent to the Python expression: `getattr(module, name)(*args, **kwargs)`","sig":null,"attributes":[{"value":"/ Calls a function in the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179709,"byte_end":179744,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/ This is equivalent to the Python expression: `getattr(module, name)(*args, **kwargs)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179749,"byte_end":179838,"line_start":107,"line_end":107,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179843,"byte_end":179846,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179851,"byte_end":179931,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179936,"byte_end":179970,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":179975,"byte_end":180043,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180048,"byte_end":180102,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180107,"byte_end":180110,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180115,"byte_end":180128,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180133,"byte_end":180140,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use cpython::NoArgs;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180145,"byte_end":180169,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/ # use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180174,"byte_end":180200,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ # let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180205,"byte_end":180243,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ # let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180248,"byte_end":180276,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let sys = py.import(\"sys\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180281,"byte_end":180321,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/ // Call function without arguments:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180326,"byte_end":180365,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ let encoding = sys.call(py, \"getdefaultencoding\", NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180370,"byte_end":180447,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/ // Call function with a single argument:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180452,"byte_end":180496,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ sys.call(py, \"setrecursionlimit\", (1000,), None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180501,"byte_end":180563,"line_start":124,"line_end":124,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180568,"byte_end":180575,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181020,"byte_end":181023,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"add","qualname":"<PyModule>::add","value":"pub fn add<V>(&Self, Python, &str, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Adds a member to the module.","sig":null,"attributes":[{"value":"/ Adds a member to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180868,"byte_end":180900,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180905,"byte_end":180908,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function which can be used from the module's initialization function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":180913,"byte_end":181008,"line_start":141,"line_end":141,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181423,"byte_end":181432,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"add_class","qualname":"<PyModule>::add_class","value":"pub fn add_class<'p, T>(&Self, Python) -> PyResult<()> where\nT: PythonObjectFromPyClassMacro","parent":null,"children":[],"decl_id":null,"docs":" Adds a new extension type to the module.","sig":null,"attributes":[{"value":"/ Adds a new extension type to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181184,"byte_end":181228,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181233,"byte_end":181236,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that initializes the `py_class!()`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181241,"byte_end":181311,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/ sets `new_type.__module__` to this module's name,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181316,"byte_end":181369,"line_start":152,"line_end":152,"column_start":5,"column_end":58}},{"value":"/ and adds the type to this module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":181374,"byte_end":181411,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183959,"byte_end":183965,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"PyLong","qualname":"::objects::num::PyLong","value":"","parent":null,"children":[],"decl_id":null,"docs":" In Python 2.x, represents a Python `long` object.\n In Python 3.x, represents a Python `int` object.\n Both `PyInt` and `PyLong` refer to the same type on Python 3.x.","sig":null,"attributes":[{"value":"/ In Python 2.x, represents a Python `long` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183564,"byte_end":183617,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ In Python 3.x, represents a Python `int` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183618,"byte_end":183670,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ Both `PyInt` and `PyLong` refer to the same type on Python 3.x.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183671,"byte_end":183738,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183739,"byte_end":183742,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ You can usually avoid directly working with this type","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183743,"byte_end":183800,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/ by using [ToPyObject](trait.ToPyObject.html)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183801,"byte_end":183849,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ and [extract](struct.PyObject.html#method.extract)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183850,"byte_end":183904,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/ with the primitive Rust integer types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":183905,"byte_end":183947,"line_start":52,"line_end":52,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184271,"byte_end":184278,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"PyFloat","qualname":"::objects::num::PyFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `float` object.","sig":null,"attributes":[{"value":"/ Represents a Python `float` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184032,"byte_end":184071,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184072,"byte_end":184075,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ You can usually avoid directly working with this type","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184076,"byte_end":184133,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/ by using [ToPyObject](trait.ToPyObject.html)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184134,"byte_end":184182,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ and [extract](struct.PyObject.html#method.extract)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184183,"byte_end":184237,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ with `f32`/`f64`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":184238,"byte_end":184259,"line_start":61,"line_end":61,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185268,"byte_end":185271,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<PyFloat>::new","value":"pub fn new(Python, c_double) -> PyFloat","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python `float` object.\n","sig":null,"attributes":[{"value":"/ Creates a new Python `float` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185216,"byte_end":185256,"line_start":88,"line_end":88,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185455,"byte_end":185460,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"value","qualname":"<PyFloat>::value","value":"pub fn value(&Self, Python) -> c_double","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of this float.\n","sig":null,"attributes":[{"value":"/ Gets the value of this float.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185410,"byte_end":185443,"line_start":93,"line_end":93,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199083,"byte_end":199091,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"PyObject","qualname":"::objects::object::PyObject","value":"PyObject {  }","parent":null,"children":[{"krate":0,"index":1245}],"decl_id":null,"docs":" Represents a reference to a Python object.","sig":null,"attributes":[{"value":"/ Represents a reference to a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":197872,"byte_end":197918,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":197919,"byte_end":197922,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Python objects are reference counted.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":197923,"byte_end":197964,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ Calling `clone_ref()` on a `PyObject` will return a new reference to the same object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":197965,"byte_end":198053,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ (thus incrementing the reference count).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198054,"byte_end":198098,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ The `Drop` implementation will automatically decrement the reference count.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198099,"byte_end":198178,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ You can also call `release_ref()` to explicitly decrement the reference count.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198179,"byte_end":198261,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/ This is slightly faster than relying on automatic drop, because `release_ref`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198262,"byte_end":198343,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ does not need to check whether the GIL needs to be acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198344,"byte_end":198408,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198409,"byte_end":198412,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `PyObject` can be used with all Python objects, since all python types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198413,"byte_end":198487,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ derive from `object`. This crate also contains other, more specific types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198488,"byte_end":198565,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ that serve as references to Python objects (e.g. `PyTuple` for Python tuples, etc.).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198566,"byte_end":198654,"line_start":41,"line_end":41,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198655,"byte_end":198658,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ You can convert from any Python object to `PyObject` by calling `as_object()` or `into_object()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198659,"byte_end":198759,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ from the [PythonObject trait](trait.PythonObject.html).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198760,"byte_end":198819,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/ In the other direction, you can call `cast_as()` or `cast_into()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198820,"byte_end":198889,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ on `PyObject` to convert to more specific object types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198890,"byte_end":198949,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198950,"byte_end":198953,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Most of the interesting methods are provided by the [ObjectProtocol trait](trait.ObjectProtocol.html).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":198954,"byte_end":199060,"line_start":48,"line_end":48,"column_start":1,"column_end":107}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199061,"byte_end":199071,"line_start":49,"line_end":49,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200840,"byte_end":200854,"line_start":122,"line_end":122,"column_start":19,"column_end":33},"name":"from_owned_ptr","qualname":"<PyObject>::from_owned_ptr","value":"pub unsafe fn from_owned_ptr(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n This moves ownership over the pointer into the PyObject.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200622,"byte_end":200680,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/ This moves ownership over the pointer into the PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200685,"byte_end":200745,"line_start":119,"line_end":119,"column_start":5,"column_end":65}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200750,"byte_end":200807,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200812,"byte_end":200821,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201255,"byte_end":201272,"line_start":133,"line_end":133,"column_start":19,"column_end":36},"name":"from_borrowed_ptr","qualname":"<PyObject>::from_borrowed_ptr","value":"pub unsafe fn from_borrowed_ptr(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n Calls Py_INCREF() on the ptr.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201064,"byte_end":201122,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/ Calls Py_INCREF() on the ptr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201127,"byte_end":201160,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201165,"byte_end":201222,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201227,"byte_end":201236,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201753,"byte_end":201771,"line_start":145,"line_end":145,"column_start":19,"column_end":37},"name":"from_owned_ptr_opt","qualname":"<PyObject>::from_owned_ptr_opt","value":"pub unsafe fn from_owned_ptr_opt(Python, *mut ffi::PyObject)\n-> Option<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n This moves ownership over the pointer into the PyObject.\n Returns None for null pointers; undefined behavior if the pointer is invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201511,"byte_end":201569,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"/ This moves ownership over the pointer into the PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201574,"byte_end":201634,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/ Returns None for null pointers; undefined behavior if the pointer is invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201639,"byte_end":201720,"line_start":143,"line_end":143,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201725,"byte_end":201734,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202079,"byte_end":202100,"line_start":155,"line_end":155,"column_start":19,"column_end":40},"name":"from_borrowed_ptr_opt","qualname":"<PyObject>::from_borrowed_ptr_opt","value":"pub unsafe fn from_borrowed_ptr_opt(Python, *mut ffi::PyObject)\n-> Option<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Returns None for null pointers; undefined behavior if the pointer is invalid.\n","sig":null,"attributes":[{"value":"/ Returns None for null pointers; undefined behavior if the pointer is invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":201965,"byte_end":202046,"line_start":153,"line_end":153,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202051,"byte_end":202060,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202395,"byte_end":202401,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PyObject>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying FFI pointer.\n Returns a borrowed pointer.\n","sig":null,"attributes":[{"value":"/ Gets the underlying FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202297,"byte_end":202333,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ Returns a borrowed pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202338,"byte_end":202369,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202374,"byte_end":202383,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202636,"byte_end":202645,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"steal_ptr","qualname":"<PyObject>::steal_ptr","value":"pub fn steal_ptr(Self) -> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying FFI pointer.\n Consumes `self` without calling `Py_DECREF()`, thus returning an owned pointer.\n","sig":null,"attributes":[{"value":"/ Gets the underlying FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202470,"byte_end":202506,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ Consumes `self` without calling `Py_DECREF()`, thus returning an owned pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202511,"byte_end":202594,"line_start":171,"line_end":171,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202599,"byte_end":202608,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202613,"byte_end":202624,"line_start":173,"line_end":173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202899,"byte_end":202914,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"name":"borrow_from_ptr","qualname":"<PyObject>::borrow_from_ptr","value":"pub unsafe fn borrow_from_ptr<'a>(&'a *mut ffi::PyObject) -> &'a PyObject","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an FFI pointer to `&PyObject`.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Transmutes an FFI pointer to `&PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202759,"byte_end":202804,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202809,"byte_end":202866,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":202871,"byte_end":202880,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203214,"byte_end":203241,"line_start":191,"line_end":191,"column_start":19,"column_end":46},"name":"borrow_from_owned_ptr_slice","qualname":"<PyObject>::borrow_from_owned_ptr_slice","value":"pub unsafe fn borrow_from_owned_ptr_slice<'a>(&'a [*mut ffi::PyObject])\n-> &'a [PyObject]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a slice of owned FFI pointers to `&[PyObject]`.\n Undefined behavior if any pointer in the slice is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Transmutes a slice of owned FFI pointers to `&[PyObject]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203044,"byte_end":203106,"line_start":188,"line_end":188,"column_start":5,"column_end":67}},{"value":"/ Undefined behavior if any pointer in the slice is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203111,"byte_end":203181,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203186,"byte_end":203195,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203413,"byte_end":203423,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"get_refcnt","qualname":"<PyObject>::get_refcnt","value":"pub fn get_refcnt(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference count of this Python object.\n","sig":null,"attributes":[{"value":"/ Gets the reference count of this Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203336,"byte_end":203387,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203392,"byte_end":203401,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203591,"byte_end":203599,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"get_type","qualname":"<PyObject>::get_type","value":"pub fn get_type(&Self, Python) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python type object for this object's type.\n","sig":null,"attributes":[{"value":"/ Gets the Python type object for this object's type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203524,"byte_end":203579,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203964,"byte_end":203983,"line_start":210,"line_end":210,"column_start":19,"column_end":38},"name":"unchecked_cast_into","qualname":"<PyObject>::unchecked_cast_into","value":"pub unsafe fn unchecked_cast_into<T>(Self) -> T where T: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Causes undefined behavior if the object is not of the expected type.\n This is a wrapper function around `PythonObject::unchecked_downcast_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203713,"byte_end":203769,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/ Causes undefined behavior if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203774,"byte_end":203846,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ This is a wrapper function around `PythonObject::unchecked_downcast_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203851,"byte_end":203931,"line_start":208,"line_end":208,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":203936,"byte_end":203945,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204368,"byte_end":204377,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"cast_into","qualname":"<PyObject>::cast_into","value":"pub fn cast_into<'p, T>(Self, Python) -> Result<T, PythonObjectDowncastError>\nwhere T: PythonObjectWithCheckedDowncast","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Fails with `PythonObjectDowncastError` if the object is not of the expected type.\n This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204102,"byte_end":204158,"line_start":217,"line_end":217,"column_start":5,"column_end":61}},{"value":"/ Fails with `PythonObjectDowncastError` if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204163,"byte_end":204248,"line_start":218,"line_end":218,"column_start":5,"column_end":90}},{"value":"/ This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204253,"byte_end":204342,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204347,"byte_end":204356,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204845,"byte_end":204862,"line_start":232,"line_end":232,"column_start":19,"column_end":36},"name":"unchecked_cast_as","qualname":"<PyObject>::unchecked_cast_as","value":"pub unsafe fn unchecked_cast_as<'s, T>(&'s Self) -> &'s T where\nT: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Causes undefined behavior if the object is not of the expected type.\n This is a wrapper function around `PythonObject::unchecked_downcast_borrow_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204587,"byte_end":204643,"line_start":228,"line_end":228,"column_start":5,"column_end":61}},{"value":"/ Causes undefined behavior if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204648,"byte_end":204720,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ This is a wrapper function around `PythonObject::unchecked_downcast_borrow_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204725,"byte_end":204812,"line_start":230,"line_end":230,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":204817,"byte_end":204826,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205273,"byte_end":205280,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"cast_as","qualname":"<PyObject>::cast_as","value":"pub fn cast_as<'s, 'p, T>(&'s Self, Python)\n-> Result<&'s T, PythonObjectDowncastError> where\nT: PythonObjectWithCheckedDowncast","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Fails with `PythonObjectDowncastError` if the object is not of the expected type.\n This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_borrow_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205000,"byte_end":205056,"line_start":239,"line_end":239,"column_start":5,"column_end":61}},{"value":"/ Fails with `PythonObjectDowncastError` if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205061,"byte_end":205146,"line_start":240,"line_end":240,"column_start":5,"column_end":90}},{"value":"/ This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_borrow_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205151,"byte_end":205247,"line_start":241,"line_end":241,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205252,"byte_end":205261,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205680,"byte_end":205687,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"extract","qualname":"<PyObject>::extract","value":"pub fn extract<'a, T>(&'a Self, Python) -> PyResult<T> where\nT: crate::conversion::FromPyObject","parent":null,"children":[],"decl_id":null,"docs":" Extracts some type from the Python object.\n This is a wrapper function around `FromPyObject::from_py_object()`.\n","sig":null,"attributes":[{"value":"/ Extracts some type from the Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205532,"byte_end":205578,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/ This is a wrapper function around `FromPyObject::from_py_object()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205583,"byte_end":205654,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":205659,"byte_end":205668,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208239,"byte_end":208249,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"PySequence","qualname":"::objects::sequence::PySequence","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a reference to a python object supporting the sequence protocol.\n","sig":null,"attributes":[{"value":"/ Represents a reference to a python object supporting the sequence protocol.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208148,"byte_end":208227,"line_start":30,"line_end":30,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208444,"byte_end":208447,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<PySequence>::len","value":"pub fn len(&Self, Python) -> PyResult<isize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of objects in sequence. This is equivalent to Python `len()`.\n","sig":null,"attributes":[{"value":"/ Returns the number of objects in sequence. This is equivalent to Python `len()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208334,"byte_end":208418,"line_start":36,"line_end":36,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208423,"byte_end":208432,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208773,"byte_end":208779,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"concat","qualname":"<PySequence>::concat","value":"pub fn concat(&Self, Python, &PySequence) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the concatenation of o1 and o2. Equivalent to python `o1 + o2`\n","sig":null,"attributes":[{"value":"/ Return the concatenation of o1 and o2. Equivalent to python `o1 + o2`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208674,"byte_end":208747,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208752,"byte_end":208761,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209185,"byte_end":209191,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"repeat","qualname":"<PySequence>::repeat","value":"pub fn repeat(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the result of repeating sequence object o count times.\n Equivalent to python `o * count`\n NB: Python accepts negative counts; it returns an empty Sequence.\n","sig":null,"attributes":[{"value":"/ Return the result of repeating sequence object o count times.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208979,"byte_end":209044,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ Equivalent to python `o * count`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209049,"byte_end":209085,"line_start":56,"line_end":56,"column_start":5,"column_end":41}},{"value":"/ NB: Python accepts negative counts; it returns an empty Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209090,"byte_end":209159,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209164,"byte_end":209173,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209548,"byte_end":209563,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"in_place_concat","qualname":"<PySequence>::in_place_concat","value":"pub fn in_place_concat(&Self, Python, &PySequence) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the concatenation of o1 and o2 on success. Equivalent to python `o1 += o2`\n","sig":null,"attributes":[{"value":"/ Return the concatenation of o1 and o2 on success. Equivalent to python `o1 += o2`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209437,"byte_end":209522,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209527,"byte_end":209536,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210014,"byte_end":210029,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"in_place_repeat","qualname":"<PySequence>::in_place_repeat","value":"pub fn in_place_repeat(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the result of repeating sequence object o count times.\n Equivalent to python `o *= count`\n NB: Python accepts negative counts; it empties the Sequence.\n","sig":null,"attributes":[{"value":"/ Return the result of repeating sequence object o count times.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209812,"byte_end":209877,"line_start":79,"line_end":79,"column_start":5,"column_end":70}},{"value":"/ Equivalent to python `o *= count`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209882,"byte_end":209919,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/ NB: Python accepts negative counts; it empties the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209924,"byte_end":209988,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":209993,"byte_end":210002,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210378,"byte_end":210386,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PySequence>::get_item","value":"pub fn get_item(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the ith element of the Sequence. Equivalent to python `o[index]`\n","sig":null,"attributes":[{"value":"/ Return the ith element of the Sequence. Equivalent to python `o[index]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210277,"byte_end":210352,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210357,"byte_end":210366,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210789,"byte_end":210798,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"get_slice","qualname":"<PySequence>::get_slice","value":"pub fn get_slice(&Self, Python, isize, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the slice of sequence object o between begin and end.\n This is the equivalent of the Python expression `o[begin:end]`\n","sig":null,"attributes":[{"value":"/ Return the slice of sequence object o between begin and end.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210628,"byte_end":210692,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ This is the equivalent of the Python expression `o[begin:end]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210697,"byte_end":210763,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":210768,"byte_end":210777,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211192,"byte_end":211200,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PySequence>::set_item","value":"pub fn set_item(&Self, Python, isize, &PyObject) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Assign object v to the ith element of o.\n Equivalent to Python statement `o[i] = v`\n","sig":null,"attributes":[{"value":"/ Assign object v to the ith element of o.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211072,"byte_end":211116,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ Equivalent to Python statement `o[i] = v`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211121,"byte_end":211166,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211171,"byte_end":211180,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211556,"byte_end":211564,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"del_item","qualname":"<PySequence>::del_item","value":"pub fn del_item(&Self, Python, isize) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete the ith element of object o.\n Python statement `del o[i]`\n","sig":null,"attributes":[{"value":"/ Delete the ith element of object o.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211455,"byte_end":211494,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ Python statement `del o[i]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211499,"byte_end":211530,"line_start":128,"line_end":128,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211535,"byte_end":211544,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211923,"byte_end":211932,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"set_slice","qualname":"<PySequence>::set_slice","value":"pub fn set_slice(&Self, Python, isize, isize, &PyObject) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Assign the sequence object v to the slice in sequence object o from i1 to i2.\n This is the equivalent of the Python statement `o[i1:i2] = v`\n","sig":null,"attributes":[{"value":"/ Assign the sequence object v to the slice in sequence object o from i1 to i2.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211746,"byte_end":211827,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/ This is the equivalent of the Python statement `o[i1:i2] = v`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211832,"byte_end":211897,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":211902,"byte_end":211911,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212458,"byte_end":212467,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"del_slice","qualname":"<PySequence>::del_slice","value":"pub fn del_slice(&Self, Python, isize, isize) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete the slice in sequence object o from i1 to i2.\n equivalent of the Python statement `del o[i1:i2]`\n","sig":null,"attributes":[{"value":"/ Delete the slice in sequence object o from i1 to i2.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212318,"byte_end":212374,"line_start":153,"line_end":153,"column_start":5,"column_end":61}},{"value":"/ equivalent of the Python statement `del o[i1:i2]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212379,"byte_end":212432,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212437,"byte_end":212446,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212876,"byte_end":212881,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"count","qualname":"<PySequence>::count","value":"pub fn count<V>(&Self, Python, V) -> PyResult<usize> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return the number of occurrences of value in o, that is, return the number of keys for\n which `o[key] == value`\n","sig":null,"attributes":[{"value":"/ Return the number of occurrences of value in o, that is, return the number of keys for","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212728,"byte_end":212818,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ which `o[key] == value`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212823,"byte_end":212850,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":212855,"byte_end":212864,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213334,"byte_end":213342,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"contains","qualname":"<PySequence>::contains","value":"pub fn contains<V>(&Self, Python, V) -> PyResult<bool> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if o contains value. this is equivalent to the Python expression `value in o`\n","sig":null,"attributes":[{"value":"/ Determine if o contains value. this is equivalent to the Python expression `value in o`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213217,"byte_end":213308,"line_start":182,"line_end":182,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213313,"byte_end":213322,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213842,"byte_end":213847,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"index","qualname":"<PySequence>::index","value":"pub fn index<V>(&Self, Python, V) -> PyResult<usize> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return the first index i for which o[i] == value.\n This is equivalent to the Python expression `o.index(value)`\n","sig":null,"attributes":[{"value":"/ Return the first index i for which o[i] == value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213694,"byte_end":213747,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"/ This is equivalent to the Python expression `o.index(value)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213752,"byte_end":213816,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":213821,"byte_end":213830,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214255,"byte_end":214259,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"list","qualname":"<PySequence>::list","value":"pub fn list(&Self, Python) -> PyResult<PyList>","parent":null,"children":[],"decl_id":null,"docs":" Return a fresh list based on the Sequence.\n","sig":null,"attributes":[{"value":"/ Return a fresh list based on the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214183,"byte_end":214229,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214234,"byte_end":214243,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214472,"byte_end":214477,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"tuple","qualname":"<PySequence>::tuple","value":"pub fn tuple(&Self, Python) -> PyResult<PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Return a fresh tuple based on the Sequence.\n","sig":null,"attributes":[{"value":"/ Return a fresh tuple based on the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214399,"byte_end":214446,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214451,"byte_end":214460,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214640,"byte_end":214644,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"iter","qualname":"<PySequence>::iter","value":"pub fn iter<'p>(&Self, Python) -> PyResult<PyIterator>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":214619,"byte_end":214628,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229828,"byte_end":229833,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"PySet","qualname":"::objects::set::PySet","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `set`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `set`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229786,"byte_end":229816,"line_start":27,"line_end":27,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230024,"byte_end":230027,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<PySet>::new","value":"pub fn new<I>(Python, I) -> PyResult<PySet> where I: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set from any iterable","sig":null,"attributes":[{"value":"/ Creates a new set from any iterable","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229915,"byte_end":229954,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229959,"byte_end":229962,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `set(iterable)` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229967,"byte_end":230012,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230368,"byte_end":230373,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"empty","qualname":"<PySet>::empty","value":"pub fn empty(Python) -> PyResult<PySet>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty set","sig":null,"attributes":[{"value":"/ Creates an empty set","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230269,"byte_end":230293,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230298,"byte_end":230301,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `set()` in Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230306,"byte_end":230342,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230347,"byte_end":230356,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230572,"byte_end":230577,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"clear","qualname":"<PySet>::clear","value":"pub fn clear(&Self, Python) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Empty an existing set of all values.\n","sig":null,"attributes":[{"value":"/ Empty an existing set of all values.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230506,"byte_end":230546,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230551,"byte_end":230560,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230823,"byte_end":230826,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"len","qualname":"<PySet>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of items in the set\n This is equivalent to Python `len(self)`\n","sig":null,"attributes":[{"value":"/ Return the number of items in the set","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230707,"byte_end":230748,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ This is equivalent to Python `len(self)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230753,"byte_end":230797,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230802,"byte_end":230811,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231065,"byte_end":231073,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"contains","qualname":"<PySet>::contains","value":"pub fn contains<V>(&Self, Python, V) -> PyResult<bool> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if the set contains the specified value.\n This is equivalent to the Python expression `value in self`.\n","sig":null,"attributes":[{"value":"/ Determine if the set contains the specified value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230930,"byte_end":230984,"line_start":66,"line_end":66,"column_start":5,"column_end":59}},{"value":"/ This is equivalent to the Python expression `value in self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":230989,"byte_end":231053,"line_start":67,"line_end":67,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231518,"byte_end":231521,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"add","qualname":"<PySet>::add","value":"pub fn add<V>(&Self, Python, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Add a value.\n This is equivalent to the Python expression `self.add(value)`.\n","sig":null,"attributes":[{"value":"/ Add a value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231419,"byte_end":231435,"line_start":81,"line_end":81,"column_start":5,"column_end":21}},{"value":"/ This is equivalent to the Python expression `self.add(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231440,"byte_end":231506,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231869,"byte_end":231876,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"discard","qualname":"<PySet>::discard","value":"pub fn discard<V>(&Self, Python, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Discard a value\n This is equivalent to the Python expression `self.discard(value)`.\n","sig":null,"attributes":[{"value":"/ Discard a value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231763,"byte_end":231782,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ This is equivalent to the Python expression `self.discard(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":231787,"byte_end":231857,"line_start":93,"line_end":93,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232264,"byte_end":232267,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"pop","qualname":"<PySet>::pop","value":"pub fn pop(&Self, Python) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Pop a value\n This is equivalent to the Python expression `self.pop(value)`.\n We get KeyError if the set is empty\n","sig":null,"attributes":[{"value":"/ Pop a value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232122,"byte_end":232137,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/ This is equivalent to the Python expression `self.pop(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232142,"byte_end":232208,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/ We get KeyError if the set is empty","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232213,"byte_end":232252,"line_start":105,"line_end":105,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238507,"byte_end":238515,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"PyString","qualname":"::objects::string::PyString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python string.\n Corresponds to `basestring` in Python 2, and `str` in Python 3.\n","sig":null,"attributes":[{"value":"/ Represents a Python string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238396,"byte_end":238427,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/ Corresponds to `basestring` in Python 2, and `str` in Python 3.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238428,"byte_end":238495,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238796,"byte_end":238803,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"PyBytes","qualname":"::objects::string::PyBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python byte string.\n Corresponds to `str` in Python 2, and `bytes` in Python 3.\n","sig":null,"attributes":[{"value":"/ Represents a Python byte string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238685,"byte_end":238721,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ Corresponds to `str` in Python 2, and `bytes` in Python 3.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":238722,"byte_end":238784,"line_start":39,"line_end":39,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4355},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":240980,"byte_end":240986,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::objects::string::PyStringData::Latin1","value":"PyStringData::Latin1(&'a [u8])","parent":{"krate":0,"index":4353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4358},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241002,"byte_end":241006,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::objects::string::PyStringData::Utf8","value":"PyStringData::Utf8(&'a [u8])","parent":{"krate":0,"index":4353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4361},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241022,"byte_end":241027,"line_start":120,"line_end":120,"column_start":5,"column_end":10},"name":"Utf16","qualname":"::objects::string::PyStringData::Utf16","value":"PyStringData::Utf16(&'a [u16])","parent":{"krate":0,"index":4353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4364},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241044,"byte_end":241049,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"Utf32","qualname":"::objects::string::PyStringData::Utf32","value":"PyStringData::Utf32(&'a [u32])","parent":{"krate":0,"index":4353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":240957,"byte_end":240969,"line_start":117,"line_end":117,"column_start":10,"column_end":22},"name":"PyStringData","qualname":"::objects::string::PyStringData","value":"pub enum PyStringData<'a> {\n    Latin1(&'a [u8]),\n    Utf8(&'a [u8]),\n    Utf16(&'a [u16]),\n    Utf32(&'a [u32]),\n}","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364}],"decl_id":null,"docs":" Enum of possible Python string representations.\n","sig":null,"attributes":[{"value":"/ Enum of possible Python string representations.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":240866,"byte_end":240917,"line_start":115,"line_end":115,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241886,"byte_end":241895,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"to_string","qualname":"<PyStringData>::to_string","value":"pub fn to_string(Self, Python) -> PyResult<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Convert the Python string data to a Rust string.","sig":null,"attributes":[{"value":"/ Convert the Python string data to a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241565,"byte_end":241617,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241622,"byte_end":241625,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ For UTF-8 and ASCII-only latin-1, returns a borrow into the original string data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241630,"byte_end":241715,"line_start":148,"line_end":148,"column_start":5,"column_end":90}},{"value":"/ For Latin-1, UTF-16 and UTF-32, returns an owned string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241720,"byte_end":241780,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241785,"byte_end":241788,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Fails with UnicodeDecodeError if the string data isn't valid in its encoding.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241793,"byte_end":241874,"line_start":151,"line_end":151,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244303,"byte_end":244318,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<PyStringData>::to_string_lossy","value":"pub fn to_string_lossy(Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Convert the Python string data to a Rust string.","sig":null,"attributes":[{"value":"/ Convert the Python string data to a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244049,"byte_end":244101,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244106,"byte_end":244109,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns a borrow into the original string data if possible.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244114,"byte_end":244177,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244182,"byte_end":244185,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Data that isn't valid in its encoding will be replaced","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244190,"byte_end":244248,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":244253,"byte_end":244291,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245565,"byte_end":245568,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<PyString>::new","value":"pub fn new(Python, &str) -> PyString","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python string object.","sig":null,"attributes":[{"value":"/ Creates a new Python string object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245066,"byte_end":245105,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245110,"byte_end":245113,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, this function will create a byte string if the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245118,"byte_end":245183,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ feature `py2-no-auto-unicode-promotion` is set, or the input","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245188,"byte_end":245252,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ input string is ASCII-only; otherwise, the input string will be","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245257,"byte_end":245324,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/ converted to a unicode string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245329,"byte_end":245363,"line_start":239,"line_end":239,"column_start":5,"column_end":39}},{"value":"/ Use `PyUnicode::new()` to always create a unicode string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245368,"byte_end":245429,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245434,"byte_end":245437,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On Python 3.x, this function always creates unicode `str` objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245442,"byte_end":245512,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245517,"byte_end":245520,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Panics if out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245525,"byte_end":245553,"line_start":244,"line_end":244,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246622,"byte_end":246626,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"data","qualname":"<PyString>::data","value":"pub fn data(&Self, Python) -> PyStringData","parent":null,"children":[],"decl_id":null,"docs":" Gets the python string data in its underlying representation.","sig":null,"attributes":[{"value":"/ Gets the python string data in its underlying representation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246321,"byte_end":246386,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246391,"byte_end":246394,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ For Python 2 byte strings, this function always returns `PyStringData::Utf8`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246399,"byte_end":246480,"line_start":267,"line_end":267,"column_start":5,"column_end":86}},{"value":"/ even if the bytes are not valid UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246485,"byte_end":246527,"line_start":268,"line_end":268,"column_start":5,"column_end":47}},{"value":"/ For unicode strings, returns the underlying representation used by Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":246532,"byte_end":246610,"line_start":269,"line_end":269,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248059,"byte_end":248068,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"to_string","qualname":"<PyString>::to_string","value":"pub fn to_string(&Self, Python) -> PyResult<Cow<, str>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the `PyString` into a Rust string.","sig":null,"attributes":[{"value":"/ Convert the `PyString` into a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247703,"byte_end":247749,"line_start":300,"line_end":300,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247754,"byte_end":247757,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, if the `PyString` refers to a byte string,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247762,"byte_end":247823,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ it will be decoded using UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247828,"byte_end":247863,"line_start":303,"line_end":303,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247868,"byte_end":247871,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Returns a `UnicodeDecodeError` if the input is not valid unicode","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247876,"byte_end":247944,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ (containing unpaired surrogates, or a Python 2.7 byte string that is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":247949,"byte_end":248021,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/ not valid UTF-8).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248026,"byte_end":248047,"line_start":307,"line_end":307,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248467,"byte_end":248482,"line_start":319,"line_end":319,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<PyString>::to_string_lossy","value":"pub fn to_string_lossy(&Self, Python) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Convert the `PyString` into a Rust string.","sig":null,"attributes":[{"value":"/ Convert the `PyString` into a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248159,"byte_end":248205,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248210,"byte_end":248213,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, if the `PyString` refers to a byte string,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248218,"byte_end":248279,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ it will be decoded using UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248284,"byte_end":248319,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248324,"byte_end":248327,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Unpaired surrogates and (on Python 2.7) invalid UTF-8 sequences are","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248332,"byte_end":248403,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248408,"byte_end":248455,"line_start":318,"line_end":318,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248758,"byte_end":248761,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<PyBytes>::new","value":"pub fn new(Python, &[u8]) -> PyBytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python byte string object.\n The byte string is initialized by copying the data from the `&[u8]`.","sig":null,"attributes":[{"value":"/ Creates a new Python byte string object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248584,"byte_end":248628,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/ The byte string is initialized by copying the data from the `&[u8]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248633,"byte_end":248705,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248710,"byte_end":248713,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Panics if out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248718,"byte_end":248746,"line_start":328,"line_end":328,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":249058,"byte_end":249062,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"data","qualname":"<PyBytes>::data","value":"pub fn data(&Self, Python) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python string data as byte slice.\n","sig":null,"attributes":[{"value":"/ Gets the Python string data as byte slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":249000,"byte_end":249046,"line_start":335,"line_end":335,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":258921,"byte_end":258928,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"PyTuple","qualname":"::objects::tuple::PyTuple","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python tuple object.\n","sig":null,"attributes":[{"value":"/ Represents a Python tuple object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":258872,"byte_end":258909,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259080,"byte_end":259083,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PyTuple>::new","value":"pub fn new(Python, &[PyObject]) -> PyTuple","parent":null,"children":[],"decl_id":null,"docs":" Construct a new tuple with the given elements.\n","sig":null,"attributes":[{"value":"/ Construct a new tuple with the given elements.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259018,"byte_end":259068,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259552,"byte_end":259557,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"empty","qualname":"<PyTuple>::empty","value":"pub fn empty(Python) -> PyTuple","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the empty tuple.\n","sig":null,"attributes":[{"value":"/ Retrieves the empty tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259510,"byte_end":259540,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259749,"byte_end":259752,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<PyTuple>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of the tuple.\n","sig":null,"attributes":[{"value":"/ Gets the length of the tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259690,"byte_end":259723,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259728,"byte_end":259737,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":260060,"byte_end":260068,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyTuple>::get_item","value":"pub fn get_item(&Self, Python, usize) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the item at the specified index.","sig":null,"attributes":[{"value":"/ Gets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259954,"byte_end":259995,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":260000,"byte_end":260003,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":260008,"byte_end":260048,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":260508,"byte_end":260516,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<PyTuple>::as_slice","value":"pub fn as_slice<'a>(&'a Self, Python) -> &'a [PyObject]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":260487,"byte_end":260496,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":261054,"byte_end":261058,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"iter","qualname":"<PyTuple>::iter","value":"pub fn iter(&Self, Python) -> slice::Iter<, PyObject>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":261033,"byte_end":261042,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4558},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264158,"byte_end":264164,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"NoArgs","qualname":"::objects::tuple::NoArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that represents the empty argument list.\n Corresponds to the empty tuple `()` in Python.","sig":null,"attributes":[{"value":"/ An empty struct that represents the empty argument list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263778,"byte_end":263838,"line_start":202,"line_end":202,"column_start":1,"column_end":61}},{"value":"/ Corresponds to the empty tuple `()` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263839,"byte_end":263889,"line_start":203,"line_end":203,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263890,"byte_end":263893,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263894,"byte_end":263907,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263908,"byte_end":263915,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ let gil_guard = cpython::Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263916,"byte_end":263967,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/ let py = gil_guard.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":263968,"byte_end":264000,"line_start":208,"line_end":208,"column_start":1,"column_end":33}},{"value":"/ let os = py.import(\"os\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264001,"byte_end":264039,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/ let pid = os.call(py, \"getpid\", cpython::NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264040,"byte_end":264108,"line_start":210,"line_end":210,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264109,"byte_end":264116,"line_start":211,"line_end":211,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266493,"byte_end":266499,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"PyType","qualname":"::objects::typeobject::PyType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a reference to a Python type object.\n","sig":null,"attributes":[{"value":"/ Represents a reference to a Python type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266430,"byte_end":266481,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266687,"byte_end":266698,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"as_type_ptr","qualname":"<PyType>::as_type_ptr","value":"pub fn as_type_ptr(&Self) -> *mut ffi::PyTypeObject","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying FFI pointer associated with this Python object.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying FFI pointer associated with this Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266585,"byte_end":266661,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266666,"byte_end":266675,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267014,"byte_end":267027,"line_start":44,"line_end":44,"column_start":19,"column_end":32},"name":"from_type_ptr","qualname":"<PyType>::from_type_ptr","value":"pub unsafe fn from_type_ptr(Python, *mut ffi::PyTypeObject) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the PyType instance for the given FFI pointer.\n This increments the reference count on the type object.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Retrieves the PyType instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266795,"byte_end":266855,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/ This increments the reference count on the type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266860,"byte_end":266919,"line_start":41,"line_end":41,"column_start":5,"column_end":64}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266924,"byte_end":266981,"line_start":42,"line_end":42,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266986,"byte_end":266995,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267231,"byte_end":267235,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"name","qualname":"<PyType>::name","value":"pub fn name<'a>(&'a Self, Python) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Gets the name of the PyType.\n","sig":null,"attributes":[{"value":"/ Gets the name of the PyType.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267187,"byte_end":267219,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267451,"byte_end":267464,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"is_subtype_of","qualname":"<PyType>::is_subtype_of","value":"pub fn is_subtype_of(&Self, Python, &PyType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is a subtype of `b`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is a subtype of `b`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267379,"byte_end":267425,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267430,"byte_end":267439,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267675,"byte_end":267686,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_instance","qualname":"<PyType>::is_instance","value":"pub fn is_instance(&Self, Python, &PyObject) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `obj` is an instance of `self`.\n","sig":null,"attributes":[{"value":"/ Return true if `obj` is an instance of `self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267599,"byte_end":267649,"line_start":59,"line_end":59,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267654,"byte_end":267663,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267983,"byte_end":267987,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"call","qualname":"<PyType>::call","value":"pub fn call<A>(&Self, Python, A, Option<&PyDict>) -> PyResult<PyObject> where\nA: ToPyObject<ObjectType = PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Calls the type object, thus creating a new instance.\n This is equivalent to the Python expression: `self(*args, **kwargs)`\n","sig":null,"attributes":[{"value":"/ Calls the type object, thus creating a new instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267824,"byte_end":267880,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ This is equivalent to the Python expression: `self(*args, **kwargs)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267885,"byte_end":267957,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":267962,"byte_end":267971,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272407,"byte_end":272413,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Python","qualname":"::python::Python","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type that indicates that the GIL is currently held.","sig":null,"attributes":[{"value":"/ Marker type that indicates that the GIL is currently held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":271742,"byte_end":271804,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":271805,"byte_end":271808,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The 'Python' struct is a zero-size marker struct that is required for most Python operations.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":271809,"byte_end":271906,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ This is used to indicate that the operation accesses/modifies the Python interpreter state,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":271907,"byte_end":272002,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ and thus can only be called if the Python interpreter is initialized and the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272003,"byte_end":272083,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ Python global interpreter lock (GIL) is acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272084,"byte_end":272137,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/ The lifetime `'p` represents the lifetime of the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272138,"byte_end":272210,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272211,"byte_end":272214,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You can imagine the GIL to be a giant `Mutex<PythonInterpreterState>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272215,"byte_end":272289,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ The type `Python<'p>` then acts like a reference `&'p PythonInterpreterState`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272290,"byte_end":272372,"line_start":37,"line_end":37,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272507,"byte_end":272519,"line_start":42,"line_end":42,"column_start":11,"column_end":23},"name":"PythonObject","qualname":"::python::PythonObject","value":"PythonObject: crate::conversion::ToPyObject + Send + Sized + 'static","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"decl_id":null,"docs":" Trait implemented by all Python object types.\n","sig":null,"attributes":[{"value":"/ Trait implemented by all Python object types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272447,"byte_end":272496,"line_start":41,"line_end":41,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272630,"byte_end":272639,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"as_object","qualname":"::python::PythonObject::as_object","value":"pub fn as_object(&Self) -> &PyObject","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" Casts the Python object to PyObject.\n","sig":null,"attributes":[{"value":"/ Casts the Python object to PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272582,"byte_end":272622,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272714,"byte_end":272725,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"into_object","qualname":"::python::PythonObject::into_object","value":"pub fn into_object(Self) -> PyObject","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" Casts the Python object to PyObject.\n","sig":null,"attributes":[{"value":"/ Casts the Python object to PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272666,"byte_end":272706,"line_start":46,"line_end":46,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272890,"byte_end":272913,"line_start":51,"line_end":51,"column_start":15,"column_end":38},"name":"unchecked_downcast_from","qualname":"::python::PythonObject::unchecked_downcast_from","value":"pub unsafe fn unchecked_downcast_from(PyObject) -> Self","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" Unchecked downcast from PyObject to Self.\n Undefined behavior if the input object does not have the expected type.\n","sig":null,"attributes":[{"value":"/ Unchecked downcast from PyObject to Self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272750,"byte_end":272795,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the input object does not have the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272800,"byte_end":272875,"line_start":50,"line_end":50,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273083,"byte_end":273113,"line_start":55,"line_end":55,"column_start":15,"column_end":45},"name":"unchecked_downcast_borrow_from","qualname":"::python::PythonObject::unchecked_downcast_borrow_from","value":"pub unsafe fn unchecked_downcast_borrow_from(&PyObject) -> &Self","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" Unchecked downcast from PyObject to Self.\n Undefined behavior if the input object does not have the expected type.\n","sig":null,"attributes":[{"value":"/ Unchecked downcast from PyObject to Self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272943,"byte_end":272988,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the input object does not have the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272993,"byte_end":273068,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273211,"byte_end":273236,"line_start":59,"line_end":59,"column_start":12,"column_end":37},"name":"PythonObjectDowncastError","qualname":"::python::PythonObjectDowncastError","value":"PythonObjectDowncastError {  }","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273410,"byte_end":273413,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<PythonObjectDowncastError>::new","value":"pub fn new<impl Into<String>: Into<String>>(Python, impl Into<String>, PyType)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273809,"byte_end":273840,"line_start":81,"line_end":81,"column_start":11,"column_end":42},"name":"PythonObjectWithCheckedDowncast","qualname":"::python::PythonObjectWithCheckedDowncast","value":"PythonObjectWithCheckedDowncast: PythonObject","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1802}],"decl_id":null,"docs":" Trait implemented by Python object types that allow a checked downcast.\n","sig":null,"attributes":[{"value":"/ Trait implemented by Python object types that allow a checked downcast.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273723,"byte_end":273798,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273925,"byte_end":273938,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"downcast_from","qualname":"::python::PythonObjectWithCheckedDowncast::downcast_from","value":"pub fn downcast_from<'p>(Python, PyObject)\n-> Result<Self, PythonObjectDowncastError>","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Cast from PyObject to a concrete Python object type.\n","sig":null,"attributes":[{"value":"/ Cast from PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273861,"byte_end":273917,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274114,"byte_end":274134,"line_start":89,"line_end":89,"column_start":8,"column_end":28},"name":"downcast_borrow_from","qualname":"::python::PythonObjectWithCheckedDowncast::downcast_borrow_from","value":"pub fn downcast_borrow_from<'a, 'p>(Python, &'a PyObject)\n-> Result<&'a Self, PythonObjectDowncastError>","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Cast from PyObject to a concrete Python object type.\n","sig":null,"attributes":[{"value":"/ Cast from PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274050,"byte_end":274106,"line_start":88,"line_end":88,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274350,"byte_end":274376,"line_start":96,"line_end":96,"column_start":11,"column_end":37},"name":"PythonObjectWithTypeObject","qualname":"::python::PythonObjectWithTypeObject","value":"PythonObjectWithTypeObject: PythonObjectWithCheckedDowncast","parent":null,"children":[{"krate":0,"index":1806}],"decl_id":null,"docs":" Trait implemented by Python object types that have a corresponding type object.\n","sig":null,"attributes":[{"value":"/ Trait implemented by Python object types that have a corresponding type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274256,"byte_end":274339,"line_start":95,"line_end":95,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274482,"byte_end":274493,"line_start":98,"line_end":98,"column_start":8,"column_end":19},"name":"type_object","qualname":"::python::PythonObjectWithTypeObject::type_object","value":"pub fn type_object(Python) -> PyType","parent":{"krate":0,"index":1805},"children":[],"decl_id":null,"docs":" Retrieves the type object for this Python object type.\n","sig":null,"attributes":[{"value":"/ Retrieves the type object for this Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274416,"byte_end":274474,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274530,"byte_end":274537,"line_start":101,"line_end":101,"column_start":11,"column_end":18},"name":"PyClone","qualname":"::python::PyClone","value":"PyClone: Sized","parent":null,"children":[{"krate":0,"index":1808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274554,"byte_end":274563,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"clone_ref","qualname":"::python::PyClone::clone_ref","value":"pub fn clone_ref(&Self, Python) -> Self","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275087,"byte_end":275093,"line_start":129,"line_end":129,"column_start":11,"column_end":17},"name":"PyDrop","qualname":"::python::PyDrop","value":"PyDrop: Sized","parent":null,"children":[{"krate":0,"index":1816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275110,"byte_end":275121,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"release_ref","qualname":"::python::PyDrop::release_ref","value":"pub fn release_ref(Self, Python)","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277461,"byte_end":277480,"line_start":227,"line_end":227,"column_start":19,"column_end":38},"name":"assume_gil_acquired","qualname":"<Python>::assume_gil_acquired","value":"pub unsafe fn assume_gil_acquired() -> Python","parent":null,"children":[],"decl_id":null,"docs":" Retrieve Python instance under the assumption that the GIL is already acquired at this point,\n and stays acquired for the lifetime `'p`.","sig":null,"attributes":[{"value":"/ Retrieve Python instance under the assumption that the GIL is already acquired at this point,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277070,"byte_end":277167,"line_start":220,"line_end":220,"column_start":5,"column_end":102}},{"value":"/ and stays acquired for the lifetime `'p`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277172,"byte_end":277217,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277222,"byte_end":277225,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Because the output lifetime `'p` is not connected to any input parameter,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277230,"byte_end":277307,"line_start":223,"line_end":223,"column_start":5,"column_end":82}},{"value":"/ care must be taken that the compiler infers an appropriate lifetime for `'p`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277312,"byte_end":277392,"line_start":224,"line_end":224,"column_start":5,"column_end":85}},{"value":"/ when calling this function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277397,"byte_end":277428,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277433,"byte_end":277442,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277842,"byte_end":277853,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"acquire_gil","qualname":"<Python>::acquire_gil","value":"pub fn acquire_gil() -> GILGuard","parent":null,"children":[],"decl_id":null,"docs":" Acquires the global interpreter lock, which allows access to the Python runtime.","sig":null,"attributes":[{"value":"/ Acquires the global interpreter lock, which allows access to the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277538,"byte_end":277622,"line_start":231,"line_end":231,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277627,"byte_end":277630,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If the Python runtime is not already initialized, this function will initialize it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277635,"byte_end":277722,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ See [prepare_freethreaded_python()](fn.prepare_freethreaded_python.html) for details.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277727,"byte_end":277816,"line_start":234,"line_end":234,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277821,"byte_end":277830,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277997,"byte_end":278010,"line_start":241,"line_end":241,"column_start":12,"column_end":25},"name":"allow_threads","qualname":"<Python>::allow_threads","value":"pub fn allow_threads<T, F>(Self, F) -> T where F: Send + FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Temporarily releases the GIL, thus allowing other Python threads to run.\n","sig":null,"attributes":[{"value":"/ Temporarily releases the GIL, thus allowing other Python threads to run.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277909,"byte_end":277985,"line_start":240,"line_end":240,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278632,"byte_end":278636,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"eval","qualname":"<Python>::eval","value":"pub fn eval(Self, &str, Option<&PyDict>, Option<&PyDict>)\n-> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a Python expression in the given context and returns the result.","sig":null,"attributes":[{"value":"/ Evaluates a Python expression in the given context and returns the result.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278391,"byte_end":278469,"line_start":255,"line_end":255,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278474,"byte_end":278477,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `globals` is `None`, it defaults to Python module `__main__`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278482,"byte_end":278550,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/ If `locals` is `None`, it defaults to the value of `globals`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278555,"byte_end":278620,"line_start":258,"line_end":258,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":279072,"byte_end":279075,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"run","qualname":"<Python>::run","value":"pub fn run(Self, &str, Option<&PyDict>, Option<&PyDict>) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes one or more Python statements in the given context.","sig":null,"attributes":[{"value":"/ Executes one or more Python statements in the given context.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278845,"byte_end":278909,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278914,"byte_end":278917,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If `globals` is `None`, it defaults to Python module `__main__`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278922,"byte_end":278990,"line_start":270,"line_end":270,"column_start":5,"column_end":73}},{"value":"/ If `locals` is `None`, it defaults to the value of `globals`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":278995,"byte_end":279060,"line_start":271,"line_end":271,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280666,"byte_end":280670,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"None","qualname":"<Python>::None","value":"pub fn None(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `None`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `None`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280526,"byte_end":280567,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280572,"byte_end":280596,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280645,"byte_end":280654,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280911,"byte_end":280915,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"True","qualname":"<Python>::True","value":"pub fn True(Self) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `True`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `True`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280771,"byte_end":280812,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280817,"byte_end":280841,"line_start":331,"line_end":331,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":280890,"byte_end":280899,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281187,"byte_end":281192,"line_start":340,"line_end":340,"column_start":12,"column_end":17},"name":"False","qualname":"<Python>::False","value":"pub fn False(Self) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `False`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `False`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281046,"byte_end":281088,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281093,"byte_end":281117,"line_start":338,"line_end":338,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281166,"byte_end":281175,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281494,"byte_end":281508,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"NotImplemented","qualname":"<Python>::NotImplemented","value":"pub fn NotImplemented(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `NotImplemented`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `NotImplemented`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281344,"byte_end":281395,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281400,"byte_end":281424,"line_start":347,"line_end":347,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281473,"byte_end":281482,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281674,"byte_end":281682,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"get_type","qualname":"<Python>::get_type","value":"pub fn get_type<T>(Self) -> PyType where T: PythonObjectWithTypeObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python type object for type T.\n","sig":null,"attributes":[{"value":"/ Gets the Python type object for type T.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281619,"byte_end":281662,"line_start":353,"line_end":353,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281862,"byte_end":281868,"line_start":362,"line_end":362,"column_start":12,"column_end":18},"name":"import","qualname":"<Python>::import","value":"pub fn import(Self, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Import the Python module with the specified name.\n","sig":null,"attributes":[{"value":"/ Import the Python module with the specified name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281797,"byte_end":281850,"line_start":361,"line_end":361,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285241,"byte_end":285268,"line_start":47,"line_end":47,"column_start":8,"column_end":35},"name":"prepare_freethreaded_python","qualname":"::pythonrun::prepare_freethreaded_python","value":"pub fn prepare_freethreaded_python()","parent":null,"children":[],"decl_id":null,"docs":" Prepares the use of Python in a free-threaded context.","sig":null,"attributes":[{"value":"/ Prepares the use of Python in a free-threaded context.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284314,"byte_end":284372,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284373,"byte_end":284376,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the Python interpreter is not already initialized, this function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284377,"byte_end":284448,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ will initialize it with disabled signal handling","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284449,"byte_end":284501,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ (Python will not raise the `KeyboardInterrupt` exception).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284502,"byte_end":284564,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ Python signal handling depends on the notion of a 'main thread', which must be","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284565,"byte_end":284647,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ the thread that initializes the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284648,"byte_end":284703,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284704,"byte_end":284707,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If both the Python interpreter and Python threading are already initialized,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284708,"byte_end":284788,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ this function has no effect.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284789,"byte_end":284821,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284822,"byte_end":284825,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284826,"byte_end":284837,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ If the Python interpreter is initialized but Python threading is not,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284838,"byte_end":284911,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ a panic occurs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284912,"byte_end":284931,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ It is not possible to safely access the Python runtime unless the main","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":284932,"byte_end":285006,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ thread (the thread which originally initialized Python) also initializes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285007,"byte_end":285083,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ threading.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285084,"byte_end":285098,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285099,"byte_end":285102,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When writing an extension module, the `py_module_initializer!` macro","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285103,"byte_end":285175,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ will ensure that Python threading is initialized.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285176,"byte_end":285229,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":285230,"byte_end":285233,"line_start":46,"line_end":46,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287650,"byte_end":287658,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"GILGuard","qualname":"::pythonrun::GILGuard","value":"GILGuard {  }","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"decl_id":null,"docs":" RAII type that represents the Global Interpreter Lock acquisition.","sig":null,"attributes":[{"value":"/ RAII type that represents the Global Interpreter Lock acquisition.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287352,"byte_end":287422,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287423,"byte_end":287426,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287427,"byte_end":287440,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287441,"byte_end":287448,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287449,"byte_end":287473,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287474,"byte_end":287477,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287478,"byte_end":287483,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/     let gil_guard = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287484,"byte_end":287530,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/     let py = gil_guard.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287531,"byte_end":287567,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/ } // GIL is released when gil_guard is dropped","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287568,"byte_end":287618,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287619,"byte_end":287626,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287627,"byte_end":287638,"line_start":95,"line_end":95,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288321,"byte_end":288328,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"acquire","qualname":"<GILGuard>::acquire","value":"pub fn acquire() -> GILGuard","parent":null,"children":[],"decl_id":null,"docs":" Acquires the global interpreter lock, which allows access to the Python runtime.","sig":null,"attributes":[{"value":"/ Acquires the global interpreter lock, which allows access to the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288031,"byte_end":288115,"line_start":111,"line_end":111,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288120,"byte_end":288123,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the Python runtime is not already initialized, this function will initialize it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288128,"byte_end":288215,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ See [prepare_freethreaded_python()](fn.prepare_freethreaded_python.html) for details.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288220,"byte_end":288309,"line_start":114,"line_end":114,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288744,"byte_end":288750,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"python","qualname":"<GILGuard>::python","value":"pub fn python<'p>(&'p Self) -> Python","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the marker type that proves that the GIL was acquired.\n","sig":null,"attributes":[{"value":"/ Retrieves the marker type that proves that the GIL was acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288650,"byte_end":288718,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288723,"byte_end":288732,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289224,"byte_end":289236,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"GILProtected","qualname":"::pythonrun::GILProtected","value":"GILProtected {  }","parent":null,"children":[{"krate":0,"index":1889}],"decl_id":null,"docs":" Mutex-like wrapper object for data that is protected by the Python GIL.","sig":null,"attributes":[{"value":"/ Mutex-like wrapper object for data that is protected by the Python GIL.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288839,"byte_end":288914,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288915,"byte_end":288918,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288919,"byte_end":288932,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288933,"byte_end":288940,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288941,"byte_end":288965,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/ use cpython::{Python, GILProtected};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288966,"byte_end":289006,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289007,"byte_end":289010,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let data = GILProtected::new(Cell::new(0));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289011,"byte_end":289058,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289059,"byte_end":289062,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289063,"byte_end":289068,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/     let gil_guard = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289069,"byte_end":289115,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/     let cell = data.get(gil_guard.python());","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289116,"byte_end":289164,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/     cell.set(cell.get() + 1);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289165,"byte_end":289198,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289199,"byte_end":289204,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289205,"byte_end":289212,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289862,"byte_end":289865,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<GILProtected<T>>::new","value":"pub fn new(T) -> GILProtected<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `GILProtected`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `GILProtected`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289754,"byte_end":289799,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289804,"byte_end":289813,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289818,"byte_end":289850,"line_start":170,"line_end":170,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290121,"byte_end":290124,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"get","qualname":"<GILProtected<T>>::get","value":"pub fn get<'a>(&'a Self, Python) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the data stored in the `GILProtected`.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the data stored in the `GILProtected`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289943,"byte_end":290015,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290020,"byte_end":290023,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Requires a `Python` instance as proof that the GIL is acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290028,"byte_end":290095,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290100,"byte_end":290109,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290284,"byte_end":290294,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GILProtected<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `GILProtected`, returning the wrapped value.\n","sig":null,"attributes":[{"value":"/ Consumes the `GILProtected`, returning the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290197,"byte_end":290258,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":290263,"byte_end":290272,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"py_class","qualname":"::py_class","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1945},{"krate":0,"index":2000},{"krate":0,"index":4617},{"krate":0,"index":2003},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":4639},{"krate":0,"index":4658},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gc","qualname":"::py_class::gc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":4607},{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":1933},{"krate":0,"index":1938},{"krate":0,"index":1942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":297252,"byte_end":297265,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"TraverseError","qualname":"::py_class::gc::TraverseError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4607},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":297315,"byte_end":297324,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"VisitProc","qualname":"::py_class::gc::VisitProc","value":"VisitProc {  }","parent":null,"children":[{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":297612,"byte_end":297616,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"call","qualname":"<VisitProc>::call","value":"pub fn call<T>(&Self, &T) -> Result<(), TraverseError> where T: PythonObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":298966,"byte_end":298977,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"name":"tp_traverse","qualname":"::py_class::gc::tp_traverse","value":"pub unsafe fn tp_traverse<C,\n                          F>(&str, *mut ffi::PyObject, ffi::visitproc,\n                             *mut libc::c_void, F) -> libc::c_int where\nC: PythonObject, F: FnOnce(&C, Python, VisitProc) -> Result<(), TraverseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":300156,"byte_end":300164,"line_start":138,"line_end":138,"column_start":15,"column_end":23},"name":"tp_clear","qualname":"::py_class::gc::tp_clear","value":"pub unsafe fn tp_clear<C, F>(&str, *mut ffi::PyObject, F) -> libc::c_int where\nC: PythonObject, F: FnOnce(&C, Python) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"members","qualname":"::py_class::members","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1981},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1996}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":302921,"byte_end":302931,"line_start":30,"line_end":30,"column_start":11,"column_end":21},"name":"TypeMember","qualname":"::py_class::members::TypeMember","value":"TypeMember<T>","parent":null,"children":[{"krate":0,"index":1974}],"decl_id":null,"docs":" Represents something that can be added as a member to a Python class/type.","sig":null,"attributes":[{"value":"/ Represents something that can be added as a member to a Python class/type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":302757,"byte_end":302835,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":302836,"byte_end":302839,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ T: type of rust class used for instances of the Python class/type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":302840,"byte_end":302910,"line_start":29,"line_end":29,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303259,"byte_end":303274,"line_start":40,"line_end":40,"column_start":15,"column_end":30},"name":"into_descriptor","qualname":"::py_class::members::TypeMember::into_descriptor","value":"pub unsafe fn into_descriptor(Self, Python, *mut ffi::PyTypeObject)\n-> PyResult<PyObject>","parent":{"krate":0,"index":1972},"children":[],"decl_id":null,"docs":" Convert the type member into a python object\n that can be stored in the type dict.","sig":null,"attributes":[{"value":"/ Convert the type member into a python object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":302968,"byte_end":303016,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/ that can be stored in the type dict.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303021,"byte_end":303061,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303066,"byte_end":303069,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Because the member may expect `self` values to be of type `T`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303074,"byte_end":303140,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ `ty` must be T::type_object() or a derived class.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303145,"byte_end":303198,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/ (otherwise the behavior is undefined)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303203,"byte_end":303244,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":306119,"byte_end":306143,"line_start":111,"line_end":111,"column_start":12,"column_end":36},"name":"InstanceMethodDescriptor","qualname":"::py_class::members::InstanceMethodDescriptor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":306225,"byte_end":306258,"line_start":114,"line_end":114,"column_start":15,"column_end":48},"name":"create_instance_method_descriptor","qualname":"::py_class::members::create_instance_method_descriptor","value":"pub unsafe fn create_instance_method_descriptor<T>(*mut ffi::PyMethodDef)\n-> InstanceMethodDescriptor<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":306201,"byte_end":306210,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":308416,"byte_end":308437,"line_start":168,"line_end":168,"column_start":12,"column_end":33},"name":"ClassMethodDescriptor","qualname":"::py_class::members::ClassMethodDescriptor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":308487,"byte_end":308517,"line_start":171,"line_end":171,"column_start":15,"column_end":45},"name":"create_class_method_descriptor","qualname":"::py_class::members::create_class_method_descriptor","value":"pub unsafe fn create_class_method_descriptor(*mut ffi::PyMethodDef)\n-> ClassMethodDescriptor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":308463,"byte_end":308472,"line_start":170,"line_end":170,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2003},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slots","qualname":"::py_class::slots","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2071},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2100},{"krate":0,"index":4619},{"krate":0,"index":4621},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4629},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4637},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":334015,"byte_end":334030,"line_start":77,"line_end":77,"column_start":11,"column_end":26},"name":"TPFLAGS_DEFAULT","qualname":"::py_class::slots::TPFLAGS_DEFAULT","value":"::libc::c_ulong","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":333973,"byte_end":334004,"line_start":76,"line_end":76,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":335338,"byte_end":335351,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"build_tp_name","qualname":"::py_class::slots::build_tp_name","value":"pub fn build_tp_name(Option<&str>, &str) -> *mut c_char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":335696,"byte_end":335715,"line_start":118,"line_end":118,"column_start":26,"column_end":45},"name":"tp_dealloc_callback","qualname":"::py_class::slots::tp_dealloc_callback","value":"pub unsafe extern \"C\" fn tp_dealloc_callback<T>(*mut ffi::PyObject) where\nT: super::BaseObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":340379,"byte_end":340401,"line_start":247,"line_end":247,"column_start":15,"column_end":37},"name":"mp_ass_subscript_error","qualname":"::py_class::slots::mp_ass_subscript_error","value":"pub unsafe fn mp_ass_subscript_error(*mut ffi::PyObject, &[u8]) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":345796,"byte_end":345806,"line_start":407,"line_end":407,"column_start":8,"column_end":18},"name":"extract_op","qualname":"::py_class::slots::extract_op","value":"pub fn extract_op(Python, c_int) -> PyResult<CompareOp>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":349679,"byte_end":349698,"line_start":507,"line_end":507,"column_start":8,"column_end":27},"name":"type_error_to_false","qualname":"::py_class::slots::type_error_to_false","value":"pub fn type_error_to_false(Python, PyErr) -> PyResult<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":350866,"byte_end":350887,"line_start":541,"line_end":541,"column_start":12,"column_end":33},"name":"UnitCallbackConverter","qualname":"::py_class::slots::UnitCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351118,"byte_end":351136,"line_start":557,"line_end":557,"column_start":12,"column_end":30},"name":"LenResultConverter","qualname":"::py_class::slots::LenResultConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351547,"byte_end":351570,"line_start":577,"line_end":577,"column_start":12,"column_end":35},"name":"IterNextResultConverter","qualname":"::py_class::slots::IterNextResultConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":352118,"byte_end":352132,"line_start":601,"line_end":601,"column_start":11,"column_end":25},"name":"WrappingCastTo","qualname":"::py_class::slots::WrappingCastTo","value":"WrappingCastTo<T>","parent":null,"children":[{"krate":0,"index":2102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":352145,"byte_end":352158,"line_start":602,"line_end":602,"column_start":8,"column_end":21},"name":"wrapping_cast","qualname":"::py_class::slots::WrappingCastTo::wrapping_cast","value":"pub fn wrapping_cast(Self) -> T","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":352737,"byte_end":352750,"line_start":626,"line_end":626,"column_start":12,"column_end":25},"name":"HashConverter","qualname":"::py_class::slots::HashConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":353143,"byte_end":353156,"line_start":650,"line_end":650,"column_start":12,"column_end":25},"name":"BoolConverter","qualname":"::py_class::slots::BoolConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":354699,"byte_end":354706,"line_start":695,"line_end":695,"column_start":26,"column_end":33},"name":"sq_item","qualname":"::py_class::slots::sq_item","value":"pub unsafe extern \"C\" fn sq_item(*mut ffi::PyObject, ffi::Py_ssize_t)\n-> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Used as implementation in the `sq_item` slot to forward calls to the `mp_subscript` slot.\n","sig":null,"attributes":[{"value":"/ Used as implementation in the `sq_item` slot to forward calls to the `mp_subscript` slot.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":354580,"byte_end":354673,"line_start":694,"line_end":694,"column_start":1,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4640},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292004,"byte_end":292006,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"Lt","qualname":"::py_class::CompareOp::Lt","value":"CompareOp::Lt","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292034,"byte_end":292036,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"Le","qualname":"::py_class::CompareOp::Le","value":"CompareOp::Le","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292064,"byte_end":292066,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Eq","qualname":"::py_class::CompareOp::Eq","value":"CompareOp::Eq","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292094,"byte_end":292096,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"Ne","qualname":"::py_class::CompareOp::Ne","value":"CompareOp::Ne","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292124,"byte_end":292126,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"Gt","qualname":"::py_class::CompareOp::Gt","value":"CompareOp::Gt","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292154,"byte_end":292156,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"Ge","qualname":"::py_class::CompareOp::Ge","value":"CompareOp::Ge","parent":{"krate":0,"index":4639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4639},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":291988,"byte_end":291997,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"CompareOp","qualname":"::py_class::CompareOp","value":"pub enum CompareOp { Lt = , Le = , Eq = , Ne = , Gt = , Ge = , }","parent":null,"children":[{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":4649},{"krate":0,"index":4652},{"krate":0,"index":4655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292343,"byte_end":292371,"line_start":59,"line_end":59,"column_start":11,"column_end":39},"name":"PythonObjectFromPyClassMacro","qualname":"::py_class::PythonObjectFromPyClassMacro","value":"PythonObjectFromPyClassMacro: python::PythonObjectWithTypeObject","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167}],"decl_id":null,"docs":" Trait implemented by the types produced by the `py_class!()` macro.","sig":null,"attributes":[{"value":"/ Trait implemented by the types produced by the `py_class!()` macro.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292183,"byte_end":292254,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292255,"byte_end":292258,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This is an unstable implementation detail; do not implement manually!","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292259,"byte_end":292332,"line_start":58,"line_end":58,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292544,"byte_end":292554,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"initialize","qualname":"::py_class::PythonObjectFromPyClassMacro::initialize","value":"pub fn initialize(Python, Option<&str>) -> PyResult<PyType>","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" Initializes the class.","sig":null,"attributes":[{"value":"/ Initializes the class.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292414,"byte_end":292440,"line_start":60,"line_end":60,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292445,"byte_end":292448,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ module_name: the name of the parent module into which the class will be placed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292453,"byte_end":292536,"line_start":62,"line_end":62,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292680,"byte_end":292693,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"add_to_module","qualname":"::py_class::PythonObjectFromPyClassMacro::add_to_module","value":"pub fn add_to_module(Python, &PyModule) -> PyResult<()>","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" Initializes the class and adds it to the module.\n","sig":null,"attributes":[{"value":"/ Initializes the class and adds it to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292620,"byte_end":292672,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292777,"byte_end":292788,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"data_offset","qualname":"::py_class::data_offset","value":"pub fn data_offset<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292745,"byte_end":292754,"line_start":69,"line_end":69,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292990,"byte_end":293003,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"data_new_size","qualname":"::py_class::data_new_size","value":"pub fn data_new_size<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292958,"byte_end":292967,"line_start":77,"line_end":77,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293132,"byte_end":293140,"line_start":85,"line_end":85,"column_start":15,"column_end":23},"name":"data_get","qualname":"::py_class::data_get","value":"pub unsafe fn data_get<'a, T>(Python, &'a PyObject, usize) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293093,"byte_end":293102,"line_start":83,"line_end":83,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293341,"byte_end":293350,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"name":"data_init","qualname":"::py_class::data_init","value":"pub unsafe fn data_init<'a, T>(Python, &'a PyObject, usize, T) where T: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293302,"byte_end":293311,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293594,"byte_end":293603,"line_start":102,"line_end":102,"column_start":15,"column_end":24},"name":"data_drop","qualname":"::py_class::data_drop","value":"pub unsafe fn data_drop<'a, T>(Python, *mut ffi::PyObject, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293555,"byte_end":293564,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293799,"byte_end":293807,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"is_ready","qualname":"::py_class::is_ready","value":"pub fn is_ready(Python, &ffi::PyTypeObject) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293767,"byte_end":293776,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293994,"byte_end":294004,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"BaseObject","qualname":"::py_class::BaseObject","value":"BaseObject: PythonObject","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":" A PythonObject that is usable as a base type with the `py_class!()` macro.\n","sig":null,"attributes":[{"value":"/ A PythonObject that is usable as a base type with the `py_class!()` macro.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":293905,"byte_end":293983,"line_start":113,"line_end":113,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294075,"byte_end":294079,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"size","qualname":"::py_class::BaseObject::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Gets the size of the object, in bytes.\n","sig":null,"attributes":[{"value":"/ Gets the size of the object, in bytes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294025,"byte_end":294067,"line_start":115,"line_end":115,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294102,"byte_end":294110,"line_start":118,"line_end":118,"column_start":10,"column_end":18},"name":"InitType","qualname":"::py_class::BaseObject::InitType","value":"type InitType;","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294340,"byte_end":294345,"line_start":124,"line_end":124,"column_start":15,"column_end":20},"name":"alloc","qualname":"::py_class::BaseObject::alloc","value":"pub unsafe fn alloc(Python, &PyType, Self::InitType) -> PyResult<PyObject>","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Allocates a new object (usually by calling ty->tp_alloc),\n and initializes it using init_val.\n `ty` must be derived from the Self type, and the resulting object\n must be of type `ty`.\n","sig":null,"attributes":[{"value":"/ Allocates a new object (usually by calling ty->tp_alloc),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294117,"byte_end":294178,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ and initializes it using init_val.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294183,"byte_end":294221,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/ `ty` must be derived from the Self type, and the resulting object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294226,"byte_end":294295,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ must be of type `ty`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294300,"byte_end":294325,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294617,"byte_end":294624,"line_start":129,"line_end":129,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::py_class::BaseObject::dealloc","value":"pub unsafe fn dealloc(Python, *mut ffi::PyObject)","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Calls the rust destructor for the object and frees the memory\n (usually by calling ptr->ob_type->tp_free).\n This function is used as tp_dealloc implementation.\n","sig":null,"attributes":[{"value":"/ Calls the rust destructor for the object and frees the memory","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294425,"byte_end":294490,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/ (usually by calling ptr->ob_type->tp_free).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294495,"byte_end":294542,"line_start":127,"line_end":127,"column_start":5,"column_end":52}},{"value":"/ This function is used as tp_dealloc implementation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294547,"byte_end":294602,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4660},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362705,"byte_end":362720,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"PySharedRefCell","qualname":"::sharedref::PySharedRefCell","value":"PySharedRefCell {  }","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663}],"decl_id":null,"docs":" A mutable memory location shareable immutably across Python objects.","sig":null,"attributes":[{"value":"/ A mutable memory location shareable immutably across Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360765,"byte_end":360837,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360838,"byte_end":360841,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This is a [RefCell] that can also be borrowed immutably by another Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360842,"byte_end":360919,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360920,"byte_end":360931,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360932,"byte_end":360935,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The primary use case is to implement a Python iterator over a Rust","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":360936,"byte_end":361006,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ iterator. Since a Python object cannot hold a lifetime-bound object,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361007,"byte_end":361079,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ `Iter<'a, T>` cannot be a data field of the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361080,"byte_end":361151,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ [PySharedRef::leak_immutable()] provides a way around this issue.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361152,"byte_end":361221,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361222,"byte_end":361225,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361226,"byte_end":361233,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # use cpython::*;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361234,"byte_end":361255,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ # use std::cell::RefCell;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361256,"byte_end":361285,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ # use std::slice::Iter;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361286,"byte_end":361313,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ py_class!(pub class List |py| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361314,"byte_end":361349,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/     @shared data rust_vec: Vec<i32>;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361350,"byte_end":361390,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361391,"byte_end":361394,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     def __iter__(&self) -> PyResult<ListIterator> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361395,"byte_end":361450,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/         let leaked = self.rust_vec(py).leak_immutable();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361451,"byte_end":361511,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/         ListIterator::create_instance(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361512,"byte_end":361554,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/             py,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361555,"byte_end":361574,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/             RefCell::new(unsafe { leaked.map(py, |o| o.iter()) }),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361575,"byte_end":361645,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/         )","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361646,"byte_end":361659,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361660,"byte_end":361669,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361670,"byte_end":361677,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361678,"byte_end":361681,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ py_class!(pub class ListIterator |py| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361682,"byte_end":361725,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     data rust_iter: RefCell<UnsafePyLeaked<Iter<'static, i32>>>;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361726,"byte_end":361794,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361795,"byte_end":361798,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     def __next__(&self) -> PyResult<Option<PyInt>> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361799,"byte_end":361855,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/         let mut leaked = self.rust_iter(py).borrow_mut();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361856,"byte_end":361917,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/         let mut iter = unsafe { leaked.try_borrow_mut(py)? };","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361918,"byte_end":361983,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/         Ok(iter.next().map(|v| v.to_py_object(py)))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":361984,"byte_end":362039,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362040,"byte_end":362049,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362050,"byte_end":362053,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     def __iter__(&self) -> PyResult<Self> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362054,"byte_end":362101,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/         Ok(self.clone_ref(py))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362102,"byte_end":362136,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362137,"byte_end":362146,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362147,"byte_end":362154,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362155,"byte_end":362162,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362163,"byte_end":362166,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The borrow rules are enforced dynamically in a similar manner to the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362167,"byte_end":362239,"line_start":72,"line_end":72,"column_start":1,"column_end":73}},{"value":"/ Python iterator.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362240,"byte_end":362260,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362261,"byte_end":362264,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ `PySharedRefCell` is merely a data struct to be stored in a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362265,"byte_end":362343,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ Any further operation will be performed through [PySharedRef], which is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362344,"byte_end":362419,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ a lifetime-bound reference to the `PySharedRefCell`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362420,"byte_end":362476,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362477,"byte_end":362480,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [RefCell]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362481,"byte_end":362550,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ [PySharedRef]: struct.PySharedRef.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362551,"byte_end":362593,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/ [PySharedRef::leak_immutable()]: struct.PySharedRef.html#method.leak_immutable","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362594,"byte_end":362676,"line_start":81,"line_end":81,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362928,"byte_end":362931,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<PySharedRefCell<T>>::new","value":"pub fn new(T) -> PySharedRefCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PySharedRefCell` containing `value`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PySharedRefCell` containing `value`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362818,"byte_end":362873,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363494,"byte_end":363505,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"PySharedRef","qualname":"::sharedref::PySharedRef","value":"PySharedRef {  }","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"decl_id":null,"docs":" A reference to `PySharedRefCell` owned by a Python object.","sig":null,"attributes":[{"value":"/ A reference to `PySharedRefCell` owned by a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363080,"byte_end":363142,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363143,"byte_end":363146,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This is a lifetime-bound reference to the [PySharedRefCell] data field,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363147,"byte_end":363222,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ and will be created by the automatically generated accessor function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363223,"byte_end":363296,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363297,"byte_end":363300,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363301,"byte_end":363314,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ impl MyType {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363315,"byte_end":363332,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/     fn data_name<'a>(&'a self, py: Python<'a>) -> PySharedRef<'a, T> { ... }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363333,"byte_end":363413,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363414,"byte_end":363419,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363420,"byte_end":363427,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363428,"byte_end":363431,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [PySharedRefCell]: struct.PySharedRefCell.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363432,"byte_end":363482,"line_start":110,"line_end":110,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363963,"byte_end":363966,"line_start":127,"line_end":127,"column_start":19,"column_end":22},"name":"new","qualname":"<PySharedRef>::new","value":"pub unsafe fn new(Python, &'a PyObject, &'a PySharedRefCell<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to the given `PySharedRefCell` owned by the\n given `PyObject`.","sig":null,"attributes":[{"value":"/ Creates a reference to the given `PySharedRefCell` owned by the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363677,"byte_end":363744,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ given `PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363749,"byte_end":363770,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363775,"byte_end":363778,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363783,"byte_end":363795,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363800,"byte_end":363803,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The `data` must be owned by the `owner`. Otherwise, `leak_immutable()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363808,"byte_end":363882,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ would create an invalid reference.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363887,"byte_end":363925,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364332,"byte_end":364338,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"borrow","qualname":"<PySharedRef>::borrow","value":"pub fn borrow(&Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364188,"byte_end":364228,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364233,"byte_end":364236,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364241,"byte_end":364253,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364258,"byte_end":364261,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364266,"byte_end":364320,"line_start":140,"line_end":140,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364557,"byte_end":364567,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"try_borrow","qualname":"<PySharedRef>::try_borrow","value":"pub fn try_borrow(&Self) -> result::Result<Ref, BorrowError>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value, returning an error if the value\n is currently mutably borrowed.\n","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value, returning an error if the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364434,"byte_end":364506,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364511,"byte_end":364545,"line_start":146,"line_end":146,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365047,"byte_end":365057,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<PySharedRef>::borrow_mut","value":"pub fn borrow_mut(&Self) -> RefMut","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364845,"byte_end":364883,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364888,"byte_end":364891,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Any existing leaked references will be invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364896,"byte_end":364951,"line_start":156,"line_end":156,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364956,"byte_end":364959,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364964,"byte_end":364976,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364981,"byte_end":364984,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":364989,"byte_end":365035,"line_start":160,"line_end":160,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365265,"byte_end":365279,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"try_borrow_mut","qualname":"<PySharedRef>::try_borrow_mut","value":"pub fn try_borrow_mut(&Self) -> result::Result<RefMut, BorrowMutError>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value, returning an error if the value\n is currently borrowed.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value, returning an error if the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365152,"byte_end":365222,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ is currently borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365227,"byte_end":365253,"line_start":166,"line_end":166,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":366006,"byte_end":366020,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"leak_immutable","qualname":"<PySharedRef>::leak_immutable","value":"pub fn leak_immutable(&Self) -> UnsafePyLeaked<&'static T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an immutable reference which is not bound to lifetime.","sig":null,"attributes":[{"value":"/ Creates an immutable reference which is not bound to lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365836,"byte_end":365902,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365907,"byte_end":365910,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365915,"byte_end":365927,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365932,"byte_end":365935,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":365940,"byte_end":365994,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":366289,"byte_end":366307,"line_start":192,"line_end":192,"column_start":12,"column_end":30},"name":"try_leak_immutable","qualname":"<PySharedRef>::try_leak_immutable","value":"pub fn try_leak_immutable(&Self)\n-> result::Result<UnsafePyLeaked<&'static T>, BorrowError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an immutable reference which is not bound to lifetime,\n returning an error if the value is currently mutably borrowed.\n","sig":null,"attributes":[{"value":"/ Creates an immutable reference which is not bound to lifetime,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":366140,"byte_end":366206,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ returning an error if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":366211,"byte_end":366277,"line_start":191,"line_end":191,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371230,"byte_end":371244,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnsafePyLeaked","qualname":"::sharedref::UnsafePyLeaked","value":"UnsafePyLeaked {  }","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"decl_id":null,"docs":" An immutable reference to `PySharedRefCell` value, not bound to lifetime.","sig":null,"attributes":[{"value":"/ An immutable reference to `PySharedRefCell` value, not bound to lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370354,"byte_end":370431,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370432,"byte_end":370435,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ The reference will be invalidated once the original value is mutably","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370436,"byte_end":370508,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370509,"byte_end":370522,"line_start":301,"line_end":301,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370523,"byte_end":370526,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370527,"byte_end":370539,"line_start":303,"line_end":303,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370540,"byte_end":370543,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Even though `UnsafePyLeaked` tries to enforce the real lifetime of the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370544,"byte_end":370618,"line_start":305,"line_end":305,"column_start":1,"column_end":75}},{"value":"/ underlying object, the object having the artificial `'static` lifetime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370619,"byte_end":370693,"line_start":306,"line_end":306,"column_start":1,"column_end":75}},{"value":"/ may be exposed to your Rust code. You must be careful to not make a bare","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370694,"byte_end":370770,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ reference outlive the actual object lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370771,"byte_end":370820,"line_start":308,"line_end":308,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370821,"byte_end":370824,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370825,"byte_end":370838,"line_start":310,"line_end":310,"column_start":1,"column_end":14}},{"value":"/ let outer;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370839,"byte_end":370853,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/ unsafe { leaked.map(py, |o| { outer = o }) };  // Bad","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370854,"byte_end":370911,"line_start":312,"line_end":312,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370912,"byte_end":370919,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370920,"byte_end":370923,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370924,"byte_end":370937,"line_start":315,"line_end":315,"column_start":1,"column_end":14}},{"value":"/ let outer;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370938,"byte_end":370952,"line_start":316,"line_end":316,"column_start":1,"column_end":15}},{"value":"/ let mut leaked_iter = leaked.map(py, |o| o.iter());","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370953,"byte_end":371008,"line_start":317,"line_end":317,"column_start":1,"column_end":56}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371009,"byte_end":371014,"line_start":318,"line_end":318,"column_start":1,"column_end":6}},{"value":"/     let mut iter = unsafe { leaked_iter.try_borrow_mut(py) };","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371015,"byte_end":371080,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/     let inner = iter.next();  // Good, in borrow scope","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371081,"byte_end":371139,"line_start":320,"line_end":320,"column_start":1,"column_end":59}},{"value":"/     outer = inner;            // Bad, &'static T may outlive","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371140,"byte_end":371204,"line_start":321,"line_end":321,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371205,"byte_end":371210,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371211,"byte_end":371218,"line_start":323,"line_end":323,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372573,"byte_end":372583,"line_start":356,"line_end":356,"column_start":19,"column_end":29},"name":"try_borrow","qualname":"<UnsafePyLeaked<T>>::try_borrow","value":"pub unsafe fn try_borrow<'a>(&'a Self, Python) -> PyResult<PyLeakedRef>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372280,"byte_end":372320,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372325,"byte_end":372328,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Borrowing fails if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372333,"byte_end":372402,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372407,"byte_end":372410,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372415,"byte_end":372427,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372432,"byte_end":372435,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the innermost object is artificial. Do not obtain and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372440,"byte_end":372513,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ copy it out of the borrow scope.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372518,"byte_end":372554,"line_start":355,"line_end":355,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373264,"byte_end":373278,"line_start":375,"line_end":375,"column_start":19,"column_end":33},"name":"try_borrow_mut","qualname":"<UnsafePyLeaked<T>>::try_borrow_mut","value":"pub unsafe fn try_borrow_mut<'a>(&'a mut Self, Python)\n-> PyResult<PyLeakedRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372822,"byte_end":372860,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372865,"byte_end":372868,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Borrowing fails if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372873,"byte_end":372942,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372947,"byte_end":372950,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Typically `T` is an iterator. If `T` is an immutable reference,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":372955,"byte_end":373022,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ `get_mut()` is useless since the inner value can't be mutated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373027,"byte_end":373093,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373098,"byte_end":373101,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373106,"byte_end":373118,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373123,"byte_end":373126,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the innermost object is artificial. Do not obtain and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373131,"byte_end":373204,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ copy it out of the borrow scope.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373209,"byte_end":373245,"line_start":374,"line_end":374,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374669,"byte_end":374672,"line_start":418,"line_end":418,"column_start":19,"column_end":22},"name":"map","qualname":"<UnsafePyLeaked<T>>::map","value":"pub unsafe fn map<U, impl FnOnce(T) -> U: FnOnce(T) ->\n                  U>(Self, Python, impl FnOnce(T) -> U) -> UnsafePyLeaked<U>","parent":null,"children":[],"decl_id":null,"docs":" Converts the inner value by the given function.","sig":null,"attributes":[{"value":"/ Converts the inner value by the given function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373922,"byte_end":373973,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373978,"byte_end":373981,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Typically `T` is a static reference to a collection, and `U` is an","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373986,"byte_end":374056,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ iterator of that collection.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374061,"byte_end":374093,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374098,"byte_end":374101,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374106,"byte_end":374118,"line_start":404,"line_end":404,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374123,"byte_end":374126,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Panics if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374131,"byte_end":374191,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374196,"byte_end":374199,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This is typically called immediately after the `UnsafePyLeaked` is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374204,"byte_end":374274,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ obtained. At this time, the reference must be valid and no panic","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374279,"byte_end":374347,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ would occur.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374352,"byte_end":374368,"line_start":410,"line_end":410,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374373,"byte_end":374376,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374381,"byte_end":374393,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374398,"byte_end":374401,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the object passed in to the function `f` is artificial.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374406,"byte_end":374481,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ It's typically a static reference, but is valid only while the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374486,"byte_end":374552,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/ corresponding `UnsafePyLeaked` is alive. Do not copy it out of the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374557,"byte_end":374627,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ function call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":374632,"byte_end":374650,"line_start":417,"line_end":417,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375510,"byte_end":375521,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"PyLeakedRef","qualname":"::sharedref::PyLeakedRef","value":"PyLeakedRef {  }","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306}],"decl_id":null,"docs":" An immutably borrowed reference to a leaked value.\n","sig":null,"attributes":[{"value":"/ An immutably borrowed reference to a leaked value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375444,"byte_end":375498,"line_start":438,"line_end":438,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375788,"byte_end":375802,"line_start":453,"line_end":453,"column_start":12,"column_end":26},"name":"PyLeakedRefMut","qualname":"::sharedref::PyLeakedRefMut","value":"PyLeakedRefMut {  }","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"decl_id":null,"docs":" A mutably borrowed reference to a leaked value.\n","sig":null,"attributes":[{"value":"/ A mutably borrowed reference to a leaked value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375725,"byte_end":375776,"line_start":452,"line_end":452,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7053,"byte_end":7060,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"_detail","qualname":"::_detail","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":2329},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2363}],"decl_id":null,"docs":" Private re-exports for macros. Do not use.\n","sig":null,"attributes":[{"value":"/ Private re-exports for macros. Do not use.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":6983,"byte_end":7029,"line_start":220,"line_end":220,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7075,"byte_end":7078,"line_start":223,"line_end":223,"column_start":13,"column_end":16},"name":"ffi","qualname":"::_detail::ffi","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":7130,"byte_end":7134,"line_start":226,"line_end":226,"column_start":13,"column_end":17},"name":"libc","qualname":"::_detail::libc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":2337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":12001,"byte_end":12027,"line_start":368,"line_end":368,"column_start":15,"column_end":41},"name":"py_module_initializer_impl","qualname":"::py_module_initializer_impl","value":"pub unsafe fn py_module_initializer_impl(*mut ffi::PyModuleDef,\n                                         fn(: Python, : &PyModule)\n                                             -> PyResult<()>)\n-> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":11955,"byte_end":11986,"line_start":367,"line_end":367,"column_start":1,"column_end":32}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14839,"byte_end":14855,"line_start":38,"line_end":38,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38080,"byte_end":38088,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38113,"byte_end":38121,"line_start":35,"line_end":35,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38320,"byte_end":38331,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41987,"byte_end":41995,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":58909,"byte_end":58917,"line_start":604,"line_end":604,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59056,"byte_end":59064,"line_start":611,"line_end":611,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59522,"byte_end":59534,"line_start":625,"line_end":625,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69985,"byte_end":69986,"line_start":137,"line_end":137,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":71474,"byte_end":71480,"line_start":199,"line_end":199,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":72081,"byte_end":72087,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79063,"byte_end":79068,"line_start":161,"line_end":161,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88798,"byte_end":88803,"line_start":429,"line_end":429,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88985,"byte_end":88990,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89349,"byte_end":89354,"line_start":448,"line_end":448,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98490,"byte_end":98515,"line_start":175,"line_end":175,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98902,"byte_end":98931,"line_start":193,"line_end":193,"column_start":37,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":100318,"byte_end":100329,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112534,"byte_end":112542,"line_start":340,"line_end":340,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112567,"byte_end":112575,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112940,"byte_end":112948,"line_start":352,"line_end":352,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120020,"byte_end":120026,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140659,"byte_end":140668,"line_start":519,"line_end":519,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146430,"byte_end":146436,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":150205,"byte_end":150212,"line_start":138,"line_end":138,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":150644,"byte_end":150652,"line_start":156,"line_end":156,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161618,"byte_end":161636,"line_start":152,"line_end":152,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164240,"byte_end":164250,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":165018,"byte_end":165028,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167825,"byte_end":167831,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170418,"byte_end":170432,"line_start":112,"line_end":112,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":171874,"byte_end":171877,"line_start":159,"line_end":159,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":176989,"byte_end":176997,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185202,"byte_end":185209,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199316,"byte_end":199324,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199349,"byte_end":199357,"line_start":58,"line_end":58,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199453,"byte_end":199461,"line_start":61,"line_end":61,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199642,"byte_end":199650,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200043,"byte_end":200051,"line_start":92,"line_end":92,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200451,"byte_end":200459,"line_start":110,"line_end":110,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200607,"byte_end":200615,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":206021,"byte_end":206029,"line_start":266,"line_end":266,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":206282,"byte_end":206290,"line_start":275,"line_end":275,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208317,"byte_end":208327,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":215113,"byte_end":215116,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229903,"byte_end":229908,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232583,"byte_end":232590,"line_start":116,"line_end":116,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232934,"byte_end":232942,"line_start":132,"line_end":132,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241092,"byte_end":241104,"line_start":124,"line_end":124,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241254,"byte_end":241266,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241408,"byte_end":241420,"line_start":138,"line_end":138,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241542,"byte_end":241554,"line_start":145,"line_end":145,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245051,"byte_end":245059,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248570,"byte_end":248577,"line_start":324,"line_end":324,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":252495,"byte_end":252498,"line_start":436,"line_end":436,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":252980,"byte_end":252986,"line_start":452,"line_end":452,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":253485,"byte_end":253488,"line_start":468,"line_end":468,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":253981,"byte_end":253987,"line_start":481,"line_end":481,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":254576,"byte_end":254579,"line_start":494,"line_end":494,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259004,"byte_end":259011,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264235,"byte_end":264241,"line_start":216,"line_end":216,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266572,"byte_end":266578,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":268362,"byte_end":268368,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":268490,"byte_end":268496,"line_start":87,"line_end":87,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273367,"byte_end":273392,"line_start":65,"line_end":65,"column_start":10,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274615,"byte_end":274616,"line_start":105,"line_end":105,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274861,"byte_end":274867,"line_start":116,"line_end":116,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275163,"byte_end":275164,"line_start":133,"line_end":133,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275386,"byte_end":275392,"line_start":146,"line_end":146,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":276005,"byte_end":276013,"line_start":169,"line_end":169,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":276628,"byte_end":276634,"line_start":198,"line_end":198,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277053,"byte_end":277059,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281986,"byte_end":282011,"line_start":367,"line_end":367,"column_start":30,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287910,"byte_end":287918,"line_start":104,"line_end":104,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288016,"byte_end":288024,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289288,"byte_end":289300,"line_start":152,"line_end":152,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289514,"byte_end":289526,"line_start":158,"line_end":158,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289542,"byte_end":289554,"line_start":160,"line_end":160,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":297585,"byte_end":297594,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303376,"byte_end":303377,"line_start":43,"line_end":43,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":306428,"byte_end":306452,"line_start":120,"line_end":120,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":308654,"byte_end":308675,"line_start":177,"line_end":177,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":350921,"byte_end":350942,"line_start":543,"line_end":543,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351173,"byte_end":351191,"line_start":559,"line_end":559,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351614,"byte_end":351637,"line_start":579,"line_end":579,"column_start":42,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":352786,"byte_end":352799,"line_start":628,"line_end":628,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":353192,"byte_end":353205,"line_start":652,"line_end":652,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294686,"byte_end":294694,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362793,"byte_end":362808,"line_start":88,"line_end":88,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363652,"byte_end":363663,"line_start":118,"line_end":118,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":368647,"byte_end":368660,"line_start":242,"line_end":242,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370045,"byte_end":370059,"line_start":285,"line_end":285,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370248,"byte_end":370262,"line_start":292,"line_end":292,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371772,"byte_end":371786,"line_start":338,"line_end":338,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373898,"byte_end":373912,"line_start":398,"line_end":398,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375627,"byte_end":375638,"line_start":444,"line_end":444,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375912,"byte_end":375926,"line_start":458,"line_end":458,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":376046,"byte_end":376060,"line_start":466,"line_end":466,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":6752,"byte_end":6760,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":6770,"byte_end":6776,"line_start":205,"line_end":205,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\mod.rs","byte_start":119583,"byte_end":119586,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":892}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\lib.rs","byte_start":6907,"byte_end":6915,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1900}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":291451,"byte_end":291453,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1901}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":291479,"byte_end":291486,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1945}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":291668,"byte_end":291673,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2003}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\argparse.rs","byte_start":14839,"byte_end":14855,"line_start":38,"line_end":38,"column_start":10,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38080,"byte_end":38088,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38113,"byte_end":38121,"line_start":35,"line_end":35,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":38320,"byte_end":38331,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":41987,"byte_end":41995,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":58909,"byte_end":58917,"line_start":604,"line_end":604,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":207},"to":{"krate":0,"index":1815}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59056,"byte_end":59064,"line_start":611,"line_end":611,"column_start":15,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\buffer.rs","byte_start":59522,"byte_end":59534,"line_start":625,"line_end":625,"column_start":15,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":68423,"byte_end":68428,"line_start":102,"line_end":102,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":69985,"byte_end":69986,"line_start":137,"line_end":137,"column_start":37,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":324},"to":{"krate":0,"index":319}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":71474,"byte_end":71480,"line_start":199,"line_end":199,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\conversion.rs","byte_start":72081,"byte_end":72087,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":79063,"byte_end":79068,"line_start":161,"line_end":161,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88798,"byte_end":88803,"line_start":429,"line_end":429,"column_start":17,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":1815}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":88985,"byte_end":88990,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\err.rs","byte_start":89349,"byte_end":89354,"line_start":448,"line_end":448,"column_start":64,"column_end":69},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98490,"byte_end":98515,"line_start":175,"line_end":175,"column_start":34,"column_end":59},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":518},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":98902,"byte_end":98931,"line_start":193,"line_end":193,"column_start":37,"column_end":66},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\function.rs","byte_start":100318,"byte_end":100329,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":101992,"byte_end":102004,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1785},"to":{"krate":0,"index":600}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112534,"byte_end":112542,"line_start":340,"line_end":340,"column_start":25,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":600}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112567,"byte_end":112575,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objectprotocol.rs","byte_start":112940,"byte_end":112948,"line_start":352,"line_end":352,"column_start":23,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\boolobject.rs","byte_start":120020,"byte_end":120026,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\capsule.rs","byte_start":140659,"byte_end":140668,"line_start":519,"line_end":519,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":146430,"byte_end":146436,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":150205,"byte_end":150212,"line_start":138,"line_end":138,"column_start":43,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":1,"index":1092},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\dict.rs","byte_start":150644,"byte_end":150652,"line_start":156,"line_end":156,"column_start":40,"column_end":48},"kind":{"Impl":{"id":41}},"from":{"krate":5,"index":1219},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\exc.rs","byte_start":161618,"byte_end":161636,"line_start":152,"line_end":152,"column_start":6,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":164240,"byte_end":164250,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\iterator.rs","byte_start":165018,"byte_end":165028,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":972},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":167825,"byte_end":167831,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":170418,"byte_end":170432,"line_start":112,"line_end":112,"column_start":27,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\list.rs","byte_start":171874,"byte_end":171877,"line_start":159,"line_end":159,"column_start":24,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\module.rs","byte_start":176989,"byte_end":176997,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\num.rs","byte_start":185202,"byte_end":185209,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199316,"byte_end":199324,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199349,"byte_end":199357,"line_start":58,"line_end":58,"column_start":22,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199453,"byte_end":199461,"line_start":61,"line_end":61,"column_start":15,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":199642,"byte_end":199650,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200043,"byte_end":200051,"line_start":92,"line_end":92,"column_start":42,"column_end":50},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200451,"byte_end":200459,"line_start":110,"line_end":110,"column_start":37,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":1805}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":200607,"byte_end":200615,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":206021,"byte_end":206029,"line_start":266,"line_end":266,"column_start":20,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2487}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\object.rs","byte_start":206282,"byte_end":206290,"line_start":275,"line_end":275,"column_start":13,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2492}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":208317,"byte_end":208327,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\sequence.rs","byte_start":215113,"byte_end":215116,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":229903,"byte_end":229908,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232583,"byte_end":232590,"line_start":116,"line_end":116,"column_start":40,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":1802},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\set.rs","byte_start":232934,"byte_end":232942,"line_start":132,"line_end":132,"column_start":37,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":5,"index":7143},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241092,"byte_end":241104,"line_start":124,"line_end":124,"column_start":28,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241254,"byte_end":241266,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241408,"byte_end":241420,"line_start":138,"line_end":138,"column_start":30,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":241542,"byte_end":241554,"line_start":145,"line_end":145,"column_start":10,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":245051,"byte_end":245059,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":248570,"byte_end":248577,"line_start":324,"line_end":324,"column_start":6,"column_end":13},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":252495,"byte_end":252498,"line_start":436,"line_end":436,"column_start":25,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":252980,"byte_end":252986,"line_start":452,"line_end":452,"column_start":21,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":253485,"byte_end":253488,"line_start":468,"line_end":468,"column_start":31,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":253981,"byte_end":253987,"line_start":481,"line_end":481,"column_start":31,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\string.rs","byte_start":254576,"byte_end":254579,"line_start":494,"line_end":494,"column_start":31,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":259004,"byte_end":259011,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\tuple.rs","byte_start":264235,"byte_end":264241,"line_start":216,"line_end":216,"column_start":21,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4558},"to":{"krate":0,"index":309}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":266572,"byte_end":266578,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":268362,"byte_end":268368,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":2487}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\objects\\typeobject.rs","byte_start":268490,"byte_end":268496,"line_start":87,"line_end":87,"column_start":13,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":2492}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272540,"byte_end":272550,"line_start":42,"line_end":42,"column_start":44,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272553,"byte_end":272557,"line_start":42,"line_end":42,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":272560,"byte_end":272565,"line_start":42,"line_end":42,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1785}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273367,"byte_end":273392,"line_start":65,"line_end":65,"column_start":10,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":273842,"byte_end":273854,"line_start":81,"line_end":81,"column_start":44,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1785},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274378,"byte_end":274409,"line_start":96,"line_end":96,"column_start":39,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":1799},"to":{"krate":0,"index":1805}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274539,"byte_end":274544,"line_start":101,"line_end":101,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274615,"byte_end":274616,"line_start":105,"line_end":105,"column_start":21,"column_end":22},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1810},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":274861,"byte_end":274867,"line_start":116,"line_end":116,"column_start":21,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275095,"byte_end":275100,"line_start":129,"line_end":129,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1815}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275163,"byte_end":275164,"line_start":133,"line_end":133,"column_start":20,"column_end":21},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1818},"to":{"krate":0,"index":1815}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":275386,"byte_end":275392,"line_start":146,"line_end":146,"column_start":20,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1815}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":276005,"byte_end":276013,"line_start":169,"line_end":169,"column_start":26,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":1823}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":276628,"byte_end":276634,"line_start":198,"line_end":198,"column_start":29,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1823}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":277053,"byte_end":277059,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\python.rs","byte_start":281986,"byte_end":282011,"line_start":367,"line_end":367,"column_start":30,"column_end":55},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1790},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":287910,"byte_end":287918,"line_start":104,"line_end":104,"column_start":15,"column_end":23},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":288016,"byte_end":288024,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289288,"byte_end":289300,"line_start":152,"line_end":152,"column_start":31,"column_end":43},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1887},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289514,"byte_end":289526,"line_start":158,"line_end":158,"column_start":31,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1887},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\pythonrun.rs","byte_start":289542,"byte_end":289554,"line_start":160,"line_end":160,"column_start":9,"column_end":21},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\gc.rs","byte_start":297585,"byte_end":297594,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":303376,"byte_end":303377,"line_start":43,"line_end":43,"column_start":30,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1977},"to":{"krate":0,"index":1972}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":306428,"byte_end":306452,"line_start":120,"line_end":120,"column_start":27,"column_end":51},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":1972}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\members.rs","byte_start":308654,"byte_end":308675,"line_start":177,"line_end":177,"column_start":27,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1992},"to":{"krate":0,"index":1972}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":350921,"byte_end":350942,"line_start":543,"line_end":543,"column_start":32,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2081},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351173,"byte_end":351191,"line_start":559,"line_end":559,"column_start":35,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2087},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":351614,"byte_end":351637,"line_start":579,"line_end":579,"column_start":42,"column_end":65},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2093},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":352786,"byte_end":352799,"line_start":628,"line_end":628,"column_start":34,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2104},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\slots.rs","byte_start":353192,"byte_end":353205,"line_start":652,"line_end":652,"column_start":34,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2111},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":292381,"byte_end":292407,"line_start":59,"line_end":59,"column_start":49,"column_end":75},"kind":"SuperTrait","from":{"krate":0,"index":1805},"to":{"krate":0,"index":2165}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294006,"byte_end":294018,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1785},"to":{"krate":0,"index":2182}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\py_class\\mod.rs","byte_start":294686,"byte_end":294694,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":2182}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":362793,"byte_end":362808,"line_start":88,"line_end":88,"column_start":9,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":363652,"byte_end":363663,"line_start":118,"line_end":118,"column_start":21,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":368647,"byte_end":368660,"line_start":242,"line_end":242,"column_start":6,"column_end":19},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370045,"byte_end":370059,"line_start":285,"line_end":285,"column_start":10,"column_end":24},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":370248,"byte_end":370262,"line_start":292,"line_end":292,"column_start":19,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2274},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":371772,"byte_end":371786,"line_start":338,"line_end":338,"column_start":17,"column_end":31},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":373898,"byte_end":373912,"line_start":398,"line_end":398,"column_start":9,"column_end":23},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375627,"byte_end":375638,"line_start":444,"line_end":444,"column_start":31,"column_end":42},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":375912,"byte_end":375926,"line_start":458,"line_end":458,"column_start":31,"column_end":45},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.5.2\\src\\sharedref.rs","byte_start":376046,"byte_end":376060,"line_start":466,"line_end":466,"column_start":34,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3067}}]}