{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0","program":"C:\\Users\\treva\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cpython","--edition=2018","C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"extension-module\"","--cfg","feature=\"python3-sys\"","-C","metadata=b572455817f8e956","-C","extra-filename=-b572455817f8e956","--out-dir","c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps","--extern","libc=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\liblibc-f0de403a9b52c83a.rmeta","--extern","num_traits=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libnum_traits-9e8067a262769e4e.rmeta","--extern","paste=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\paste-3251b872a954dc37.dll","--extern","python3_sys=c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libpython3_sys-df24dea63fa9f336.rmeta","--cap-lints","allow","--cfg","py_sys_config=\"Py_USING_UNICODE\"","--cfg","py_sys_config=\"WITH_THREAD\"","--cfg","py_sys_config=\"Py_UNICODE_SIZE_2\"","-L","native=C:\\Users\\treva\\AppData\\Local\\Programs\\Python\\Python39\\libs","--error-format=json","--sysroot","C:\\Users\\treva\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\treva\\Desktop\\SFU classes\\CMPT383\\FinalProject\\rust-funcs\\target\\rls\\debug\\deps\\libcpython-b572455817f8e956.rmeta"},"prelude":{"crate_id":{"name":"cpython","disambiguator":[15336601931402085692,13811877534318194239]},"crate_root":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src","external_crates":[{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":14,"id":{"name":"python3_sys","disambiguator":[15461310984244742679,4752794192989261156]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","num":15,"id":{"name":"libc","disambiguator":[8115237375878882692,10461185075909509090]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","num":16,"id":{"name":"num_traits","disambiguator":[12637468738524569527,2873122016162683679]}},{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","num":17,"id":{"name":"paste","disambiguator":[14111787359973180184,773113325277511429]}}],"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1108,"byte_end":13183,"line_start":19,"line_end":416,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":64},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3820,"byte_end":3830,"line_start":99,"line_end":99,"column_start":14,"column_end":24},"alias_span":null,"name":"Py_ssize_t","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3861,"byte_end":3873,"line_start":101,"line_end":101,"column_start":29,"column_end":41},"alias_span":null,"name":"FromPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3875,"byte_end":3890,"line_start":101,"line_end":101,"column_start":43,"column_end":58},"alias_span":null,"name":"RefFromPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3892,"byte_end":3902,"line_start":101,"line_end":101,"column_start":60,"column_end":70},"alias_span":null,"name":"ToPyObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3926,"byte_end":3931,"line_start":102,"line_end":102,"column_start":22,"column_end":27},"alias_span":null,"name":"PyErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3933,"byte_end":3941,"line_start":102,"line_end":102,"column_start":29,"column_end":37},"alias_span":null,"name":"PyResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3975,"byte_end":3989,"line_start":103,"line_end":103,"column_start":32,"column_end":46},"alias_span":null,"name":"ObjectProtocol","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4015,"byte_end":4016,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"PyDict, PyInt, exc, PyModule, PyObject","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4043,"byte_end":4052,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"alias_span":null,"name":"CompareOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4083,"byte_end":4090,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"alias_span":null,"name":"PyClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4092,"byte_end":4098,"line_start":107,"line_end":107,"column_start":14,"column_end":20},"alias_span":null,"name":"PyDrop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4100,"byte_end":4106,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"alias_span":null,"name":"Python","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4108,"byte_end":4120,"line_start":107,"line_end":107,"column_start":30,"column_end":42},"alias_span":null,"name":"PythonObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4122,"byte_end":4147,"line_start":107,"line_end":107,"column_start":44,"column_end":69},"alias_span":null,"name":"PythonObjectDowncastError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4153,"byte_end":4184,"line_start":108,"line_end":108,"column_start":5,"column_end":36},"alias_span":null,"name":"PythonObjectWithCheckedDowncast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4186,"byte_end":4212,"line_start":108,"line_end":108,"column_start":38,"column_end":64},"alias_span":null,"name":"PythonObjectWithTypeObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4244,"byte_end":4271,"line_start":110,"line_end":110,"column_start":28,"column_end":55},"alias_span":null,"name":"prepare_freethreaded_python","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4273,"byte_end":4281,"line_start":110,"line_end":110,"column_start":57,"column_end":65},"alias_span":null,"name":"GILGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4283,"byte_end":4295,"line_start":110,"line_end":110,"column_start":67,"column_end":79},"alias_span":null,"name":"GILProtected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4330,"byte_end":4341,"line_start":112,"line_end":112,"column_start":5,"column_end":16},"alias_span":null,"name":"PyLeakedRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4343,"byte_end":4357,"line_start":112,"line_end":112,"column_start":18,"column_end":32},"alias_span":null,"name":"PyLeakedRefMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4359,"byte_end":4370,"line_start":112,"line_end":112,"column_start":34,"column_end":45},"alias_span":null,"name":"PySharedRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4372,"byte_end":4387,"line_start":112,"line_end":112,"column_start":47,"column_end":62},"alias_span":null,"name":"PySharedRefCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4389,"byte_end":4403,"line_start":112,"line_end":112,"column_start":64,"column_end":78},"alias_span":null,"name":"UnsafePyLeaked","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7163,"byte_end":7164,"line_start":228,"line_end":228,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"PyObject","parent":{"krate":0,"index":2333}},{"kind":"Use","ref_id":{"krate":15,"index":69},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7214,"byte_end":7220,"line_start":231,"line_end":231,"column_start":24,"column_end":30},"alias_span":null,"name":"c_char","value":"","parent":{"krate":0,"index":2335}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7222,"byte_end":7227,"line_start":231,"line_end":231,"column_start":32,"column_end":37},"alias_span":null,"name":"c_int","value":"","parent":{"krate":0,"index":2335}},{"kind":"Use","ref_id":{"krate":2,"index":4469},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7229,"byte_end":7235,"line_start":231,"line_end":231,"column_start":39,"column_end":45},"alias_span":null,"name":"c_void","value":"","parent":{"krate":0,"index":2335}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7269,"byte_end":7292,"line_start":233,"line_end":233,"column_start":26,"column_end":49},"alias_span":null,"name":"from_owned_ptr_or_panic","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7294,"byte_end":7315,"line_start":233,"line_end":233,"column_start":51,"column_end":72},"alias_span":null,"name":"result_from_owned_ptr","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7357,"byte_end":7372,"line_start":235,"line_end":235,"column_start":9,"column_end":24},"alias_span":null,"name":"handle_callback","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7374,"byte_end":7384,"line_start":235,"line_end":235,"column_start":26,"column_end":36},"alias_span":null,"name":"py_fn_impl","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7386,"byte_end":7397,"line_start":235,"line_end":235,"column_start":38,"column_end":49},"alias_span":null,"name":"AbortOnDrop","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7386,"byte_end":7397,"line_start":235,"line_end":235,"column_start":38,"column_end":49},"alias_span":null,"name":"AbortOnDrop","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7399,"byte_end":7424,"line_start":235,"line_end":235,"column_start":51,"column_end":76},"alias_span":null,"name":"PyObjectCallbackConverter","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7399,"byte_end":7424,"line_start":235,"line_end":235,"column_start":51,"column_end":76},"alias_span":null,"name":"PyObjectCallbackConverter","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7434,"byte_end":7463,"line_start":236,"line_end":236,"column_start":9,"column_end":38},"alias_span":null,"name":"PythonObjectCallbackConverter","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7434,"byte_end":7463,"line_start":236,"line_end":236,"column_start":9,"column_end":38},"alias_span":null,"name":"PythonObjectCallbackConverter","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":17,"index":0},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7484,"byte_end":7489,"line_start":238,"line_end":238,"column_start":13,"column_end":18},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":2332}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1108,"byte_end":13183,"line_start":19,"line_end":416,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":95},{"krate":0,"index":167},{"krate":0,"index":280},{"krate":0,"index":344},{"krate":0,"index":434},{"krate":0,"index":542},{"krate":0,"index":641},{"krate":0,"index":1757},{"krate":0,"index":1872},{"krate":0,"index":1913},{"krate":0,"index":2198},{"krate":0,"index":2332},{"krate":0,"index":2373}],"decl_id":null,"docs":" Rust bindings to the Python interpreter.","sig":null,"attributes":[{"value":"allow(unused_imports, clippy :: missing_safety_doc, clippy :: manual_strip,\n        clippy :: match_like_matches_macro)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1223,"byte_end":1416,"line_start":22,"line_end":27,"column_start":1,"column_end":3}},{"value":"/ Rust bindings to the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1418,"byte_end":1462,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1463,"byte_end":1466,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Ownership and Lifetimes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1467,"byte_end":1496,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/ In Python, all objects are implicitly reference counted.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1497,"byte_end":1557,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/ In rust, we will use the `PyObject` type to represent a reference to a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1558,"byte_end":1647,"line_start":33,"line_end":33,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1648,"byte_end":1651,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The method `clone_ref()` (from trait `PyClone`) can be used to create additional","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1652,"byte_end":1736,"line_start":35,"line_end":35,"column_start":1,"column_end":85}},{"value":"/ references to the same Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1737,"byte_end":1778,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1779,"byte_end":1782,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Because all Python objects potentially have multiple owners, the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1783,"byte_end":1851,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/ concept of Rust mutability does not apply to Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1852,"byte_end":1916,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ As a result, this API will allow mutating Python objects even if they are not stored","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":1917,"byte_end":2005,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/ in a mutable Rust variable.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2006,"byte_end":2037,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2038,"byte_end":2041,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The Python interpreter uses a global interpreter lock (GIL)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2042,"byte_end":2105,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/ to ensure thread-safety.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2106,"byte_end":2134,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ This API uses a zero-sized `struct Python<'p>` as a token to indicate","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2135,"byte_end":2208,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ that a function can assume that the GIL is held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2209,"byte_end":2261,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2262,"byte_end":2265,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ You obtain a `Python` instance by acquiring the GIL,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2266,"byte_end":2322,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/ and have to pass it into all operations that call into the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2323,"byte_end":2401,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2402,"byte_end":2405,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Python 2.7","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2406,"byte_end":2422,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/ The library will use the python3 bindings by default. To use the python2 bindings","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2423,"byte_end":2508,"line_start":52,"line_end":52,"column_start":1,"column_end":86}},{"value":"/ you must specific the `python27` feature explicitly in your `Cargo.toml`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2509,"byte_end":2586,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2587,"byte_end":2590,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2591,"byte_end":2604,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ [dependencies.cpython]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2605,"byte_end":2631,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/ version = \"*\"","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2632,"byte_end":2649,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2650,"byte_end":2678,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/ features = [\"python27-sys\"]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2679,"byte_end":2710,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2711,"byte_end":2718,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2719,"byte_end":2722,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Error Handling","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2723,"byte_end":2743,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ The vast majority of operations in this library will return `PyResult<...>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2744,"byte_end":2824,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ This is an alias for the type `Result<..., PyErr>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2825,"byte_end":2880,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2881,"byte_end":2884,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ A `PyErr` represents a Python exception. Errors within the rust-cpython library are","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2885,"byte_end":2972,"line_start":66,"line_end":66,"column_start":1,"column_end":88}},{"value":"/ also exposed as Python exceptions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":2973,"byte_end":3011,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3012,"byte_end":3015,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3016,"byte_end":3029,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3030,"byte_end":3037,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use cpython::{Python, PyDict, PyResult};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3038,"byte_end":3082,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3083,"byte_end":3086,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3087,"byte_end":3102,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3103,"byte_end":3143,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/     hello(gil.python()).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3144,"byte_end":3181,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3182,"byte_end":3187,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3188,"byte_end":3191,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn hello(py: Python) -> PyResult<()> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3192,"byte_end":3234,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/     let sys = py.import(\"sys\")?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3235,"byte_end":3271,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/     let version: String = sys.get(py, \"version\")?.extract(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3272,"byte_end":3339,"line_start":80,"line_end":80,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3340,"byte_end":3343,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let locals = PyDict::new(py);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3344,"byte_end":3381,"line_start":82,"line_end":82,"column_start":1,"column_end":38}},{"value":"/     locals.set_item(py, \"os\", py.import(\"os\")?)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3382,"byte_end":3435,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     let user: String = py.eval(\"os.getenv('USER') or os.getenv('USERNAME')\", None, Some(&locals))?.extract(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3436,"byte_end":3552,"line_start":84,"line_end":84,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3553,"byte_end":3556,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     println!(\"Hello {}, I'm Python {}\", user, version);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3557,"byte_end":3616,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3617,"byte_end":3631,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3632,"byte_end":3637,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":3638,"byte_end":3645,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4581,"byte_end":4590,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"name":"Py_hash_t","qualname":"::Py_hash_t","value":"ffi::Py_hash_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4509,"byte_end":4540,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":4541,"byte_end":4571,"line_start":120,"line_end":120,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"argparse","qualname":"::argparse","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":162}],"decl_id":null,"docs":" This module contains logic for parsing a python argument list.\n See also the macros `py_argparse!`, `py_fn!` and `py_method!`.\n","sig":null,"attributes":[{"value":"/ This module contains logic for parsing a python argument list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14293,"byte_end":14359,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ See also the macros `py_argparse!`, `py_fn!` and `py_method!`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14360,"byte_end":14426,"line_start":20,"line_end":20,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14730,"byte_end":14746,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"ParamDescription","qualname":"::argparse::ParamDescription","value":"ParamDescription { name, is_optional }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" Description of a python parameter; used for `parse_args()`.\n","sig":null,"attributes":[{"value":"/ Description of a python parameter; used for `parse_args()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14655,"byte_end":14718,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14796,"byte_end":14800,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"name","qualname":"::argparse::ParamDescription::name","value":"&'a str","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" The name of the parameter.\n","sig":null,"attributes":[{"value":"/ The name of the parameter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14757,"byte_end":14787,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14862,"byte_end":14873,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"name":"is_optional","qualname":"::argparse::ParamDescription::is_optional","value":"bool","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Whether the parameter is optional.\n","sig":null,"attributes":[{"value":"/ Whether the parameter is optional.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14815,"byte_end":14853,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14969,"byte_end":14973,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"name","qualname":"<ParamDescription>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name, with leading `r#` stripped.\n","sig":null,"attributes":[{"value":"/ Name, with leading `r#` stripped.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14920,"byte_end":14957,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15376,"byte_end":15386,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"parse_args","qualname":"::argparse::parse_args","value":"pub fn parse_args(Python, Option<&str>, &[ParamDescription], &PyTuple,\n                  Option<&PyDict>, &mut [Option<PyObject>]) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Parse argument list","sig":null,"attributes":[{"value":"/ Parse argument list","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15037,"byte_end":15060,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15061,"byte_end":15064,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/  * fname:  Name of the current function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15065,"byte_end":15108,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/  * params: Declared parameters of the function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15109,"byte_end":15159,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"/  * args:   Positional arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15160,"byte_end":15195,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/  * kwargs: Keyword arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15196,"byte_end":15228,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/  * output: Output array that receives the arguments.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15229,"byte_end":15285,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/           Must have same length as `params` and must be initialized to `None`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":15286,"byte_end":15368,"line_start":52,"line_end":52,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":29023,"byte_end":29033,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"name":"get_kwargs","qualname":"::argparse::get_kwargs","value":"pub unsafe fn get_kwargs(Python, *mut ffi::PyObject) -> Option<PyDict>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":28984,"byte_end":28993,"line_start":399,"line_end":399,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":33511,"byte_end":33536,"line_start":508,"line_end":508,"column_start":8,"column_end":33},"name":"with_extracted_or_default","qualname":"::argparse::with_extracted_or_default","value":"pub fn with_extracted_or_default<P: ?Sized, R,\n                                 F>(Python, Option<&PyObject>, F, &'static P)\n-> PyResult<R> where F: FnOnce(&P) -> PyResult<R>, P: RefFromPyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":33966,"byte_end":34000,"line_start":528,"line_end":528,"column_start":8,"column_end":42},"name":"with_extracted_optional_or_default","qualname":"::argparse::with_extracted_optional_or_default","value":"pub fn with_extracted_optional_or_default<P: ?Sized, R,\n                                          F>(Python, Option<&PyObject>, F,\n                                             Option<&'static P>)\n-> PyResult<R> where F: FnOnce(Option<&P>) -> PyResult<R>, P: RefFromPyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":2375},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":37754,"byte_end":37762,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"PyBuffer","qualname":"::buffer::PyBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Allows access to the underlying buffer used by a python object such as `bytes`, `bytearray` or `array.array`.\n","sig":null,"attributes":[{"value":"/ Allows access to the underlying buffer used by a python object such as `bytes`, `bytearray` or `array.array`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":37629,"byte_end":37742,"line_start":28,"line_end":28,"column_start":1,"column_end":114}}]},{"kind":"StructVariant","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38160,"byte_end":38173,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"SignedInteger","qualname":"::buffer::ElementType::SignedInteger","value":"ElementType::SignedInteger { bytes }","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38196,"byte_end":38211,"line_start":39,"line_end":39,"column_start":5,"column_end":20},"name":"UnsignedInteger","qualname":"::buffer::ElementType::UnsignedInteger","value":"ElementType::UnsignedInteger { bytes }","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38234,"byte_end":38238,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Bool","qualname":"::buffer::ElementType::Bool","value":"ElementType::Bool","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2382},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38244,"byte_end":38249,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Float","qualname":"::buffer::ElementType::Float","value":"ElementType::Float { bytes }","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38272,"byte_end":38279,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::buffer::ElementType::Unknown","value":"ElementType::Unknown","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2375},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38142,"byte_end":38153,"line_start":37,"line_end":37,"column_start":10,"column_end":21},"name":"ElementType","qualname":"::buffer::ElementType","value":"pub enum ElementType {\n    SignedInteger {\n        bytes: usize,\n    },\n    UnsignedInteger {\n        bytes: usize,\n    },\n    Bool,\n    Float {\n        bytes: usize,\n    },\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2384}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38314,"byte_end":38325,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"from_format","qualname":"<ElementType>::from_format","value":"pub fn from_format(&CStr) -> ElementType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41541,"byte_end":41548,"line_start":151,"line_end":151,"column_start":18,"column_end":25},"name":"Element","qualname":"::buffer::Element","value":"Element","parent":null,"children":[{"krate":0,"index":217}],"decl_id":null,"docs":" Trait implemented for possible element types of `PyBuffer`.\n","sig":null,"attributes":[{"value":"/ Trait implemented for possible element types of `PyBuffer`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41460,"byte_end":41523,"line_start":150,"line_end":150,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41719,"byte_end":41739,"line_start":154,"line_end":154,"column_start":8,"column_end":28},"name":"is_compatible_format","qualname":"::buffer::Element::is_compatible_format","value":"pub fn is_compatible_format(&CStr) -> bool","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Gets whether the element specified in the format string is potentially compatible.\n Alignment and size are checked separately from this function.\n","sig":null,"attributes":[{"value":"/ Gets whether the element specified in the format string is potentially compatible.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41555,"byte_end":41641,"line_start":152,"line_end":152,"column_start":5,"column_end":91}},{"value":"/ Alignment and size are checked separately from this function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41646,"byte_end":41711,"line_start":153,"line_end":153,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42046,"byte_end":42049,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"get","qualname":"<PyBuffer>::get","value":"pub fn get(Python, &PyObject) -> PyResult<PyBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying buffer from the specified python object.\n","sig":null,"attributes":[{"value":"/ Get the underlying buffer from the specified python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41971,"byte_end":42034,"line_start":164,"line_end":164,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42654,"byte_end":42661,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"buf_ptr","qualname":"<PyBuffer>::buf_ptr","value":"pub fn buf_ptr(&Self) -> *mut libc::c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets the pointer to the start of the buffer memory.","sig":null,"attributes":[{"value":"/ Gets the pointer to the start of the buffer memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42425,"byte_end":42480,"line_start":177,"line_end":177,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42485,"byte_end":42488,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Warning: the buffer memory might be mutated by other Python functions,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42493,"byte_end":42567,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ and thus may only be accessed while the GIL is held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42572,"byte_end":42628,"line_start":180,"line_end":180,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42633,"byte_end":42642,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42902,"byte_end":42909,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_ptr","qualname":"<PyBuffer>::get_ptr","value":"pub fn get_ptr(&Self, &[usize]) -> *mut libc::c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets a pointer to the specified item.","sig":null,"attributes":[{"value":"/ Gets a pointer to the specified item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42722,"byte_end":42763,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42768,"byte_end":42771,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ If `indices.len() < self.dimensions()`, returns the start address of the sub-array at the specified dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":42776,"byte_end":42890,"line_start":188,"line_end":188,"column_start":5,"column_end":119}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43417,"byte_end":43425,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"readonly","qualname":"<PyBuffer>::readonly","value":"pub fn readonly(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the underlying buffer is read-only.\n","sig":null,"attributes":[{"value":"/ Gets whether the underlying buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43339,"byte_end":43391,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43396,"byte_end":43405,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43655,"byte_end":43664,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"item_size","qualname":"<PyBuffer>::item_size","value":"pub fn item_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of a single element, in bytes.\n Important exception: when requesting an unformatted buffer, item_size still has the value\n","sig":null,"attributes":[{"value":"/ Gets the size of a single element, in bytes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43483,"byte_end":43531,"line_start":208,"line_end":208,"column_start":5,"column_end":53}},{"value":"/ Important exception: when requesting an unformatted buffer, item_size still has the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43536,"byte_end":43629,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43634,"byte_end":43643,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43788,"byte_end":43798,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"item_count","qualname":"<PyBuffer>::item_count","value":"pub fn item_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the total number of items.\n","sig":null,"attributes":[{"value":"/ Gets the total number of items.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43727,"byte_end":43762,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43767,"byte_end":43776,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44168,"byte_end":44177,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"len_bytes","qualname":"<PyBuffer>::len_bytes","value":"pub fn len_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" `item_size() * item_count()`.\n For contiguous arrays, this is the length of the underlying memory block.\n For non-contiguous arrays, it is the length that the logical structure would have if it were copied to a contiguous representation.\n","sig":null,"attributes":[{"value":"/ `item_size() * item_count()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43887,"byte_end":43920,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ For contiguous arrays, this is the length of the underlying memory block.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":43925,"byte_end":44002,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ For non-contiguous arrays, it is the length that the logical structure would have if it were copied to a contiguous representation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44007,"byte_end":44142,"line_start":223,"line_end":223,"column_start":5,"column_end":140}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44147,"byte_end":44156,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44355,"byte_end":44365,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<PyBuffer>::dimensions","value":"pub fn dimensions(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of dimensions.","sig":null,"attributes":[{"value":"/ Gets the number of dimensions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44235,"byte_end":44269,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44274,"byte_end":44277,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ May be 0 to indicate a single scalar value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44282,"byte_end":44329,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44334,"byte_end":44343,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44939,"byte_end":44944,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"shape","qualname":"<PyBuffer>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array of length `dimensions`. `shape()[i]` is the length of the array in dimension number `i`.","sig":null,"attributes":[{"value":"/ Returns an array of length `dimensions`. `shape()[i]` is the length of the array in dimension number `i`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44424,"byte_end":44533,"line_start":237,"line_end":237,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44538,"byte_end":44541,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ May return None for single-dimensional arrays or scalar values (`dimensions() <= 1`);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44546,"byte_end":44635,"line_start":239,"line_end":239,"column_start":5,"column_end":94}},{"value":"/ You can call `item_count()` to get the length of the single dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44640,"byte_end":44714,"line_start":240,"line_end":240,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44719,"byte_end":44722,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Despite Python using an array of signed integers, the values are guaranteed to be non-negative.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44727,"byte_end":44826,"line_start":242,"line_end":242,"column_start":5,"column_end":104}},{"value":"/ However, dimensions of length 0 are possible and might need special attention.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44831,"byte_end":44913,"line_start":243,"line_end":243,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":44918,"byte_end":44927,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45395,"byte_end":45402,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"strides","qualname":"<PyBuffer>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array that holds, for each dimension, the number of bytes to skip to get to the next element in the dimension.","sig":null,"attributes":[{"value":"/ Returns an array that holds, for each dimension, the number of bytes to skip to get to the next element in the dimension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45070,"byte_end":45195,"line_start":249,"line_end":249,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45200,"byte_end":45203,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Stride values can be any integer. For regular arrays, strides are usually positive,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45208,"byte_end":45295,"line_start":251,"line_end":251,"column_start":5,"column_end":92}},{"value":"/ but a consumer MUST be able to handle the case `strides[n] <= 0`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45300,"byte_end":45369,"line_start":252,"line_end":252,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45374,"byte_end":45383,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46010,"byte_end":46020,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"suboffsets","qualname":"<PyBuffer>::suboffsets","value":"pub fn suboffsets(&Self) -> Option<&[isize]>","parent":null,"children":[],"decl_id":null,"docs":" An array of length ndim.\n If suboffsets[n] >= 0, the values stored along the nth dimension are pointers and the suboffset value dictates how many bytes to add to each pointer after de-referencing.\n A suboffset value that is negative indicates that no de-referencing should occur (striding in a contiguous memory block).","sig":null,"attributes":[{"value":"/ An array of length ndim.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45514,"byte_end":45542,"line_start":258,"line_end":258,"column_start":5,"column_end":33}},{"value":"/ If suboffsets[n] >= 0, the values stored along the nth dimension are pointers and the suboffset value dictates how many bytes to add to each pointer after de-referencing.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45547,"byte_end":45721,"line_start":259,"line_end":259,"column_start":5,"column_end":179}},{"value":"/ A suboffset value that is negative indicates that no de-referencing should occur (striding in a contiguous memory block).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45726,"byte_end":45851,"line_start":260,"line_end":260,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45856,"byte_end":45859,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If all suboffsets are negative (i.e. no de-referencing is needed), then this field must be NULL (the default value).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45864,"byte_end":45984,"line_start":262,"line_end":262,"column_start":5,"column_end":125}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":45989,"byte_end":45998,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46458,"byte_end":46464,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"format","qualname":"<PyBuffer>::format","value":"pub fn format(&Self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":" A NUL terminated string in struct module style syntax describing the contents of a single item.\n","sig":null,"attributes":[{"value":"/ A NUL terminated string in struct module style syntax describing the contents of a single item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46333,"byte_end":46432,"line_start":277,"line_end":277,"column_start":5,"column_end":104}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46437,"byte_end":46446,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46794,"byte_end":46809,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"is_c_contiguous","qualname":"<PyBuffer>::is_c_contiguous","value":"pub fn is_c_contiguous(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the buffer is contiguous in C-style order (last index varies fastest when visiting items in order of memory address).\n","sig":null,"attributes":[{"value":"/ Gets whether the buffer is contiguous in C-style order (last index varies fastest when visiting items in order of memory address).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46634,"byte_end":46768,"line_start":287,"line_end":287,"column_start":5,"column_end":139}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":46773,"byte_end":46782,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47279,"byte_end":47300,"line_start":301,"line_end":301,"column_start":12,"column_end":33},"name":"is_fortran_contiguous","qualname":"<PyBuffer>::is_fortran_contiguous","value":"pub fn is_fortran_contiguous(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the buffer is contiguous in Fortran-style order (first index varies fastest when visiting items in order of memory address).\n","sig":null,"attributes":[{"value":"/ Gets whether the buffer is contiguous in Fortran-style order (first index varies fastest when visiting items in order of memory address).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47112,"byte_end":47253,"line_start":299,"line_end":299,"column_start":5,"column_end":146}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47258,"byte_end":47267,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48054,"byte_end":48062,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<PyBuffer>::as_slice","value":"pub fn as_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [ReadOnlyCell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47603,"byte_end":47641,"line_start":311,"line_end":311,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47646,"byte_end":47649,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47654,"byte_end":47684,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47689,"byte_end":47736,"line_start":314,"line_end":314,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47741,"byte_end":47827,"line_start":315,"line_end":315,"column_start":5,"column_end":91}},{"value":"/  * the buffer is C-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47832,"byte_end":47871,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47876,"byte_end":47879,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":47884,"byte_end":47999,"line_start":318,"line_end":318,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48004,"byte_end":48042,"line_start":319,"line_end":319,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49097,"byte_end":49109,"line_start":347,"line_end":347,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<PyBuffer>::as_mut_slice","value":"pub fn as_mut_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [cell::Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48607,"byte_end":48645,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48650,"byte_end":48653,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48658,"byte_end":48688,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/  * the buffer is not read-only","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48693,"byte_end":48727,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48732,"byte_end":48779,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48784,"byte_end":48870,"line_start":342,"line_end":342,"column_start":5,"column_end":91}},{"value":"/  * the buffer is C-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48875,"byte_end":48914,"line_start":343,"line_end":343,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48919,"byte_end":48922,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":48927,"byte_end":49042,"line_start":345,"line_end":345,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49047,"byte_end":49085,"line_start":346,"line_end":346,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50139,"byte_end":50155,"line_start":374,"line_end":374,"column_start":12,"column_end":28},"name":"as_fortran_slice","qualname":"<PyBuffer>::as_fortran_slice","value":"pub fn as_fortran_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [ReadOnlyCell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49682,"byte_end":49720,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49725,"byte_end":49728,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49733,"byte_end":49763,"line_start":367,"line_end":367,"column_start":5,"column_end":35}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49768,"byte_end":49815,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49820,"byte_end":49906,"line_start":369,"line_end":369,"column_start":5,"column_end":91}},{"value":"/  * the buffer is Fortran-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49911,"byte_end":49956,"line_start":370,"line_end":370,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49961,"byte_end":49964,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":49969,"byte_end":50084,"line_start":372,"line_end":372,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50089,"byte_end":50127,"line_start":373,"line_end":373,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51225,"byte_end":51245,"line_start":404,"line_end":404,"column_start":12,"column_end":32},"name":"as_fortran_mut_slice","qualname":"<PyBuffer>::as_fortran_mut_slice","value":"pub fn as_fortran_mut_slice<'a, T: Element>(&'a Self, Python)\n-> Option<&'a [cell::Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer memory as a slice.","sig":null,"attributes":[{"value":"/ Gets the buffer memory as a slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50729,"byte_end":50767,"line_start":394,"line_end":394,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50772,"byte_end":50775,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This function succeeds if:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50780,"byte_end":50810,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/  * the buffer is not read-only","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50815,"byte_end":50849,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/  * the buffer format is compatible with `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50854,"byte_end":50901,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/  * alignment and size of buffer elements is matching the expectations for type `T`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50906,"byte_end":50992,"line_start":399,"line_end":399,"column_start":5,"column_end":91}},{"value":"/  * the buffer is Fortran-style contiguous","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":50997,"byte_end":51042,"line_start":400,"line_end":400,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51047,"byte_end":51050,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The returned slice uses type `Cell<T>` because it's theoretically possible for any call into the Python runtime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51055,"byte_end":51170,"line_start":402,"line_end":402,"column_start":5,"column_end":120}},{"value":"/ to modify the values in the slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51175,"byte_end":51213,"line_start":403,"line_end":403,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52418,"byte_end":52431,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"copy_to_slice","qualname":"<PyBuffer>::copy_to_slice","value":"pub fn copy_to_slice<T: Element + Copy>(&Self, Python, &mut [T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to the specified slice.\n If the buffer is multi-dimensional, the elements are written in C-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to the specified slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51847,"byte_end":51901,"line_start":425,"line_end":425,"column_start":5,"column_end":59}},{"value":"/ If the buffer is multi-dimensional, the elements are written in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51906,"byte_end":51988,"line_start":426,"line_end":426,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":51993,"byte_end":51996,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52001,"byte_end":52081,"line_start":428,"line_end":428,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52086,"byte_end":52152,"line_start":429,"line_end":429,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52157,"byte_end":52160,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52165,"byte_end":52245,"line_start":431,"line_end":431,"column_start":5,"column_end":85}},{"value":"/ you can use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52250,"byte_end":52327,"line_start":432,"line_end":432,"column_start":5,"column_end":82}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52332,"byte_end":52406,"line_start":433,"line_end":433,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":53144,"byte_end":53165,"line_start":447,"line_end":447,"column_start":12,"column_end":33},"name":"copy_to_fortran_slice","qualname":"<PyBuffer>::copy_to_fortran_slice","value":"pub fn copy_to_fortran_slice<T: Element + Copy>(&Self, Python, &mut [T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to the specified slice.\n If the buffer is multi-dimensional, the elements are written in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to the specified slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52567,"byte_end":52621,"line_start":438,"line_end":438,"column_start":5,"column_end":59}},{"value":"/ If the buffer is multi-dimensional, the elements are written in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52626,"byte_end":52714,"line_start":439,"line_end":439,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52719,"byte_end":52722,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52727,"byte_end":52807,"line_start":441,"line_end":441,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52812,"byte_end":52878,"line_start":442,"line_end":442,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52883,"byte_end":52886,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52891,"byte_end":52971,"line_start":444,"line_end":444,"column_start":5,"column_end":85}},{"value":"/ you can use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":52976,"byte_end":53053,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":53058,"byte_end":53132,"line_start":446,"line_end":446,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54359,"byte_end":54365,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<PyBuffer>::to_vec","value":"pub fn to_vec<T: Element + Copy>(&Self, Python) -> PyResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to a newly allocated vector.\n If the buffer is multi-dimensional, the elements are written in C-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to a newly allocated vector.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54125,"byte_end":54184,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ If the buffer is multi-dimensional, the elements are written in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54189,"byte_end":54271,"line_start":481,"line_end":481,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54276,"byte_end":54279,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54284,"byte_end":54347,"line_start":483,"line_end":483,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54712,"byte_end":54726,"line_start":492,"line_end":492,"column_start":12,"column_end":26},"name":"to_fortran_vec","qualname":"<PyBuffer>::to_fortran_vec","value":"pub fn to_fortran_vec<T: Element + Copy>(&Self, Python) -> PyResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copies the buffer elements to a newly allocated vector.\n If the buffer is multi-dimensional, the elements are written in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the buffer elements to a newly allocated vector.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54472,"byte_end":54531,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/ If the buffer is multi-dimensional, the elements are written in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54536,"byte_end":54624,"line_start":489,"line_end":489,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54629,"byte_end":54632,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":54637,"byte_end":54700,"line_start":491,"line_end":491,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56489,"byte_end":56504,"line_start":531,"line_end":531,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<PyBuffer>::copy_from_slice","value":"pub fn copy_from_slice<T: Element + Copy>(&Self, Python, &[T]) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the specified slice into the buffer.\n If the buffer is multi-dimensional, the elements in the slice are expected to be in C-style order.","sig":null,"attributes":[{"value":"/ Copies the specified slice into the buffer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":55868,"byte_end":55915,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ If the buffer is multi-dimensional, the elements in the slice are expected to be in C-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":55920,"byte_end":56022,"line_start":522,"line_end":522,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56027,"byte_end":56030,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/  * Fails if the buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56035,"byte_end":56075,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56080,"byte_end":56160,"line_start":525,"line_end":525,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56165,"byte_end":56231,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56236,"byte_end":56239,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56244,"byte_end":56324,"line_start":528,"line_end":528,"column_start":5,"column_end":85}},{"value":"/ use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56329,"byte_end":56398,"line_start":529,"line_end":529,"column_start":5,"column_end":74}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56403,"byte_end":56477,"line_start":530,"line_end":530,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":57265,"byte_end":57288,"line_start":545,"line_end":545,"column_start":12,"column_end":35},"name":"copy_from_fortran_slice","qualname":"<PyBuffer>::copy_from_fortran_slice","value":"pub fn copy_from_fortran_slice<T: Element + Copy>(&Self, Python, &[T])\n-> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies the specified slice into the buffer.\n If the buffer is multi-dimensional, the elements in the slice are expected to be in Fortran-style order.","sig":null,"attributes":[{"value":"/ Copies the specified slice into the buffer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56638,"byte_end":56685,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/ If the buffer is multi-dimensional, the elements in the slice are expected to be in Fortran-style order.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56690,"byte_end":56798,"line_start":536,"line_end":536,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56803,"byte_end":56806,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/  * Fails if the buffer is read-only.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56811,"byte_end":56851,"line_start":538,"line_end":538,"column_start":5,"column_end":45}},{"value":"/  * Fails if the slice does not have the correct length (`buf.item_count()`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56856,"byte_end":56936,"line_start":539,"line_end":539,"column_start":5,"column_end":85}},{"value":"/  * Fails if the buffer format is not compatible with type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":56941,"byte_end":57007,"line_start":540,"line_end":540,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":57012,"byte_end":57015,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ To check whether the buffer format is compatible before calling this method,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":57020,"byte_end":57100,"line_start":542,"line_end":542,"column_start":5,"column_end":85}},{"value":"/ use `<T as buffer::Element>::is_compatible_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":57105,"byte_end":57174,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ Alternatively, `match buffer::ElementType::from_format(buf.format())`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":57179,"byte_end":57253,"line_start":544,"line_end":544,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59438,"byte_end":59450,"line_start":622,"line_end":622,"column_start":12,"column_end":24},"name":"ReadOnlyCell","qualname":"::buffer::ReadOnlyCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `std::mem::cell`, but only provides read-only access to the data.","sig":null,"attributes":[{"value":"/ Like `std::mem::cell`, but only provides read-only access to the data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59173,"byte_end":59247,"line_start":617,"line_end":617,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59248,"byte_end":59251,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ `&ReadOnlyCell<T>` is basically a safe version of `*const T`:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59252,"byte_end":59317,"line_start":619,"line_end":619,"column_start":1,"column_end":66}},{"value":"/  The data cannot be modified through the reference, but other references may","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59318,"byte_end":59398,"line_start":620,"line_end":620,"column_start":1,"column_end":81}},{"value":"/  be modifying the data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59399,"byte_end":59426,"line_start":621,"line_end":621,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59534,"byte_end":59537,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"get","qualname":"<ReadOnlyCell<T>>::get","value":"pub fn get(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59513,"byte_end":59522,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59617,"byte_end":59623,"line_start":631,"line_end":631,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ReadOnlyCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59596,"byte_end":59605,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65565,"byte_end":65575,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"ToPyObject","qualname":"::conversion::ToPyObject","value":"ToPyObject","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Conversion trait that allows various objects to be converted into Python objects.","sig":null,"attributes":[{"value":"/ Conversion trait that allows various objects to be converted into Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65055,"byte_end":65140,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65141,"byte_end":65144,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note: The associated type `ObjectType` is used so that some Rust types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65145,"byte_end":65219,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ convert to a more precise type of Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65220,"byte_end":65272,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ For example, `[T]::to_py_object()` will result in a `PyList`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65273,"byte_end":65338,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ You can always calls `val.to_py_object(py).into_py_object()` in order to obtain `PyObject`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65339,"byte_end":65433,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ (the second into_py_object() call via the PythonObject trait corresponds to the upcast from `PyList` to `PyObject`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65434,"byte_end":65554,"line_start":30,"line_end":30,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65587,"byte_end":65597,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"name":"ObjectType","qualname":"::conversion::ToPyObject::ObjectType","value":"type ObjectType: PythonObject;","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65665,"byte_end":65677,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"to_py_object","qualname":"::conversion::ToPyObject::to_py_object","value":"pub fn to_py_object(&Self, Python) -> Self::ObjectType","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Converts self into a Python object.\n","sig":null,"attributes":[{"value":"/ Converts self into a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65618,"byte_end":65657,"line_start":34,"line_end":34,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65909,"byte_end":65923,"line_start":42,"line_end":42,"column_start":8,"column_end":22},"name":"into_py_object","qualname":"::conversion::ToPyObject::into_py_object","value":"pub fn into_py_object(Self, Python) -> Self::ObjectType where Self: Sized","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Converts self into a Python object.","sig":null,"attributes":[{"value":"/ Converts self into a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65723,"byte_end":65762,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65767,"byte_end":65770,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ May be more efficient than `to_py_object` in some cases because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65775,"byte_end":65842,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ it can move out of the input object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65847,"byte_end":65887,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":65892,"byte_end":65901,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66367,"byte_end":66384,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"with_borrowed_ptr","qualname":"::conversion::ToPyObject::with_borrowed_ptr","value":"pub fn with_borrowed_ptr<F, R>(&Self, Python, F) -> R where\nF: FnOnce(*mut ffi::PyObject) -> R","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Converts self into a Python object and calls the specified closure\n on the native FFI pointer underlying the Python object.","sig":null,"attributes":[{"value":"/ Converts self into a Python object and calls the specified closure","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66040,"byte_end":66110,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ on the native FFI pointer underlying the Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66115,"byte_end":66174,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66179,"byte_end":66182,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ May be more efficient than `to_py_object` because it does not need","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66187,"byte_end":66257,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ to touch any reference counts when the input object already is a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66262,"byte_end":66345,"line_start":53,"line_end":53,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":66350,"byte_end":66359,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68374,"byte_end":68386,"line_start":102,"line_end":102,"column_start":11,"column_end":23},"name":"FromPyObject","qualname":"::conversion::FromPyObject","value":"FromPyObject<'s>: Sized","parent":null,"children":[{"krate":0,"index":315}],"decl_id":null,"docs":" FromPyObject is implemented by various types that can be extracted from a Python object.","sig":null,"attributes":[{"value":"/ FromPyObject is implemented by various types that can be extracted from a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67472,"byte_end":67564,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67565,"byte_end":67568,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Normal usage is through the `PyObject::extract` helper method:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67569,"byte_end":67635,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ ```let obj: PyObject = ...;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67636,"byte_end":67667,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"/ let value = obj.extract::<TargetType>(py)?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67668,"byte_end":67715,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67716,"byte_end":67723,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67724,"byte_end":67727,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Each target type for this conversion supports a different Python objects as input.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67728,"byte_end":67814,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/ Calls with an unsupported input object will result in an exception (usually a `TypeError`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67815,"byte_end":67910,"line_start":94,"line_end":94,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67911,"byte_end":67914,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This trait is also used by the `py_fn!` and `py_class!` and `py_argparse!` macros","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":67915,"byte_end":68000,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ in order to translate from Python objects to the expected Rust parameter types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68001,"byte_end":68084,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ For example, the parameter `x` in `def method(self, x: i32)` will use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68085,"byte_end":68158,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/ `impl FromPyObject for i32` to convert the input Python object into a Rust `i32`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68159,"byte_end":68244,"line_start":99,"line_end":99,"column_start":1,"column_end":86}},{"value":"/ When these macros are used with reference parameters (`x: &str`), the trait","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68245,"byte_end":68324,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ `RefFromPyObject` is used instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68325,"byte_end":68363,"line_start":101,"line_end":101,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68459,"byte_end":68466,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"extract","qualname":"::conversion::FromPyObject::extract","value":"pub fn extract(Python, &'s PyObject) -> PyResult<Self>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Extracts `Self` from the source `PyObject`.\n","sig":null,"attributes":[{"value":"/ Extracts `Self` from the source `PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68404,"byte_end":68451,"line_start":103,"line_end":103,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69779,"byte_end":69794,"line_start":131,"line_end":131,"column_start":11,"column_end":26},"name":"RefFromPyObject","qualname":"::conversion::RefFromPyObject","value":"RefFromPyObject","parent":null,"children":[{"krate":0,"index":317}],"decl_id":null,"docs":" RefFromPyObject is implemented by various types that can be extracted\n as a reference from a Python object.\n Depending on the input object, the reference may point into memory owned\n by the Python interpreter; or into a temporary object.","sig":null,"attributes":[{"value":"/ RefFromPyObject is implemented by various types that can be extracted","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68574,"byte_end":68647,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/ as a reference from a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68648,"byte_end":68688,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ Depending on the input object, the reference may point into memory owned","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68689,"byte_end":68765,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ by the Python interpreter; or into a temporary object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68766,"byte_end":68824,"line_start":112,"line_end":112,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68825,"byte_end":68828,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```let obj: PyObject = ...;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68829,"byte_end":68860,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ let sum_of_bytes = <[u8] as RefFromPyObject>::with_extracted(py, obj,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68861,"byte_end":68934,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/     |data: &[u8]| data.iter().sum()","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68935,"byte_end":68974,"line_start":116,"line_end":116,"column_start":1,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68975,"byte_end":68981,"line_start":117,"line_end":117,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68982,"byte_end":68989,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ A lambda has to be used because the slice may refer to temporary object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68990,"byte_end":69065,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ that exists only during the `with_extracted` call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69066,"byte_end":69120,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69121,"byte_end":69124,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Each target type for this conversion supports a different Python objects as input.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69125,"byte_end":69211,"line_start":122,"line_end":122,"column_start":1,"column_end":87}},{"value":"/ Calls with an unsupported input object will result in an exception (usually a `TypeError`).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69212,"byte_end":69307,"line_start":123,"line_end":123,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69308,"byte_end":69311,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This trait is also used by the `py_fn!` and `py_class!` and `py_argparse!` macros","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69312,"byte_end":69397,"line_start":125,"line_end":125,"column_start":1,"column_end":86}},{"value":"/ in order to translate from Python objects to the expected Rust parameter types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69398,"byte_end":69481,"line_start":126,"line_end":126,"column_start":1,"column_end":84}},{"value":"/ For example, the parameter `x` in `def method(self, x: &[u8])` will use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69482,"byte_end":69557,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ `impl RefFromPyObject for [u8]` to convert the input Python object into a Rust `&[u8]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69558,"byte_end":69649,"line_start":128,"line_end":128,"column_start":1,"column_end":92}},{"value":"/ When these macros are used with non-reference parameters (`x: i32`), the trait","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69650,"byte_end":69732,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ `FromPyObject` is used instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69733,"byte_end":69768,"line_start":130,"line_end":130,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69804,"byte_end":69818,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"with_extracted","qualname":"::conversion::RefFromPyObject::with_extracted","value":"pub fn with_extracted<F, R>(Python, &PyObject, F) -> PyResult<R> where\nF: FnOnce(&Self) -> R","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78319,"byte_end":78324,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"PyErr","qualname":"::err::PyErr","value":"PyErr { ptype, pvalue, ptraceback }","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439}],"decl_id":null,"docs":" Represents a Python exception that was raised.\n","sig":null,"attributes":[{"value":"/ Represents a Python exception that was raised.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78240,"byte_end":78290,"line_start":141,"line_end":141,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78419,"byte_end":78424,"line_start":145,"line_end":145,"column_start":9,"column_end":14},"name":"ptype","qualname":"::err::PyErr::ptype","value":"objects::object::PyObject","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" The type of the exception. This should be either a `PyClass` or a `PyType`.\n","sig":null,"attributes":[{"value":"/ The type of the exception. This should be either a `PyClass` or a `PyType`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78331,"byte_end":78410,"line_start":144,"line_end":144,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78752,"byte_end":78758,"line_start":152,"line_end":152,"column_start":9,"column_end":15},"name":"pvalue","qualname":"::err::PyErr::pvalue","value":"std::option::Option<objects::object::PyObject>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" The value of the exception.","sig":null,"attributes":[{"value":"/ The value of the exception.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78440,"byte_end":78471,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78476,"byte_end":78479,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This can be either an instance of `ptype`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78484,"byte_end":78530,"line_start":148,"line_end":148,"column_start":5,"column_end":51}},{"value":"/ a tuple of arguments to be passed to `ptype`'s constructor,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78535,"byte_end":78598,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/ or a single argument to be passed to `ptype`'s constructor.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78603,"byte_end":78666,"line_start":150,"line_end":150,"column_start":5,"column_end":68}},{"value":"/ Call `PyErr::instance()` to get the exception instance in all cases.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78671,"byte_end":78743,"line_start":151,"line_end":151,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78846,"byte_end":78856,"line_start":154,"line_end":154,"column_start":9,"column_end":19},"name":"ptraceback","qualname":"::err::PyErr::ptraceback","value":"std::option::Option<objects::object::PyObject>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" The `PyTraceBack` object associated with the error.\n","sig":null,"attributes":[{"value":"/ The `PyTraceBack` object associated with the error.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78782,"byte_end":78837,"line_start":153,"line_end":153,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78932,"byte_end":78940,"line_start":158,"line_end":158,"column_start":10,"column_end":18},"name":"PyResult","qualname":"::err::PyResult","value":"Result<T, PyErr>","parent":null,"children":[],"decl_id":null,"docs":" Represents the result of a Python call.\n","sig":null,"attributes":[{"value":"/ Represents the result of a Python call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78879,"byte_end":78922,"line_start":157,"line_end":157,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79500,"byte_end":79503,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<PyErr>::new","value":"pub fn new<T, V>(Python, V) -> PyErr where T: PythonObjectWithTypeObject,\nV: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new PyErr of type `T`.","sig":null,"attributes":[{"value":"/ Creates a new PyErr of type `T`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78982,"byte_end":79018,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79023,"byte_end":79026,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ `value` can be:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79031,"byte_end":79050,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/  * `NoArgs`: the exception instance will be created using python `T()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79055,"byte_end":79129,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/  * a tuple: the exception instance will be created using python `T(*tuple)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79134,"byte_end":79213,"line_start":165,"line_end":165,"column_start":5,"column_end":84}},{"value":"/  * any other value: the exception instance will be created using python `T(value)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79218,"byte_end":79304,"line_start":166,"line_end":166,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79309,"byte_end":79312,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Panics if `T` is not a python class derived from `BaseException`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79317,"byte_end":79386,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79391,"byte_end":79394,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79399,"byte_end":79411,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/  `return Err(PyErr::new::<exc::TypeError, _>(py, \"Error message\"));`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79416,"byte_end":79488,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79822,"byte_end":79830,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"occurred","qualname":"<PyErr>::occurred","value":"pub fn occurred(Python) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether an error is present in the Python interpreter's global state.\n","sig":null,"attributes":[{"value":"/ Gets whether an error is present in the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79718,"byte_end":79796,"line_start":180,"line_end":180,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79801,"byte_end":79810,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":80250,"byte_end":80258,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"new_type","qualname":"<PyErr>::new_type","value":"pub fn new_type(Python, &str, Option<PyObject>, Option<PyObject>) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new exception type with the given name, which must be of the form\n `<module>.<ExceptionName>`, as required by `PyErr_NewException`.","sig":null,"attributes":[{"value":"/ Creates a new exception type with the given name, which must be of the form","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79915,"byte_end":79994,"line_start":186,"line_end":186,"column_start":5,"column_end":84}},{"value":"/ `<module>.<ExceptionName>`, as required by `PyErr_NewException`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":79999,"byte_end":80067,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":80072,"byte_end":80075,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ `base` can be an existing exception type to subclass, or a tuple of classes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":80080,"byte_end":80159,"line_start":189,"line_end":189,"column_start":5,"column_end":84}},{"value":"/ `dict` specifies an optional dictionary of class variables and methods","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":80164,"byte_end":80238,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":81194,"byte_end":81199,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"fetch","qualname":"<PyErr>::fetch","value":"pub fn fetch(Python) -> PyErr","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the current error from the Python interpreter's global state.\n The error is cleared from the Python interpreter.\n If no error is set, returns a `SystemError`.\n","sig":null,"attributes":[{"value":"/ Retrieves the current error from the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":80996,"byte_end":81071,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ The error is cleared from the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":81076,"byte_end":81129,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/ If no error is set, returns a `SystemError`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":81134,"byte_end":81182,"line_start":217,"line_end":217,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82857,"byte_end":82870,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"from_instance","qualname":"<PyErr>::from_instance","value":"pub fn from_instance<O>(Python, O) -> PyErr where O: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new PyErr.","sig":null,"attributes":[{"value":"/ Creates a new PyErr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82562,"byte_end":82586,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82591,"byte_end":82594,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ `obj` must be an Python exception instance, the PyErr will use that instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82599,"byte_end":82680,"line_start":258,"line_end":258,"column_start":5,"column_end":86}},{"value":"/ If `obj` is a Python exception type object, the PyErr will (lazily) create a new instance of that type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82685,"byte_end":82792,"line_start":259,"line_end":259,"column_start":5,"column_end":112}},{"value":"/ Otherwise, a `TypeError` is created instead.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":82797,"byte_end":82845,"line_start":260,"line_end":260,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84310,"byte_end":84323,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"new_lazy_init","qualname":"<PyErr>::new_lazy_init","value":"pub fn new_lazy_init(PyType, Option<PyObject>) -> PyErr","parent":null,"children":[],"decl_id":null,"docs":" Construct a new error, with the usual lazy initialization of Python exceptions.\n `exc` is the exception type; usually one of the standard exceptions like `py.get_type::<exc::RuntimeError>()`.\n `value` is the exception instance, or a tuple of arguments to pass to the exception constructor.\n","sig":null,"attributes":[{"value":"/ Construct a new error, with the usual lazy initialization of Python exceptions.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":83977,"byte_end":84060,"line_start":296,"line_end":296,"column_start":5,"column_end":88}},{"value":"/ `exc` is the exception type; usually one of the standard exceptions like `py.get_type::<exc::RuntimeError>()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84065,"byte_end":84179,"line_start":297,"line_end":297,"column_start":5,"column_end":119}},{"value":"/ `value` is the exception instance, or a tuple of arguments to pass to the exception constructor.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84184,"byte_end":84284,"line_start":298,"line_end":298,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84289,"byte_end":84298,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84562,"byte_end":84567,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"print","qualname":"<PyErr>::print","value":"pub fn print(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Print a standard traceback to sys.stderr.\n","sig":null,"attributes":[{"value":"/ Print a standard traceback to sys.stderr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84505,"byte_end":84550,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84723,"byte_end":84750,"line_start":315,"line_end":315,"column_start":12,"column_end":39},"name":"print_and_set_sys_last_vars","qualname":"<PyErr>::print_and_set_sys_last_vars","value":"pub fn print_and_set_sys_last_vars(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Print a standard traceback to sys.stderr.\n","sig":null,"attributes":[{"value":"/ Print a standard traceback to sys.stderr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84666,"byte_end":84711,"line_start":314,"line_end":314,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":85150,"byte_end":85157,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"matches","qualname":"<PyErr>::matches","value":"pub fn matches<T>(&Self, Python, T) -> bool where T: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return true if the current exception matches the exception in `exc`.\n If `exc` is a class object, this also returns `true` when `self` is an instance of a subclass.\n If `exc` is a tuple, all exceptions in the tuple (and recursively in subtuples) are searched for a match.\n","sig":null,"attributes":[{"value":"/ Return true if the current exception matches the exception in `exc`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84849,"byte_end":84921,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ If `exc` is a class object, this also returns `true` when `self` is an instance of a subclass.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":84926,"byte_end":85024,"line_start":321,"line_end":321,"column_start":5,"column_end":103}},{"value":"/ If `exc` is a tuple, all exceptions in the tuple (and recursively in subtuples) are searched for a match.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":85029,"byte_end":85138,"line_start":322,"line_end":322,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":85495,"byte_end":85504,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"normalize","qualname":"<PyErr>::normalize","value":"pub fn normalize(&mut Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the error. This ensures that the exception value is an instance of the exception type.\n","sig":null,"attributes":[{"value":"/ Normalizes the error. This ensures that the exception value is an instance of the exception type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":85382,"byte_end":85483,"line_start":332,"line_end":332,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87087,"byte_end":87095,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"get_type","qualname":"<PyErr>::get_type","value":"pub fn get_type(&Self, Python) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the exception type.\n","sig":null,"attributes":[{"value":"/ Retrieves the exception type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87000,"byte_end":87033,"line_start":373,"line_end":373,"column_start":5,"column_end":38}},{"value":"cfg(not(feature = \"python27-sys\"))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87038,"byte_end":87075,"line_start":374,"line_end":374,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87480,"byte_end":87488,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"name":"instance","qualname":"<PyErr>::instance","value":"pub fn instance(&mut Self, Python) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the exception instance for this error.\n This method takes `&mut self` because the error might need\n to be normalized in order to create the exception instance.\n","sig":null,"attributes":[{"value":"/ Retrieves the exception instance for this error.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87281,"byte_end":87333,"line_start":382,"line_end":382,"column_start":5,"column_end":57}},{"value":"/ This method takes `&mut self` because the error might need","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87338,"byte_end":87400,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/ to be normalized in order to create the exception instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87405,"byte_end":87468,"line_start":384,"line_end":384,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87835,"byte_end":87842,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"restore","qualname":"<PyErr>::restore","value":"pub fn restore(Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Writes the error back to the Python interpreter's global state.\n This is the opposite of `PyErr::fetch()`.\n","sig":null,"attributes":[{"value":"/ Writes the error back to the Python interpreter's global state.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87692,"byte_end":87759,"line_start":393,"line_end":393,"column_start":5,"column_end":72}},{"value":"/ This is the opposite of `PyErr::fetch()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87764,"byte_end":87809,"line_start":394,"line_end":394,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":87814,"byte_end":87823,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88264,"byte_end":88268,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"warn","qualname":"<PyErr>::warn","value":"pub fn warn(Python, &PyObject, &str, i32) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Issue a warning message.\n May return a PyErr if warnings-as-errors is enabled.\n","sig":null,"attributes":[{"value":"/ Issue a warning message.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88163,"byte_end":88191,"line_start":411,"line_end":411,"column_start":5,"column_end":33}},{"value":"/ May return a PyErr if warnings-as-errors is enabled.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88196,"byte_end":88252,"line_start":412,"line_end":412,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89875,"byte_end":89896,"line_start":464,"line_end":464,"column_start":15,"column_end":36},"name":"result_from_owned_ptr","qualname":"::err::result_from_owned_ptr","value":"pub unsafe fn result_from_owned_ptr(Python, *mut ffi::PyObject)\n-> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Construct PyObject from the result of a Python FFI call that returns a new reference (owned pointer).\n Returns `Err(PyErr)` if the pointer is `null`.\n Unsafe because the pointer might be invalid.\n","sig":null,"attributes":[{"value":"/ Construct PyObject from the result of a Python FFI call that returns a new reference (owned pointer).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89645,"byte_end":89750,"line_start":460,"line_end":460,"column_start":1,"column_end":106}},{"value":"/ Returns `Err(PyErr)` if the pointer is `null`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89751,"byte_end":89801,"line_start":461,"line_end":461,"column_start":1,"column_end":51}},{"value":"/ Unsafe because the pointer might be invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89802,"byte_end":89850,"line_start":462,"line_end":462,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89851,"byte_end":89860,"line_start":463,"line_end":463,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":90228,"byte_end":90251,"line_start":480,"line_end":480,"column_start":15,"column_end":38},"name":"from_owned_ptr_or_panic","qualname":"::err::from_owned_ptr_or_panic","value":"pub unsafe fn from_owned_ptr_or_panic(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":90204,"byte_end":90213,"line_start":479,"line_end":479,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98023,"byte_end":98033,"line_start":161,"line_end":161,"column_start":15,"column_end":25},"name":"py_fn_impl","qualname":"::function::py_fn_impl","value":"pub unsafe fn py_fn_impl(Python, *mut ffi::PyMethodDef) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98196,"byte_end":98213,"line_start":165,"line_end":165,"column_start":11,"column_end":28},"name":"CallbackConverter","qualname":"::function::CallbackConverter","value":"CallbackConverter<S>","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98228,"byte_end":98229,"line_start":166,"line_end":166,"column_start":10,"column_end":11},"name":"R","qualname":"::function::CallbackConverter::R","value":"type R;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98239,"byte_end":98246,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"convert","qualname":"::function::CallbackConverter::convert","value":"pub fn convert(S, Python) -> Self::R","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98286,"byte_end":98297,"line_start":169,"line_end":169,"column_start":8,"column_end":19},"name":"error_value","qualname":"::function::CallbackConverter::error_value","value":"pub fn error_value() -> Self::R","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98326,"byte_end":98351,"line_start":172,"line_end":172,"column_start":12,"column_end":37},"name":"PyObjectCallbackConverter","qualname":"::function::PyObjectCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98700,"byte_end":98729,"line_start":190,"line_end":190,"column_start":12,"column_end":41},"name":"PythonObjectCallbackConverter","qualname":"::function::PythonObjectCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98733,"byte_end":98759,"line_start":190,"line_end":190,"column_start":45,"column_end":71},"name":"0","qualname":"::function::PythonObjectCallbackConverter::0","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":99159,"byte_end":99174,"line_start":209,"line_end":209,"column_start":15,"column_end":30},"name":"handle_callback","qualname":"::function::handle_callback","value":"pub unsafe fn handle_callback<F, T, C>(&str, C, F) -> C::R where\nF: FnOnce(Python) -> PyResult<T>, F: panic::UnwindSafe,\nC: CallbackConverter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":100166,"byte_end":100177,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"AbortOnDrop","qualname":"::function::AbortOnDrop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":100182,"byte_end":100193,"line_start":245,"line_end":245,"column_start":28,"column_end":39},"name":"0","qualname":"::function::AbortOnDrop::0","value":"&'a str","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":101863,"byte_end":101877,"line_start":29,"line_end":29,"column_start":11,"column_end":25},"name":"ObjectProtocol","qualname":"::objectprotocol::ObjectProtocol","value":"ObjectProtocol: PythonObject","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":629},{"krate":0,"index":632}],"decl_id":null,"docs":" Trait that contains methods\n","sig":null,"attributes":[{"value":"/ Trait that contains methods","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":101821,"byte_end":101852,"line_start":28,"line_end":28,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102059,"byte_end":102066,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"hasattr","qualname":"::objectprotocol::ObjectProtocol::hasattr","value":"pub fn hasattr<N>(&Self, Python, N) -> PyResult<bool> where N: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Determines whether this object has the given attribute.\n This is equivalent to the Python expression 'hasattr(self, attr_name)'.\n","sig":null,"attributes":[{"value":"/ Determines whether this object has the given attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":101898,"byte_end":101957,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ This is equivalent to the Python expression 'hasattr(self, attr_name)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":101962,"byte_end":102037,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102042,"byte_end":102051,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102437,"byte_end":102444,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"getattr","qualname":"::objectprotocol::ObjectProtocol::getattr","value":"pub fn getattr<N>(&Self, Python, N) -> PyResult<PyObject> where N: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Retrieves an attribute value.\n This is equivalent to the Python expression 'self.attr_name'.\n","sig":null,"attributes":[{"value":"/ Retrieves an attribute value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102312,"byte_end":102345,"line_start":42,"line_end":42,"column_start":5,"column_end":38}},{"value":"/ This is equivalent to the Python expression 'self.attr_name'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102350,"byte_end":102415,"line_start":43,"line_end":43,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102420,"byte_end":102429,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102845,"byte_end":102852,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"setattr","qualname":"::objectprotocol::ObjectProtocol::setattr","value":"pub fn setattr<N, V>(&Self, Python, N, V) -> PyResult<()> where N: ToPyObject,\nV: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets an attribute value.\n This is equivalent to the Python expression 'self.attr_name = value'.\n","sig":null,"attributes":[{"value":"/ Sets an attribute value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102717,"byte_end":102745,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/ This is equivalent to the Python expression 'self.attr_name = value'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102750,"byte_end":102823,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":102828,"byte_end":102837,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103353,"byte_end":103360,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"delattr","qualname":"::objectprotocol::ObjectProtocol::delattr","value":"pub fn delattr<N>(&Self, Python, N) -> PyResult<()> where N: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Deletes an attribute.\n This is equivalent to the Python expression 'del self.attr_name'.\n","sig":null,"attributes":[{"value":"/ Deletes an attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103232,"byte_end":103257,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"/ This is equivalent to the Python expression 'del self.attr_name'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103262,"byte_end":103331,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103336,"byte_end":103345,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":104083,"byte_end":104090,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"compare","qualname":"::objectprotocol::ObjectProtocol::compare","value":"pub fn compare<O>(&Self, Python, O) -> PyResult<Ordering> where O: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Compares two Python objects.","sig":null,"attributes":[{"value":"/ Compares two Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103623,"byte_end":103655,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103660,"byte_end":103663,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ On Python 2, this is equivalent to the Python expression 'cmp(self, other)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103668,"byte_end":103748,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103753,"byte_end":103756,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ On Python 3, this is equivalent to:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103761,"byte_end":103800,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103805,"byte_end":103818,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ if self == other:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103823,"byte_end":103844,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/     return Equal","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103849,"byte_end":103869,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ elif a < b:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103874,"byte_end":103889,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/     return Less","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103894,"byte_end":103913,"line_start":90,"line_end":90,"column_start":5,"column_end":24}},{"value":"/ elif a > b:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103918,"byte_end":103933,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     return Greater","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103938,"byte_end":103960,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"/ else:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103965,"byte_end":103974,"line_start":93,"line_end":93,"column_start":5,"column_end":14}},{"value":"/     raise TypeError(\"ObjectProtocol::compare(): All comparisons returned false\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":103979,"byte_end":104063,"line_start":94,"line_end":94,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":104068,"byte_end":104075,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106152,"byte_end":106164,"line_start":153,"line_end":153,"column_start":8,"column_end":20},"name":"rich_compare","qualname":"::objectprotocol::ObjectProtocol::rich_compare","value":"pub fn rich_compare<O>(&Self, Python, O, crate::CompareOp)\n-> PyResult<PyObject> where O: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Compares two Python objects.","sig":null,"attributes":[{"value":"/ Compares two Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105745,"byte_end":105777,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105782,"byte_end":105785,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Depending on the value of `compare_op`, equivalent to one of the following Python expressions:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105790,"byte_end":105888,"line_start":146,"line_end":146,"column_start":5,"column_end":103}},{"value":"/   * CompareOp::Eq: `self == other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105893,"byte_end":105931,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Ne: `self != other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105936,"byte_end":105974,"line_start":148,"line_end":148,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Lt: `self < other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":105979,"byte_end":106016,"line_start":149,"line_end":149,"column_start":5,"column_end":42}},{"value":"/   * CompareOp::Le: `self <= other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106021,"byte_end":106059,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/   * CompareOp::Gt: `self > other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106064,"byte_end":106101,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/   * CompareOp::Ge: `self >= other`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106106,"byte_end":106144,"line_start":152,"line_end":152,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106707,"byte_end":106711,"line_start":173,"line_end":173,"column_start":8,"column_end":12},"name":"repr","qualname":"::objectprotocol::ObjectProtocol::repr","value":"pub fn repr(&Self, Python) -> PyResult<PyString>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Compute the string representation of self.\n This is equivalent to the Python expression 'repr(self)'.\n","sig":null,"attributes":[{"value":"/ Compute the string representation of self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106573,"byte_end":106619,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ This is equivalent to the Python expression 'repr(self)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106624,"byte_end":106685,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106690,"byte_end":106699,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106989,"byte_end":106992,"line_start":180,"line_end":180,"column_start":8,"column_end":11},"name":"str","qualname":"::objectprotocol::ObjectProtocol::str","value":"pub fn str(&Self, Python) -> PyResult<PyString>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Compute the string representation of self.\n This is equivalent to the Python expression 'str(self)'.\n","sig":null,"attributes":[{"value":"/ Compute the string representation of self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106856,"byte_end":106902,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/ This is equivalent to the Python expression 'str(self)'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106907,"byte_end":106967,"line_start":178,"line_end":178,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":106972,"byte_end":106981,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107557,"byte_end":107568,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"is_callable","qualname":"::objectprotocol::ObjectProtocol::is_callable","value":"pub fn is_callable(&Self, Python) -> bool","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Determines whether this object is callable.\n","sig":null,"attributes":[{"value":"/ Determines whether this object is callable.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107488,"byte_end":107535,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107540,"byte_end":107549,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108055,"byte_end":108059,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"call","qualname":"::objectprotocol::ObjectProtocol::call","value":"pub fn call<A>(&Self, Python, A, Option<&PyDict>) -> PyResult<PyObject> where\nA: ToPyObject<ObjectType = PyTuple>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Calls the object.\n This is equivalent to the Python expression: 'self(*args, **kwargs)'","sig":null,"attributes":[{"value":"/ Calls the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107671,"byte_end":107692,"line_start":198,"line_end":198,"column_start":5,"column_end":26}},{"value":"/ This is equivalent to the Python expression: 'self(*args, **kwargs)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107697,"byte_end":107769,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107774,"byte_end":107777,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107782,"byte_end":107862,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107867,"byte_end":107901,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107906,"byte_end":107974,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":107979,"byte_end":108033,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108038,"byte_end":108047,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109243,"byte_end":109254,"line_start":236,"line_end":236,"column_start":8,"column_end":19},"name":"call_method","qualname":"::objectprotocol::ObjectProtocol::call_method","value":"pub fn call_method<A>(&Self, Python, &str, A, Option<&PyDict>)\n-> PyResult<PyObject> where A: ToPyObject<ObjectType = PyTuple>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Calls a method on the object.\n This is equivalent to the Python expression: 'self.name(*args, **kwargs)'","sig":null,"attributes":[{"value":"/ Calls a method on the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108373,"byte_end":108406,"line_start":215,"line_end":215,"column_start":5,"column_end":38}},{"value":"/ This is equivalent to the Python expression: 'self.name(*args, **kwargs)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108411,"byte_end":108488,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108493,"byte_end":108496,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108501,"byte_end":108581,"line_start":218,"line_end":218,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108586,"byte_end":108620,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108625,"byte_end":108693,"line_start":220,"line_end":220,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108698,"byte_end":108752,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108757,"byte_end":108760,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108765,"byte_end":108778,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108783,"byte_end":108796,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/ use cpython::{NoArgs, ObjectProtocol};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108801,"byte_end":108843,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ # use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108848,"byte_end":108874,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ # let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108879,"byte_end":108917,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ # let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108922,"byte_end":108950,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/ # let obj = py.None();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108955,"byte_end":108981,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/ // Call method without arguments:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":108986,"byte_end":109023,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/ let value = obj.call_method(py, \"method0\", NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109028,"byte_end":109098,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/ // Call method with a single argument:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109103,"byte_end":109145,"line_start":232,"line_end":232,"column_start":5,"column_end":47}},{"value":"/ obj.call_method(py, \"method1\", (true,), None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109150,"byte_end":109209,"line_start":233,"line_end":233,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109214,"byte_end":109221,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109226,"byte_end":109235,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109649,"byte_end":109653,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"hash","qualname":"::objectprotocol::ObjectProtocol::hash","value":"pub fn hash(&Self, Python) -> PyResult<crate::Py_hash_t>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Retrieves the hash code of the object.\n This is equivalent to the Python expression: 'hash(self)'\n","sig":null,"attributes":[{"value":"/ Retrieves the hash code of the object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109519,"byte_end":109561,"line_start":249,"line_end":249,"column_start":5,"column_end":47}},{"value":"/ This is equivalent to the Python expression: 'hash(self)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109566,"byte_end":109627,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109632,"byte_end":109641,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110024,"byte_end":110031,"line_start":264,"line_end":264,"column_start":8,"column_end":15},"name":"is_true","qualname":"::objectprotocol::ObjectProtocol::is_true","value":"pub fn is_true(&Self, Python) -> PyResult<bool>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Returns whether the object is considered to be true.\n This is equivalent to the Python expression: 'not not self'\n","sig":null,"attributes":[{"value":"/ Returns whether the object is considered to be true.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109878,"byte_end":109934,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/ This is equivalent to the Python expression: 'not not self'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":109939,"byte_end":110002,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110007,"byte_end":110016,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110388,"byte_end":110391,"line_start":276,"line_end":276,"column_start":8,"column_end":11},"name":"len","qualname":"::objectprotocol::ObjectProtocol::len","value":"pub fn len(&Self, Python) -> PyResult<usize>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Returns the length of the sequence or mapping.\n This is equivalent to the Python expression: 'len(self)'\n","sig":null,"attributes":[{"value":"/ Returns the length of the sequence or mapping.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110251,"byte_end":110301,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/ This is equivalent to the Python expression: 'len(self)'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110306,"byte_end":110366,"line_start":274,"line_end":274,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110371,"byte_end":110380,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110696,"byte_end":110704,"line_start":287,"line_end":287,"column_start":8,"column_end":16},"name":"get_item","qualname":"::objectprotocol::ObjectProtocol::get_item","value":"pub fn get_item<K>(&Self, Python, K) -> PyResult<PyObject> where K: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" This is equivalent to the Python expression: 'self[key]'\n","sig":null,"attributes":[{"value":"/ This is equivalent to the Python expression: 'self[key]'","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110614,"byte_end":110674,"line_start":285,"line_end":285,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110679,"byte_end":110688,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111071,"byte_end":111079,"line_start":299,"line_end":299,"column_start":8,"column_end":16},"name":"set_item","qualname":"::objectprotocol::ObjectProtocol::set_item","value":"pub fn set_item<K, V>(&Self, Python, K, V) -> PyResult<()> where\nK: ToPyObject, V: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets an item value.\n This is equivalent to the Python expression 'self[key] = value'.\n","sig":null,"attributes":[{"value":"/ Sets an item value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110953,"byte_end":110976,"line_start":296,"line_end":296,"column_start":5,"column_end":28}},{"value":"/ This is equivalent to the Python expression 'self[key] = value'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":110981,"byte_end":111049,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111054,"byte_end":111063,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111546,"byte_end":111554,"line_start":314,"line_end":314,"column_start":8,"column_end":16},"name":"del_item","qualname":"::objectprotocol::ObjectProtocol::del_item","value":"pub fn del_item<K>(&Self, Python, K) -> PyResult<()> where K: ToPyObject","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Deletes an item.\n This is equivalent to the Python expression 'del self[key]'.\n","sig":null,"attributes":[{"value":"/ Deletes an item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111435,"byte_end":111455,"line_start":311,"line_end":311,"column_start":5,"column_end":25}},{"value":"/ This is equivalent to the Python expression 'del self[key]'.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111460,"byte_end":111524,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111529,"byte_end":111538,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111972,"byte_end":111976,"line_start":327,"line_end":327,"column_start":8,"column_end":12},"name":"iter","qualname":"::objectprotocol::ObjectProtocol::iter","value":"pub fn iter<'p>(&Self, Python) -> PyResult<crate::objects::PyIterator>","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Takes an object and returns an iterator for it.\n This is typically a new iterator but if the argument\n is an iterator, this returns itself.\n","sig":null,"attributes":[{"value":"/ Takes an object and returns an iterator for it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111793,"byte_end":111844,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ This is typically a new iterator but if the argument","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111849,"byte_end":111905,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ is an iterator, this returns itself.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111910,"byte_end":111950,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":111955,"byte_end":111964,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119731,"byte_end":119737,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"PyBool","qualname":"::objects::boolobject::PyBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `bool`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `bool`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119688,"byte_end":119719,"line_start":7,"line_end":7,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119909,"byte_end":119912,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"get","qualname":"<PyBool>::get","value":"pub fn get(Python, bool) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Depending on `val`, returns `py.True()` or `py.False()`.\n","sig":null,"attributes":[{"value":"/ Depending on `val`, returns `py.True()` or `py.False()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119823,"byte_end":119883,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119888,"byte_end":119897,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":120114,"byte_end":120121,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"is_true","qualname":"<PyBool>::is_true","value":"pub fn is_true(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether this boolean is `true`.\n","sig":null,"attributes":[{"value":"/ Gets whether this boolean is `true`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":120048,"byte_end":120088,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":120093,"byte_end":120102,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128536,"byte_end":128545,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"PyCapsule","qualname":"::objects::capsule::PyCapsule","value":"","parent":null,"children":[],"decl_id":null,"docs":" Capsules are the preferred way to export/import C APIs between extension modules,\n see [Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#using-capsules).","sig":null,"attributes":[{"value":"/ Capsules are the preferred way to export/import C APIs between extension modules,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":121997,"byte_end":122082,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ see [Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#using-capsules).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122083,"byte_end":122202,"line_start":13,"line_end":13,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122203,"byte_end":122206,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ In particular, capsules can be very useful to start adding Rust extensions besides","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122207,"byte_end":122293,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ existing traditional C ones, be it for gradual rewrites or to extend with new functionality.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122294,"byte_end":122390,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ They can also be used for interaction between independently compiled Rust extensions if needed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122391,"byte_end":122490,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122491,"byte_end":122494,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Capsules can point to data, usually static arrays of constants and function pointers,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122495,"byte_end":122584,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ or to function pointers directly. These two cases have to be handled differently in Rust,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122585,"byte_end":122678,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ and the latter is possible only for architectures were data and function pointers have","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122679,"byte_end":122769,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ the same sizes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122770,"byte_end":122789,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122790,"byte_end":122793,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122794,"byte_end":122808,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ ## Using a capsule defined in another extension module","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122809,"byte_end":122867,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ This retrieves and use one of the simplest capsules in the Python standard library, found in","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122868,"byte_end":122964,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ the `unicodedata` module. The C API enclosed in this capsule is the same for all Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":122965,"byte_end":123056,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ versions supported by this crate. This is not the case of all capsules from the standard","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123057,"byte_end":123149,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ library. For instance the `struct` referenced by `datetime.datetime_CAPI` gets a new member","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123150,"byte_end":123245,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/ in version 3.7.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123246,"byte_end":123265,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123266,"byte_end":123269,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note: this example is a lower-level version of the [`py_capsule!`] example. Only the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123270,"byte_end":123358,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ capsule retrieval actually differs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123359,"byte_end":123398,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123399,"byte_end":123406,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use cpython::{Python, PyCapsule};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123407,"byte_end":123444,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ use libc::{c_void, c_char, c_int};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123445,"byte_end":123483,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ use std::ffi::{CStr, CString};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123484,"byte_end":123518,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123519,"byte_end":123536,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ use std::ptr::null;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123537,"byte_end":123560,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123561,"byte_end":123564,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[allow(non_camel_case_types)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123565,"byte_end":123599,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ type Py_UCS4 = u32;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123600,"byte_end":123623,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ const UNICODE_NAME_MAXLEN: usize = 256;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123624,"byte_end":123667,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123668,"byte_end":123671,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123672,"byte_end":123686,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ pub struct unicode_name_CAPI {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123687,"byte_end":123721,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/     // the `ucd` signature arguments are actually optional (can be `NULL`) FFI PyObject","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123722,"byte_end":123813,"line_start":47,"line_end":47,"column_start":1,"column_end":92}},{"value":"/     // pointers used to pass alternate (former) versions of Unicode data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123814,"byte_end":123891,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/     // We won't need to use them with an actual value in these examples, so it's enough to","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123892,"byte_end":123986,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/     // specify them as `*const c_void`, and it spares us a direct reference to the lower","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":123987,"byte_end":124079,"line_start":50,"line_end":50,"column_start":1,"column_end":93}},{"value":"/     // level Python FFI bindings.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124080,"byte_end":124117,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/     size: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124118,"byte_end":124138,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/     getname: unsafe extern \"C\" fn(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124139,"byte_end":124177,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/         ucd: *const c_void,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124178,"byte_end":124209,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         code: Py_UCS4,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124210,"byte_end":124236,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/         buffer: *const c_char,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124237,"byte_end":124271,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/         buflen: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124272,"byte_end":124298,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/         with_alias_and_seq: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124299,"byte_end":124337,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/     ) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124338,"byte_end":124357,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/     getcode: unsafe extern \"C\" fn(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124358,"byte_end":124396,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/         ucd: *const c_void,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124397,"byte_end":124428,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/         name: *const c_char,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124429,"byte_end":124461,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/         namelen: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124462,"byte_end":124489,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/         code: *const Py_UCS4,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124490,"byte_end":124523,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/     ) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124524,"byte_end":124543,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124544,"byte_end":124549,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124550,"byte_end":124553,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124554,"byte_end":124585,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ pub enum UnicodeDataError {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124586,"byte_end":124617,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     InvalidCode,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124618,"byte_end":124638,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/     UnknownName,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124639,"byte_end":124659,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124660,"byte_end":124665,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124666,"byte_end":124669,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ impl unicode_name_CAPI {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124670,"byte_end":124698,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/     pub fn get_name(&self, code: Py_UCS4) -> Result<CString, UnicodeDataError> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124699,"byte_end":124783,"line_start":75,"line_end":75,"column_start":1,"column_end":85}},{"value":"/         let mut buf: Vec<c_char> = Vec::with_capacity(UNICODE_NAME_MAXLEN);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124784,"byte_end":124863,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/         let buf_ptr = buf.as_mut_ptr();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124864,"byte_end":124907,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/         if unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124908,"byte_end":124931,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/           ((*self).getname)(null(), code, buf_ptr, UNICODE_NAME_MAXLEN as c_int, 0)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":124932,"byte_end":125019,"line_start":79,"line_end":79,"column_start":1,"column_end":88}},{"value":"/         } != 1 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125020,"byte_end":125040,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/             return Err(UnicodeDataError::InvalidCode);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125041,"byte_end":125099,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125100,"byte_end":125113,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/         mem::forget(buf);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125114,"byte_end":125143,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/         Ok(unsafe { CString::from_raw(buf_ptr) })","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125144,"byte_end":125197,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125198,"byte_end":125207,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125208,"byte_end":125211,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     pub fn get_code(&self, name: &CStr) -> Result<Py_UCS4, UnicodeDataError> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125212,"byte_end":125294,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/         let namelen = name.to_bytes().len() as c_int;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125295,"byte_end":125352,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/         let mut code: [Py_UCS4; 1] = [0; 1];","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125353,"byte_end":125401,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/         if unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125402,"byte_end":125425,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/             ((*self).getcode)(null(), name.as_ptr(), namelen, code.as_mut_ptr())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125426,"byte_end":125510,"line_start":91,"line_end":91,"column_start":1,"column_end":85}},{"value":"/         } != 1 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125511,"byte_end":125531,"line_start":92,"line_end":92,"column_start":1,"column_end":21}},{"value":"/             return Err(UnicodeDataError::UnknownName);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125532,"byte_end":125590,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125591,"byte_end":125604,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/         Ok(code[0])","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125605,"byte_end":125628,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125629,"byte_end":125638,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125639,"byte_end":125644,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125645,"byte_end":125648,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125649,"byte_end":125685,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/ let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125686,"byte_end":125712,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125713,"byte_end":125716,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let capi: &unicode_name_CAPI = unsafe {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125717,"byte_end":125760,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/     PyCapsule::import_data(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125761,"byte_end":125792,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/         py,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125793,"byte_end":125808,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/         CStr::from_bytes_with_nul_unchecked(b\"unicodedata.ucnhash_CAPI\\0\"),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125809,"byte_end":125888,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/     )","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125889,"byte_end":125898,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125899,"byte_end":125904,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ .unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125905,"byte_end":125919,"line_start":108,"line_end":108,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125920,"byte_end":125923,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(capi.get_name(32).unwrap().to_str(), Ok(\"SPACE\"));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125924,"byte_end":125989,"line_start":110,"line_end":110,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(capi.get_name(0), Err(UnicodeDataError::InvalidCode));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":125990,"byte_end":126059,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126060,"byte_end":126063,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126064,"byte_end":126079,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"/     capi.get_code(CStr::from_bytes_with_nul(b\"COMMA\\0\").unwrap()),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126080,"byte_end":126150,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/     Ok(44)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126151,"byte_end":126165,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126166,"byte_end":126172,"line_start":116,"line_end":116,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126173,"byte_end":126188,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/     capi.get_code(CStr::from_bytes_with_nul(b\"\\0\").unwrap()),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126189,"byte_end":126254,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"/     Err(UnicodeDataError::UnknownName)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126255,"byte_end":126297,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126298,"byte_end":126304,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126305,"byte_end":126312,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126313,"byte_end":126316,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Creating a capsule from Rust","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126317,"byte_end":126352,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/ In this example, we enclose some data and a function in a capsule, using an intermediate","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126353,"byte_end":126445,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ `struct` as enclosing type, then retrieve them back and use them.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126446,"byte_end":126515,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126516,"byte_end":126519,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Warning: you definitely need to declare the data as `static`. If it's","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126520,"byte_end":126593,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ only `const`, it's possible it would get cloned elsewhere, with the orginal","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126594,"byte_end":126673,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ location being deallocated before it's actually used from another Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126674,"byte_end":126750,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ extension.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126751,"byte_end":126765,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126766,"byte_end":126769,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126770,"byte_end":126773,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126774,"byte_end":126781,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use libc::{c_void, c_int};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126782,"byte_end":126812,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ use cpython::{PyCapsule, Python};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126813,"byte_end":126850,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use std::ffi::{CStr, CString};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126851,"byte_end":126885,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126886,"byte_end":126889,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126890,"byte_end":126904,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/ struct CapsData {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126905,"byte_end":126926,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/     value: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126927,"byte_end":126948,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/     fun: fn(c_int, c_int) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126949,"byte_end":126988,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126989,"byte_end":126994,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126995,"byte_end":126998,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ fn add(a: c_int, b: c_int) -> c_int {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":126999,"byte_end":127040,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127041,"byte_end":127054,"line_start":145,"line_end":145,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127055,"byte_end":127060,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127061,"byte_end":127064,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ static DATA: CapsData = CapsData{value: 1, fun: add};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127065,"byte_end":127122,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127123,"byte_end":127126,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127127,"byte_end":127142,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/     let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127143,"byte_end":127183,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/     let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127184,"byte_end":127214,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/     let caps = PyCapsule::new_data(py, &DATA, \"somemod.capsdata\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127215,"byte_end":127294,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127295,"byte_end":127298,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/     let retrieved: &CapsData = unsafe {caps.data_ref(\"somemod.capsdata\")}.unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127299,"byte_end":127386,"line_start":155,"line_end":155,"column_start":1,"column_end":88}},{"value":"/     assert_eq!(retrieved.value, 1);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127387,"byte_end":127426,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/     assert_eq!((retrieved.fun)(2 as c_int, 3 as c_int), 5);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127427,"byte_end":127490,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127491,"byte_end":127496,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127497,"byte_end":127504,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127505,"byte_end":127508,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Of course, a more realistic example would be to store the capsule in a Python module,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127509,"byte_end":127598,"line_start":161,"line_end":161,"column_start":1,"column_end":90}},{"value":"/ allowing another extension (possibly foreign) to retrieve and use it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127599,"byte_end":127672,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ Note that in that case, the capsule `name` must be full dotted name of the capsule object,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127673,"byte_end":127767,"line_start":163,"line_end":163,"column_start":1,"column_end":95}},{"value":"/ as we're doing here.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127768,"byte_end":127792,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127793,"byte_end":127800,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ # use libc::c_int;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127801,"byte_end":127823,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/ # use cpython::{PyCapsule, py_module_initializer};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127824,"byte_end":127878,"line_start":167,"line_end":167,"column_start":1,"column_end":55}},{"value":"/ # #[repr(C)]","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127879,"byte_end":127895,"line_start":168,"line_end":168,"column_start":1,"column_end":17}},{"value":"/ # struct CapsData {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127896,"byte_end":127919,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/ #     value: c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127920,"byte_end":127943,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"/ #     fun: fn(c_int, c_int) -> c_int,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127944,"byte_end":127985,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127986,"byte_end":127993,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # fn add(a: c_int, b: c_int) -> c_int {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":127994,"byte_end":128037,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/ #     a + b","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128038,"byte_end":128053,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128054,"byte_end":128061,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ # static DATA: CapsData = CapsData{value: 1, fun: add};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128062,"byte_end":128121,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/ py_module_initializer!(somemod, |py, m| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128122,"byte_end":128167,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/   m.add(py, \"__doc__\", \"A module holding a capsule\")?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128168,"byte_end":128226,"line_start":178,"line_end":178,"column_start":1,"column_end":59}},{"value":"/   m.add(py, \"capsdata\", PyCapsule::new_data(py, &DATA, \"somemod.capsdata\").unwrap())?;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128227,"byte_end":128317,"line_start":179,"line_end":179,"column_start":1,"column_end":91}},{"value":"/   Ok(())","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128318,"byte_end":128330,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128331,"byte_end":128338,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128339,"byte_end":128357,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128358,"byte_end":128365,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ Another Rust extension could then declare `CapsData` and use `PyCapsule::import_data` to","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128366,"byte_end":128458,"line_start":184,"line_end":184,"column_start":1,"column_end":93}},{"value":"/ fetch it back.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128459,"byte_end":128477,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128478,"byte_end":128481,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`py_capsule!`]: macro.py_capsule.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":128482,"byte_end":128524,"line_start":187,"line_end":187,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141064,"byte_end":141075,"line_start":531,"line_end":531,"column_start":19,"column_end":30},"name":"import_data","qualname":"<PyCapsule>::import_data","value":"pub unsafe fn import_data<'a, T>(Python, &CStr) -> PyResult<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the contents of a capsule pointing to some data as a reference.","sig":null,"attributes":[{"value":"/ Retrieve the contents of a capsule pointing to some data as a reference.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140465,"byte_end":140541,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140546,"byte_end":140549,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The retrieved data would typically be an array of static data and/or function pointers.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140554,"byte_end":140645,"line_start":522,"line_end":522,"column_start":5,"column_end":96}},{"value":"/ This method doesn't work for standalone function pointers.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140650,"byte_end":140712,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140717,"byte_end":140720,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140725,"byte_end":140737,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/ This method is unsafe, because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140742,"byte_end":140776,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ - nothing guarantees that the `T` type is appropriate for the data referenced by the capsule","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140781,"byte_end":140877,"line_start":527,"line_end":527,"column_start":5,"column_end":101}},{"value":"/   pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140882,"byte_end":140895,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ - the returned lifetime doesn't guarantee either to cover the actual lifetime of the data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140900,"byte_end":140993,"line_start":529,"line_end":529,"column_start":5,"column_end":98}},{"value":"/   (although capsule data is usually static)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140998,"byte_end":141045,"line_start":530,"line_end":530,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141629,"byte_end":141635,"line_start":542,"line_end":542,"column_start":12,"column_end":18},"name":"import","qualname":"<PyCapsule>::import","value":"pub fn import(Python, &CStr) -> PyResult<*const c_void>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the contents of a capsule as a void pointer by its name.","sig":null,"attributes":[{"value":"/ Retrieves the contents of a capsule as a void pointer by its name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141192,"byte_end":141262,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141267,"byte_end":141270,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This is suitable in particular for later conversion as a function pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141275,"byte_end":141352,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ with `mem::transmute`, for architectures where data and function pointers have","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141357,"byte_end":141439,"line_start":538,"line_end":538,"column_start":5,"column_end":87}},{"value":"/ the same size (see details about this in the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141444,"byte_end":141492,"line_start":539,"line_end":539,"column_start":5,"column_end":53}},{"value":"/ [documentation](https://doc.rust-lang.org/std/mem/fn.transmute.html#examples)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141497,"byte_end":141578,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ of the Rust standard library).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141583,"byte_end":141617,"line_start":541,"line_end":541,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142124,"byte_end":142132,"line_start":557,"line_end":557,"column_start":12,"column_end":20},"name":"new_data","qualname":"<PyCapsule>::new_data","value":"pub fn new_data<T, N>(Python, &'static T, N) -> Result<Self, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to create a capsule for some data","sig":null,"attributes":[{"value":"/ Convenience method to create a capsule for some data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141876,"byte_end":141932,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141937,"byte_end":141940,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The encapsuled data may be an array of functions, but it can't be itself a","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":141945,"byte_end":142023,"line_start":552,"line_end":552,"column_start":5,"column_end":83}},{"value":"/ function directly.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142028,"byte_end":142050,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142055,"byte_end":142058,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ May panic when running out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142063,"byte_end":142104,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142109,"byte_end":142112,"line_start":556,"line_end":556,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142862,"byte_end":142865,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"new","qualname":"<PyCapsule>::new","value":"pub fn new<N>(Python, *const c_void, N) -> Result<Self, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new capsule from a raw void pointer","sig":null,"attributes":[{"value":"/ Creates a new capsule from a raw void pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142320,"byte_end":142369,"line_start":564,"line_end":564,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142374,"byte_end":142377,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This is suitable in particular to store a function pointer in a capsule. These","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142382,"byte_end":142464,"line_start":566,"line_end":566,"column_start":5,"column_end":87}},{"value":"/ can be obtained simply by a simple cast:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142469,"byte_end":142513,"line_start":567,"line_end":567,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142518,"byte_end":142521,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142526,"byte_end":142533,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use libc::c_void;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142538,"byte_end":142559,"line_start":570,"line_end":570,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142564,"byte_end":142567,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ extern \"C\" fn inc(a: i32) -> i32 {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142572,"byte_end":142610,"line_start":572,"line_end":572,"column_start":5,"column_end":43}},{"value":"/     a + 1","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142615,"byte_end":142628,"line_start":573,"line_end":573,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142633,"byte_end":142638,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142643,"byte_end":142646,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142651,"byte_end":142666,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     let ptr = inc as *const c_void;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142671,"byte_end":142710,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142715,"byte_end":142720,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142725,"byte_end":142732,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142737,"byte_end":142740,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142745,"byte_end":142757,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/ This method returns `NulError` if `name` contains a 0 byte (see also `CString::new`)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":142762,"byte_end":142850,"line_start":582,"line_end":582,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144167,"byte_end":144175,"line_start":614,"line_end":614,"column_start":19,"column_end":27},"name":"data_ref","qualname":"<PyCapsule>::data_ref","value":"pub unsafe fn data_ref<'a, T, N>(&Self, N) -> Result<&'a T, NulError> where\nN: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the capsule data.","sig":null,"attributes":[{"value":"/ Returns a reference to the capsule data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143429,"byte_end":143473,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143478,"byte_end":143481,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The name must match exactly the one given at capsule creation time (see `new_data`) and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143486,"byte_end":143577,"line_start":602,"line_end":602,"column_start":5,"column_end":96}},{"value":"/ is converted to a C string under the hood. If that's too much overhead, consider using","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143582,"byte_end":143672,"line_start":603,"line_end":603,"column_start":5,"column_end":95}},{"value":"/ `data_ref_cstr()` or caching strategies.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143677,"byte_end":143721,"line_start":604,"line_end":604,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143726,"byte_end":143729,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ This is unsafe, because","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143734,"byte_end":143761,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/ - nothing guarantees that the `T` type is appropriate for the data referenced by the capsule","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143766,"byte_end":143862,"line_start":607,"line_end":607,"column_start":5,"column_end":101}},{"value":"/   pointer","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143867,"byte_end":143880,"line_start":608,"line_end":608,"column_start":5,"column_end":18}},{"value":"/ - the returned lifetime doesn't guarantee either to cover the actual lifetime of the data","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143885,"byte_end":143978,"line_start":609,"line_end":609,"column_start":5,"column_end":98}},{"value":"/   (although capsule data is usually static)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":143983,"byte_end":144030,"line_start":610,"line_end":610,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144035,"byte_end":144038,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144043,"byte_end":144055,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/ This method returns `NulError` if `name` contains a 0 byte (see also `CString::new`)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144060,"byte_end":144148,"line_start":613,"line_end":613,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144637,"byte_end":144650,"line_start":626,"line_end":626,"column_start":19,"column_end":32},"name":"data_ref_cstr","qualname":"<PyCapsule>::data_ref_cstr","value":"pub unsafe fn data_ref_cstr<'a, T>(&Self, &CStr) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the capsule data.","sig":null,"attributes":[{"value":"/ Returns a reference to the capsule data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144335,"byte_end":144379,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144384,"byte_end":144387,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This is identical to `data_ref`, except for the name passing. This allows to use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144392,"byte_end":144476,"line_start":623,"line_end":623,"column_start":5,"column_end":89}},{"value":"/ lower level constructs without overhead, such as `CStr::from_bytes_with_nul_unchecked`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144481,"byte_end":144571,"line_start":624,"line_end":624,"column_start":5,"column_end":95}},{"value":"/ or the `cstr!` macro of `rust-cpython`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":144576,"byte_end":144618,"line_start":625,"line_end":625,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146141,"byte_end":146147,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"PyDict","qualname":"::objects::dict::PyDict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `dict`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `dict`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146098,"byte_end":146129,"line_start":27,"line_end":27,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146334,"byte_end":146337,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<PyDict>::new","value":"pub fn new(Python) -> PyDict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty dictionary.","sig":null,"attributes":[{"value":"/ Creates a new empty dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146233,"byte_end":146268,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146273,"byte_end":146276,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ May panic when running out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146281,"byte_end":146322,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146583,"byte_end":146587,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"copy","qualname":"<PyDict>::copy","value":"pub fn copy(&Self, Python) -> PyResult<PyDict>","parent":null,"children":[],"decl_id":null,"docs":" Return a new dictionary that contains the same key-value pairs as self.\n Corresponds to `dict(self)` in Python.\n","sig":null,"attributes":[{"value":"/ Return a new dictionary that contains the same key-value pairs as self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146449,"byte_end":146524,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ Corresponds to `dict(self)` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146529,"byte_end":146571,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146812,"byte_end":146817,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"clear","qualname":"<PyDict>::clear","value":"pub fn clear(&Self, Python)","parent":null,"children":[],"decl_id":null,"docs":" Empty an existing dictionary of all key-value pairs.\n","sig":null,"attributes":[{"value":"/ Empty an existing dictionary of all key-value pairs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146730,"byte_end":146786,"line_start":46,"line_end":46,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146791,"byte_end":146800,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147034,"byte_end":147037,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"len","qualname":"<PyDict>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of items in the dictionary.\n This is equivalent to len(p) on a dictionary.\n","sig":null,"attributes":[{"value":"/ Return the number of items in the dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146905,"byte_end":146954,"line_start":52,"line_end":52,"column_start":5,"column_end":54}},{"value":"/ This is equivalent to len(p) on a dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146959,"byte_end":147008,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147013,"byte_end":147022,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147280,"byte_end":147288,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"contains","qualname":"<PyDict>::contains","value":"pub fn contains<K>(&Self, Python, K) -> PyResult<bool> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if the dictionary contains the specified key.\n This is equivalent to the Python expression `key in self`.\n","sig":null,"attributes":[{"value":"/ Determine if the dictionary contains the specified key.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147142,"byte_end":147201,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ This is equivalent to the Python expression `key in self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147206,"byte_end":147268,"line_start":60,"line_end":60,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147752,"byte_end":147760,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyDict>::get_item","value":"pub fn get_item<K>(&Self, Python, K) -> Option<PyObject> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets an item from the dictionary.\n Returns None if the item is not present, or if an error occurs.\n","sig":null,"attributes":[{"value":"/ Gets an item from the dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147631,"byte_end":147668,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/ Returns None if the item is not present, or if an error occurs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":147673,"byte_end":147740,"line_start":75,"line_end":75,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148120,"byte_end":148128,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PyDict>::set_item","value":"pub fn set_item<K, V>(&Self, Python, K, V) -> PyResult<()> where\nK: ToPyObject, V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Sets an item value.\n This is equivalent to the Python expression `self[key] = value`.\n","sig":null,"attributes":[{"value":"/ Sets an item value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148012,"byte_end":148035,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/ This is equivalent to the Python expression `self[key] = value`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148040,"byte_end":148108,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148585,"byte_end":148593,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"del_item","qualname":"<PyDict>::del_item","value":"pub fn del_item<K>(&Self, Python, K) -> PyResult<()> where K: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Deletes an item.\n This is equivalent to the Python expression `del self[key]`.\n","sig":null,"attributes":[{"value":"/ Deletes an item.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148484,"byte_end":148504,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ This is equivalent to the Python expression `del self[key]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148509,"byte_end":148573,"line_start":100,"line_end":100,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":148939,"byte_end":148949,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"items_list","qualname":"<PyDict>::items_list","value":"pub fn items_list(&Self, Python) -> PyList","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":149158,"byte_end":149163,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"items","qualname":"<PyDict>::items","value":"pub fn items(&Self, Python) -> Vec<(PyObject, PyObject)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of (key,value) pairs in this dictionary.\n","sig":null,"attributes":[{"value":"/ Returns the list of (key,value) pairs in this dictionary.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":149085,"byte_end":149146,"line_start":116,"line_end":116,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exc","qualname":"::objects::exc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":2535},{"krate":0,"index":2552},{"krate":0,"index":2559},{"krate":0,"index":2565},{"krate":0,"index":2546},{"krate":0,"index":2538},{"krate":0,"index":2544},{"krate":0,"index":2568},{"krate":0,"index":2585},{"krate":0,"index":2592},{"krate":0,"index":2598},{"krate":0,"index":2579},{"krate":0,"index":2571},{"krate":0,"index":2577},{"krate":0,"index":2601},{"krate":0,"index":2618},{"krate":0,"index":2625},{"krate":0,"index":2631},{"krate":0,"index":2612},{"krate":0,"index":2604},{"krate":0,"index":2610},{"krate":0,"index":2634},{"krate":0,"index":2651},{"krate":0,"index":2658},{"krate":0,"index":2664},{"krate":0,"index":2645},{"krate":0,"index":2637},{"krate":0,"index":2643},{"krate":0,"index":2667},{"krate":0,"index":2684},{"krate":0,"index":2691},{"krate":0,"index":2697},{"krate":0,"index":2678},{"krate":0,"index":2670},{"krate":0,"index":2676},{"krate":0,"index":2700},{"krate":0,"index":2717},{"krate":0,"index":2724},{"krate":0,"index":2730},{"krate":0,"index":2711},{"krate":0,"index":2703},{"krate":0,"index":2709},{"krate":0,"index":2733},{"krate":0,"index":2750},{"krate":0,"index":2757},{"krate":0,"index":2763},{"krate":0,"index":2744},{"krate":0,"index":2736},{"krate":0,"index":2742},{"krate":0,"index":2766},{"krate":0,"index":2783},{"krate":0,"index":2790},{"krate":0,"index":2796},{"krate":0,"index":2777},{"krate":0,"index":2769},{"krate":0,"index":2775},{"krate":0,"index":2799},{"krate":0,"index":2816},{"krate":0,"index":2823},{"krate":0,"index":2829},{"krate":0,"index":2810},{"krate":0,"index":2802},{"krate":0,"index":2808},{"krate":0,"index":2832},{"krate":0,"index":2849},{"krate":0,"index":2856},{"krate":0,"index":2862},{"krate":0,"index":2843},{"krate":0,"index":2835},{"krate":0,"index":2841},{"krate":0,"index":2865},{"krate":0,"index":2882},{"krate":0,"index":2889},{"krate":0,"index":2895},{"krate":0,"index":2876},{"krate":0,"index":2868},{"krate":0,"index":2874},{"krate":0,"index":2898},{"krate":0,"index":2915},{"krate":0,"index":2922},{"krate":0,"index":2928},{"krate":0,"index":2909},{"krate":0,"index":2901},{"krate":0,"index":2907},{"krate":0,"index":2931},{"krate":0,"index":2948},{"krate":0,"index":2955},{"krate":0,"index":2961},{"krate":0,"index":2942},{"krate":0,"index":2934},{"krate":0,"index":2940},{"krate":0,"index":2964},{"krate":0,"index":2981},{"krate":0,"index":2988},{"krate":0,"index":2994},{"krate":0,"index":2975},{"krate":0,"index":2967},{"krate":0,"index":2973},{"krate":0,"index":2997},{"krate":0,"index":3014},{"krate":0,"index":3021},{"krate":0,"index":3027},{"krate":0,"index":3008},{"krate":0,"index":3000},{"krate":0,"index":3006},{"krate":0,"index":3030},{"krate":0,"index":3047},{"krate":0,"index":3054},{"krate":0,"index":3060},{"krate":0,"index":3041},{"krate":0,"index":3033},{"krate":0,"index":3039},{"krate":0,"index":3063},{"krate":0,"index":3080},{"krate":0,"index":3087},{"krate":0,"index":3093},{"krate":0,"index":3074},{"krate":0,"index":3066},{"krate":0,"index":3072},{"krate":0,"index":3096},{"krate":0,"index":3113},{"krate":0,"index":3120},{"krate":0,"index":3126},{"krate":0,"index":3107},{"krate":0,"index":3099},{"krate":0,"index":3105},{"krate":0,"index":3129},{"krate":0,"index":3146},{"krate":0,"index":3153},{"krate":0,"index":3159},{"krate":0,"index":3140},{"krate":0,"index":3132},{"krate":0,"index":3138},{"krate":0,"index":3162},{"krate":0,"index":3179},{"krate":0,"index":3186},{"krate":0,"index":3192},{"krate":0,"index":3173},{"krate":0,"index":3165},{"krate":0,"index":3171},{"krate":0,"index":3195},{"krate":0,"index":3212},{"krate":0,"index":3219},{"krate":0,"index":3225},{"krate":0,"index":3206},{"krate":0,"index":3198},{"krate":0,"index":3204},{"krate":0,"index":3228},{"krate":0,"index":3245},{"krate":0,"index":3252},{"krate":0,"index":3258},{"krate":0,"index":3239},{"krate":0,"index":3231},{"krate":0,"index":3237},{"krate":0,"index":3261},{"krate":0,"index":3278},{"krate":0,"index":3285},{"krate":0,"index":3291},{"krate":0,"index":3272},{"krate":0,"index":3264},{"krate":0,"index":3270},{"krate":0,"index":3294},{"krate":0,"index":3311},{"krate":0,"index":3318},{"krate":0,"index":3324},{"krate":0,"index":3305},{"krate":0,"index":3297},{"krate":0,"index":3303},{"krate":0,"index":3327},{"krate":0,"index":3344},{"krate":0,"index":3351},{"krate":0,"index":3357},{"krate":0,"index":3338},{"krate":0,"index":3330},{"krate":0,"index":3336},{"krate":0,"index":3360},{"krate":0,"index":3377},{"krate":0,"index":3384},{"krate":0,"index":3390},{"krate":0,"index":3371},{"krate":0,"index":3363},{"krate":0,"index":3369},{"krate":0,"index":3393},{"krate":0,"index":3410},{"krate":0,"index":3417},{"krate":0,"index":3423},{"krate":0,"index":3404},{"krate":0,"index":3396},{"krate":0,"index":3402},{"krate":0,"index":3426},{"krate":0,"index":3443},{"krate":0,"index":3450},{"krate":0,"index":3456},{"krate":0,"index":3437},{"krate":0,"index":3429},{"krate":0,"index":3435},{"krate":0,"index":3459},{"krate":0,"index":3476},{"krate":0,"index":3483},{"krate":0,"index":3489},{"krate":0,"index":3470},{"krate":0,"index":3462},{"krate":0,"index":3468},{"krate":0,"index":3492},{"krate":0,"index":3509},{"krate":0,"index":3516},{"krate":0,"index":3522},{"krate":0,"index":3503},{"krate":0,"index":3495},{"krate":0,"index":3501},{"krate":0,"index":3525},{"krate":0,"index":3542},{"krate":0,"index":3549},{"krate":0,"index":3555},{"krate":0,"index":3536},{"krate":0,"index":3528},{"krate":0,"index":3534},{"krate":0,"index":3558},{"krate":0,"index":3575},{"krate":0,"index":3582},{"krate":0,"index":3588},{"krate":0,"index":3569},{"krate":0,"index":3561},{"krate":0,"index":3567},{"krate":0,"index":3591},{"krate":0,"index":3608},{"krate":0,"index":3615},{"krate":0,"index":3621},{"krate":0,"index":3602},{"krate":0,"index":3594},{"krate":0,"index":3600},{"krate":0,"index":3624},{"krate":0,"index":3641},{"krate":0,"index":3648},{"krate":0,"index":3654},{"krate":0,"index":3635},{"krate":0,"index":3627},{"krate":0,"index":3633},{"krate":0,"index":3657},{"krate":0,"index":3674},{"krate":0,"index":3681},{"krate":0,"index":3687},{"krate":0,"index":3668},{"krate":0,"index":3660},{"krate":0,"index":3666},{"krate":0,"index":3690},{"krate":0,"index":3707},{"krate":0,"index":3714},{"krate":0,"index":3720},{"krate":0,"index":3701},{"krate":0,"index":3693},{"krate":0,"index":3699},{"krate":0,"index":3723},{"krate":0,"index":3740},{"krate":0,"index":3747},{"krate":0,"index":3753},{"krate":0,"index":3734},{"krate":0,"index":3726},{"krate":0,"index":3732},{"krate":0,"index":3756},{"krate":0,"index":3773},{"krate":0,"index":3780},{"krate":0,"index":3786},{"krate":0,"index":3767},{"krate":0,"index":3759},{"krate":0,"index":3765},{"krate":0,"index":3789},{"krate":0,"index":3806},{"krate":0,"index":3813},{"krate":0,"index":3819},{"krate":0,"index":3800},{"krate":0,"index":3792},{"krate":0,"index":3798},{"krate":0,"index":3822},{"krate":0,"index":3839},{"krate":0,"index":3846},{"krate":0,"index":3852},{"krate":0,"index":3833},{"krate":0,"index":3825},{"krate":0,"index":3831},{"krate":0,"index":3855},{"krate":0,"index":3872},{"krate":0,"index":3879},{"krate":0,"index":3885},{"krate":0,"index":3866},{"krate":0,"index":3858},{"krate":0,"index":3864},{"krate":0,"index":3888},{"krate":0,"index":3905},{"krate":0,"index":3912},{"krate":0,"index":3918},{"krate":0,"index":3899},{"krate":0,"index":3891},{"krate":0,"index":3897},{"krate":0,"index":3921},{"krate":0,"index":3938},{"krate":0,"index":3945},{"krate":0,"index":3951},{"krate":0,"index":3932},{"krate":0,"index":3924},{"krate":0,"index":3930},{"krate":0,"index":3954},{"krate":0,"index":3971},{"krate":0,"index":3978},{"krate":0,"index":3984},{"krate":0,"index":3965},{"krate":0,"index":3957},{"krate":0,"index":3963},{"krate":0,"index":3987},{"krate":0,"index":4004},{"krate":0,"index":4011},{"krate":0,"index":4017},{"krate":0,"index":3998},{"krate":0,"index":3990},{"krate":0,"index":3996},{"krate":0,"index":4020},{"krate":0,"index":4037},{"krate":0,"index":4044},{"krate":0,"index":4050},{"krate":0,"index":4031},{"krate":0,"index":4023},{"krate":0,"index":4029},{"krate":0,"index":930}],"decl_id":null,"docs":" This module contains the python exception types.\n","sig":null,"attributes":[{"value":"/ This module contains the python exception types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":156375,"byte_end":156427,"line_start":19,"line_end":19,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158568,"byte_end":158581,"line_start":85,"line_end":85,"column_start":11,"column_end":24},"name":"BaseException","qualname":"::objects::exc::BaseException","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158615,"byte_end":158624,"line_start":86,"line_end":86,"column_start":11,"column_end":20},"name":"Exception","qualname":"::objects::exc::Exception","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158734,"byte_end":158745,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"LookupError","qualname":"::objects::exc::LookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158777,"byte_end":158791,"line_start":90,"line_end":90,"column_start":11,"column_end":25},"name":"AssertionError","qualname":"::objects::exc::AssertionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158826,"byte_end":158840,"line_start":91,"line_end":91,"column_start":11,"column_end":25},"name":"AttributeError","qualname":"::objects::exc::AttributeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158907,"byte_end":158922,"line_start":93,"line_end":93,"column_start":11,"column_end":26},"name":"BlockingIOError","qualname":"::objects::exc::BlockingIOError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":158990,"byte_end":159005,"line_start":95,"line_end":95,"column_start":11,"column_end":26},"name":"BrokenPipeError","qualname":"::objects::exc::BrokenPipeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159073,"byte_end":159090,"line_start":97,"line_end":97,"column_start":11,"column_end":28},"name":"ChildProcessError","qualname":"::objects::exc::ChildProcessError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159160,"byte_end":159182,"line_start":99,"line_end":99,"column_start":11,"column_end":33},"name":"ConnectionAbortedError","qualname":"::objects::exc::ConnectionAbortedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159257,"byte_end":159272,"line_start":101,"line_end":101,"column_start":11,"column_end":26},"name":"ConnectionError","qualname":"::objects::exc::ConnectionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159340,"byte_end":159362,"line_start":103,"line_end":103,"column_start":11,"column_end":33},"name":"ConnectionRefusedError","qualname":"::objects::exc::ConnectionRefusedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159437,"byte_end":159457,"line_start":105,"line_end":105,"column_start":11,"column_end":31},"name":"ConnectionResetError","qualname":"::objects::exc::ConnectionResetError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2931},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159498,"byte_end":159506,"line_start":106,"line_end":106,"column_start":11,"column_end":19},"name":"EOFError","qualname":"::objects::exc::EOFError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159535,"byte_end":159551,"line_start":107,"line_end":107,"column_start":11,"column_end":27},"name":"EnvironmentError","qualname":"::objects::exc::EnvironmentError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159620,"byte_end":159635,"line_start":109,"line_end":109,"column_start":11,"column_end":26},"name":"FileExistsError","qualname":"::objects::exc::FileExistsError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159703,"byte_end":159720,"line_start":111,"line_end":111,"column_start":11,"column_end":28},"name":"FileNotFoundError","qualname":"::objects::exc::FileNotFoundError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159758,"byte_end":159776,"line_start":112,"line_end":112,"column_start":11,"column_end":29},"name":"FloatingPointError","qualname":"::objects::exc::FloatingPointError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159815,"byte_end":159822,"line_start":113,"line_end":113,"column_start":11,"column_end":18},"name":"IOError","qualname":"::objects::exc::IOError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159850,"byte_end":159861,"line_start":114,"line_end":114,"column_start":11,"column_end":22},"name":"ImportError","qualname":"::objects::exc::ImportError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159893,"byte_end":159903,"line_start":115,"line_end":115,"column_start":11,"column_end":21},"name":"IndexError","qualname":"::objects::exc::IndexError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":159966,"byte_end":159982,"line_start":117,"line_end":117,"column_start":11,"column_end":27},"name":"InterruptedError","qualname":"::objects::exc::InterruptedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160051,"byte_end":160068,"line_start":119,"line_end":119,"column_start":11,"column_end":28},"name":"IsADirectoryError","qualname":"::objects::exc::IsADirectoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160106,"byte_end":160114,"line_start":120,"line_end":120,"column_start":11,"column_end":19},"name":"KeyError","qualname":"::objects::exc::KeyError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160143,"byte_end":160160,"line_start":121,"line_end":121,"column_start":11,"column_end":28},"name":"KeyboardInterrupt","qualname":"::objects::exc::KeyboardInterrupt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160198,"byte_end":160209,"line_start":122,"line_end":122,"column_start":11,"column_end":22},"name":"MemoryError","qualname":"::objects::exc::MemoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160241,"byte_end":160250,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"NameError","qualname":"::objects::exc::NameError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160312,"byte_end":160330,"line_start":125,"line_end":125,"column_start":11,"column_end":29},"name":"NotADirectoryError","qualname":"::objects::exc::NotADirectoryError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160369,"byte_end":160388,"line_start":126,"line_end":126,"column_start":11,"column_end":30},"name":"NotImplementedError","qualname":"::objects::exc::NotImplementedError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160428,"byte_end":160435,"line_start":127,"line_end":127,"column_start":11,"column_end":18},"name":"OSError","qualname":"::objects::exc::OSError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160463,"byte_end":160476,"line_start":128,"line_end":128,"column_start":11,"column_end":24},"name":"OverflowError","qualname":"::objects::exc::OverflowError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160542,"byte_end":160557,"line_start":130,"line_end":130,"column_start":11,"column_end":26},"name":"PermissionError","qualname":"::objects::exc::PermissionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160625,"byte_end":160643,"line_start":132,"line_end":132,"column_start":11,"column_end":29},"name":"ProcessLookupError","qualname":"::objects::exc::ProcessLookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160682,"byte_end":160696,"line_start":133,"line_end":133,"column_start":11,"column_end":25},"name":"ReferenceError","qualname":"::objects::exc::ReferenceError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160731,"byte_end":160743,"line_start":134,"line_end":134,"column_start":11,"column_end":23},"name":"RuntimeError","qualname":"::objects::exc::RuntimeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160776,"byte_end":160787,"line_start":135,"line_end":135,"column_start":11,"column_end":22},"name":"SyntaxError","qualname":"::objects::exc::SyntaxError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160819,"byte_end":160830,"line_start":136,"line_end":136,"column_start":11,"column_end":22},"name":"SystemError","qualname":"::objects::exc::SystemError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160862,"byte_end":160872,"line_start":137,"line_end":137,"column_start":11,"column_end":21},"name":"SystemExit","qualname":"::objects::exc::SystemExit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160935,"byte_end":160947,"line_start":139,"line_end":139,"column_start":11,"column_end":23},"name":"TimeoutError","qualname":"::objects::exc::TimeoutError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":160980,"byte_end":160989,"line_start":140,"line_end":140,"column_start":11,"column_end":20},"name":"TypeError","qualname":"::objects::exc::TypeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3822},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161019,"byte_end":161029,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"ValueError","qualname":"::objects::exc::ValueError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3855},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161090,"byte_end":161102,"line_start":143,"line_end":143,"column_start":11,"column_end":23},"name":"WindowsError","qualname":"::objects::exc::WindowsError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161135,"byte_end":161152,"line_start":144,"line_end":144,"column_start":11,"column_end":28},"name":"ZeroDivisionError","qualname":"::objects::exc::ZeroDivisionError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161191,"byte_end":161202,"line_start":146,"line_end":146,"column_start":11,"column_end":22},"name":"BufferError","qualname":"::objects::exc::BufferError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161235,"byte_end":161253,"line_start":148,"line_end":148,"column_start":11,"column_end":29},"name":"UnicodeDecodeError","qualname":"::objects::exc::UnicodeDecodeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161292,"byte_end":161310,"line_start":149,"line_end":149,"column_start":11,"column_end":29},"name":"UnicodeEncodeError","qualname":"::objects::exc::UnicodeEncodeError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4020},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161349,"byte_end":161370,"line_start":150,"line_end":150,"column_start":11,"column_end":32},"name":"UnicodeTranslateError","qualname":"::objects::exc::UnicodeTranslateError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161440,"byte_end":161443,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<UnicodeDecodeError>::new","value":"pub fn new(Python, &CStr, &[u8], ops::Range<usize>, &CStr)\n-> PyResult<UnicodeDecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":162126,"byte_end":162134,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"new_utf8","qualname":"<UnicodeDecodeError>::new_utf8","value":"pub fn new_utf8(Python, &[u8], std::str::Utf8Error)\n-> PyResult<UnicodeDecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":163961,"byte_end":163971,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"PyIterator","qualname":"::objects::iterator::PyIterator","value":"PyIterator {  }","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"decl_id":null,"docs":" A python iterator object.","sig":null,"attributes":[{"value":"/ A python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":163778,"byte_end":163807,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":163808,"byte_end":163811,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Unlike other python objects, this class includes a `Python<'p>` token","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":163812,"byte_end":163885,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ so that PyIterator can implement the rust `Iterator` trait.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":163886,"byte_end":163949,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164121,"byte_end":164132,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"from_object","qualname":"<PyIterator>::from_object","value":"pub fn from_object(Python, PyObject)\n-> Result<PyIterator, PythonObjectDowncastError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a PyIterator from a Python iterator object.\n","sig":null,"attributes":[{"value":"/ Constructs a PyIterator from a Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164051,"byte_end":164109,"line_start":35,"line_end":35,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164599,"byte_end":164608,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"as_object","qualname":"<PyIterator>::as_object","value":"pub fn as_object(&Self) -> &PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python iterator object.\n","sig":null,"attributes":[{"value":"/ Gets the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164537,"byte_end":164573,"line_start":51,"line_end":51,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164578,"byte_end":164587,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164723,"byte_end":164734,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"into_object","qualname":"<PyIterator>::into_object","value":"pub fn into_object(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python iterator object.\n","sig":null,"attributes":[{"value":"/ Gets the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164661,"byte_end":164697,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164702,"byte_end":164711,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167532,"byte_end":167538,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"PyList","qualname":"::objects::list::PyList","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `list`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `list`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167489,"byte_end":167520,"line_start":25,"line_end":25,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167685,"byte_end":167688,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<PyList>::new","value":"pub fn new(Python, &[PyObject]) -> PyList","parent":null,"children":[],"decl_id":null,"docs":" Construct a new list with the given elements.\n","sig":null,"attributes":[{"value":"/ Construct a new list with the given elements.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167624,"byte_end":167673,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168193,"byte_end":168196,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<PyList>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of the list.\n","sig":null,"attributes":[{"value":"/ Gets the length of the list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168135,"byte_end":168167,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168172,"byte_end":168181,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168476,"byte_end":168484,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyList>::get_item","value":"pub fn get_item(&Self, Python, usize) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the item at the specified index.","sig":null,"attributes":[{"value":"/ Gets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168370,"byte_end":168411,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168416,"byte_end":168419,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168424,"byte_end":168464,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168915,"byte_end":168923,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PyList>::set_item","value":"pub fn set_item(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Sets the item at the specified index.","sig":null,"attributes":[{"value":"/ Sets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168809,"byte_end":168850,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168855,"byte_end":168858,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":168863,"byte_end":168903,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169236,"byte_end":169242,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"insert","qualname":"<PyList>::insert","value":"pub fn insert(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the specified index.","sig":null,"attributes":[{"value":"/ Inserts an item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169128,"byte_end":169171,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169176,"byte_end":169179,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169184,"byte_end":169224,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169558,"byte_end":169569,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"insert_item","qualname":"<PyList>::insert_item","value":"pub fn insert_item(&Self, Python, usize, PyObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.1\", note = \"use list.insert() instead\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169461,"byte_end":169527,"line_start":84,"line_end":84,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169724,"byte_end":169730,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"append","qualname":"<PyList>::append","value":"pub fn append(&Self, Python, PyObject)","parent":null,"children":[],"decl_id":null,"docs":" Appends an item to the end of the list\n","sig":null,"attributes":[{"value":"/ Appends an item to the end of the list","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169670,"byte_end":169712,"line_start":90,"line_end":90,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169872,"byte_end":169876,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"iter","qualname":"<PyList>::iter","value":"pub fn iter<'a, 'p>(&'a Self, Python) -> PyListIterator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":169851,"byte_end":169860,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":170086,"byte_end":170100,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"PyListIterator","qualname":"::objects::list::PyListIterator","value":"PyListIterator {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"decl_id":null,"docs":" Used by `PyList::iter()`.\n","sig":null,"attributes":[{"value":"/ Used by `PyList::iter()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":170045,"byte_end":170074,"line_start":105,"line_end":105,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176684,"byte_end":176692,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"PyModule","qualname":"::objects::module::PyModule","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python module object.\n","sig":null,"attributes":[{"value":"/ Represents a Python module object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176634,"byte_end":176672,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176871,"byte_end":176874,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<PyModule>::new","value":"pub fn new(Python, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Create a new module object with the `__name__` attribute set to name.\n","sig":null,"attributes":[{"value":"/ Create a new module object with the `__name__` attribute set to name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176786,"byte_end":176859,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":177136,"byte_end":177142,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"import","qualname":"<PyModule>::import","value":"pub fn import(Python, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Import the Python module with the specified name.\n","sig":null,"attributes":[{"value":"/ Import the Python module with the specified name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":177071,"byte_end":177124,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":177510,"byte_end":177514,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"dict","qualname":"<PyModule>::dict","value":"pub fn dict(&Self, Python) -> PyDict","parent":null,"children":[],"decl_id":null,"docs":" Return the dictionary object that implements module's namespace;\n this object is the same as the `__dict__` attribute of the module object.\n","sig":null,"attributes":[{"value":"/ Return the dictionary object that implements module's namespace;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":177348,"byte_end":177416,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ this object is the same as the `__dict__` attribute of the module object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":177421,"byte_end":177498,"line_start":49,"line_end":49,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178343,"byte_end":178347,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"name","qualname":"<PyModule>::name","value":"pub fn name<'a>(&'a Self, Python) -> PyResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module name.","sig":null,"attributes":[{"value":"/ Gets the module name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178229,"byte_end":178254,"line_start":72,"line_end":72,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178259,"byte_end":178262,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__name__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178267,"byte_end":178331,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178632,"byte_end":178640,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"filename","qualname":"<PyModule>::filename","value":"pub fn filename(&Self, Python) -> PyResult<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module filename.","sig":null,"attributes":[{"value":"/ Gets the module filename.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178489,"byte_end":178518,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178523,"byte_end":178526,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__file__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178531,"byte_end":178595,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178600,"byte_end":178620,"line_start":82,"line_end":82,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178937,"byte_end":178952,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"filename_object","qualname":"<PyModule>::filename_object","value":"pub fn filename_object(&Self, Python) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Gets the module filename object.","sig":null,"attributes":[{"value":"/ Gets the module filename object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178776,"byte_end":178812,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178817,"byte_end":178820,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ May fail if the module does not have a `__file__` attribute.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178825,"byte_end":178889,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":178894,"byte_end":178925,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179361,"byte_end":179364,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"get","qualname":"<PyModule>::get","value":"pub fn get(&Self, Python, &str) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Gets a member from the module.\n This is equivalent to the Python expression: `getattr(module, name)`\n","sig":null,"attributes":[{"value":"/ Gets a member from the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179238,"byte_end":179272,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ This is equivalent to the Python expression: `getattr(module, name)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179277,"byte_end":179349,"line_start":101,"line_end":101,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180352,"byte_end":180356,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"call","qualname":"<PyModule>::call","value":"pub fn call<A>(&Self, Python, &str, A, Option<&PyDict>) -> PyResult<PyObject>\nwhere A: ToPyObject<ObjectType = PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Calls a function in the module.\n This is equivalent to the Python expression: `getattr(module, name)(*args, **kwargs)`","sig":null,"attributes":[{"value":"/ Calls a function in the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179474,"byte_end":179509,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/ This is equivalent to the Python expression: `getattr(module, name)(*args, **kwargs)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179514,"byte_end":179603,"line_start":107,"line_end":107,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179608,"byte_end":179611,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `args` should be a value that, when converted to Python, results in a tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179616,"byte_end":179696,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ For this purpose, you can use:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179701,"byte_end":179735,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/  * `cpython::NoArgs` when calling a method without any arguments","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179740,"byte_end":179808,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/  * otherwise, a Rust tuple with 1 or more elements","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179813,"byte_end":179867,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179872,"byte_end":179875,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179880,"byte_end":179893,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179898,"byte_end":179905,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use cpython::NoArgs;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179910,"byte_end":179934,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/ # use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179939,"byte_end":179965,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ # let gil = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":179970,"byte_end":180008,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ # let py = gil.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180013,"byte_end":180041,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let sys = py.import(\"sys\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180046,"byte_end":180086,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/ // Call function without arguments:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180091,"byte_end":180130,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ let encoding = sys.call(py, \"getdefaultencoding\", NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180135,"byte_end":180212,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/ // Call function with a single argument:","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180217,"byte_end":180261,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ sys.call(py, \"setrecursionlimit\", (1000,), None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180266,"byte_end":180328,"line_start":124,"line_end":124,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180333,"byte_end":180340,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180785,"byte_end":180788,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"add","qualname":"<PyModule>::add","value":"pub fn add<V>(&Self, Python, &str, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Adds a member to the module.","sig":null,"attributes":[{"value":"/ Adds a member to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180633,"byte_end":180665,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180670,"byte_end":180673,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function which can be used from the module's initialization function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180678,"byte_end":180773,"line_start":141,"line_end":141,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":181188,"byte_end":181197,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"add_class","qualname":"<PyModule>::add_class","value":"pub fn add_class<T>(&Self, Python) -> PyResult<()> where\nT: PythonObjectFromPyClassMacro","parent":null,"children":[],"decl_id":null,"docs":" Adds a new extension type to the module.","sig":null,"attributes":[{"value":"/ Adds a new extension type to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180949,"byte_end":180993,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":180998,"byte_end":181001,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that initializes the `py_class!()`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":181006,"byte_end":181076,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/ sets `new_type.__module__` to this module's name,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":181081,"byte_end":181134,"line_start":152,"line_end":152,"column_start":5,"column_end":58}},{"value":"/ and adds the type to this module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":181139,"byte_end":181176,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":183036,"byte_end":183042,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"PyNone","qualname":"::objects::none::PyNone","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that represents `None` in Python.","sig":null,"attributes":[{"value":"/ An empty struct that represents `None` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182632,"byte_end":182685,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182686,"byte_end":182689,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This can be used as a function return type for functions that should return","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182690,"byte_end":182769,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ `None` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182770,"byte_end":182791,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182792,"byte_end":182795,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182796,"byte_end":182809,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182810,"byte_end":182817,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use cpython::{Python, PyResult, PyNone};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182818,"byte_end":182862,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182863,"byte_end":182866,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ fn example(py: Python) -> PyResult<PyNone> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182867,"byte_end":182915,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/    Ok(PyNone)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182916,"byte_end":182933,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182934,"byte_end":182939,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":182940,"byte_end":182947,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186049,"byte_end":186055,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"PyLong","qualname":"::objects::num::PyLong","value":"","parent":null,"children":[],"decl_id":null,"docs":" In Python 2.x, represents a Python `long` object.\n In Python 3.x, represents a Python `int` object.\n Both `PyInt` and `PyLong` refer to the same type on Python 3.x.","sig":null,"attributes":[{"value":"/ In Python 2.x, represents a Python `long` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185654,"byte_end":185707,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ In Python 3.x, represents a Python `int` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185708,"byte_end":185760,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/ Both `PyInt` and `PyLong` refer to the same type on Python 3.x.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185761,"byte_end":185828,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185829,"byte_end":185832,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ You can usually avoid directly working with this type","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185833,"byte_end":185890,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ by using [ToPyObject](trait.ToPyObject.html)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185891,"byte_end":185939,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ and [extract](struct.PyObject.html#method.extract)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185940,"byte_end":185994,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/ with the primitive Rust integer types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":185995,"byte_end":186037,"line_start":54,"line_end":54,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186361,"byte_end":186368,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"PyFloat","qualname":"::objects::num::PyFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `float` object.","sig":null,"attributes":[{"value":"/ Represents a Python `float` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186122,"byte_end":186161,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186162,"byte_end":186165,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ You can usually avoid directly working with this type","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186166,"byte_end":186223,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ by using [ToPyObject](trait.ToPyObject.html)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186224,"byte_end":186272,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"/ and [extract](struct.PyObject.html#method.extract)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186273,"byte_end":186327,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ with `f32`/`f64`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":186328,"byte_end":186349,"line_start":63,"line_end":63,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187358,"byte_end":187361,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<PyFloat>::new","value":"pub fn new(Python, c_double) -> PyFloat","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python `float` object.\n","sig":null,"attributes":[{"value":"/ Creates a new Python `float` object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187306,"byte_end":187346,"line_start":90,"line_end":90,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187545,"byte_end":187550,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"value","qualname":"<PyFloat>::value","value":"pub fn value(&Self, Python) -> c_double","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of this float.\n","sig":null,"attributes":[{"value":"/ Gets the value of this float.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187500,"byte_end":187533,"line_start":95,"line_end":95,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201169,"byte_end":201177,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"PyObject","qualname":"::objects::object::PyObject","value":"PyObject {  }","parent":null,"children":[{"krate":0,"index":1265}],"decl_id":null,"docs":" Represents a reference to a Python object.","sig":null,"attributes":[{"value":"/ Represents a reference to a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":199958,"byte_end":200004,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200005,"byte_end":200008,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Python objects are reference counted.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200009,"byte_end":200050,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ Calling `clone_ref()` on a `PyObject` will return a new reference to the same object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200051,"byte_end":200139,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ (thus incrementing the reference count).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200140,"byte_end":200184,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ The `Drop` implementation will automatically decrement the reference count.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200185,"byte_end":200264,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ You can also call `release_ref()` to explicitly decrement the reference count.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200265,"byte_end":200347,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/ This is slightly faster than relying on automatic drop, because `release_ref`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200348,"byte_end":200429,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ does not need to check whether the GIL needs to be acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200430,"byte_end":200494,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200495,"byte_end":200498,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `PyObject` can be used with all Python objects, since all python types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200499,"byte_end":200573,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ derive from `object`. This crate also contains other, more specific types","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200574,"byte_end":200651,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ that serve as references to Python objects (e.g. `PyTuple` for Python tuples, etc.).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200652,"byte_end":200740,"line_start":41,"line_end":41,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200741,"byte_end":200744,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ You can convert from any Python object to `PyObject` by calling `as_object()` or `into_object()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200745,"byte_end":200845,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ from the [PythonObject trait](trait.PythonObject.html).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200846,"byte_end":200905,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/ In the other direction, you can call `cast_as()` or `cast_into()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200906,"byte_end":200975,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ on `PyObject` to convert to more specific object types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":200976,"byte_end":201035,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201036,"byte_end":201039,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Most of the interesting methods are provided by the [ObjectProtocol trait](trait.ObjectProtocol.html).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201040,"byte_end":201146,"line_start":48,"line_end":48,"column_start":1,"column_end":107}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201147,"byte_end":201157,"line_start":49,"line_end":49,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202922,"byte_end":202936,"line_start":122,"line_end":122,"column_start":19,"column_end":33},"name":"from_owned_ptr","qualname":"<PyObject>::from_owned_ptr","value":"pub unsafe fn from_owned_ptr(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n This moves ownership over the pointer into the PyObject.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202704,"byte_end":202762,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/ This moves ownership over the pointer into the PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202767,"byte_end":202827,"line_start":119,"line_end":119,"column_start":5,"column_end":65}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202832,"byte_end":202889,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202894,"byte_end":202903,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203337,"byte_end":203354,"line_start":133,"line_end":133,"column_start":19,"column_end":36},"name":"from_borrowed_ptr","qualname":"<PyObject>::from_borrowed_ptr","value":"pub unsafe fn from_borrowed_ptr(Python, *mut ffi::PyObject) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n Calls Py_INCREF() on the ptr.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203146,"byte_end":203204,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/ Calls Py_INCREF() on the ptr.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203209,"byte_end":203242,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203247,"byte_end":203304,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203309,"byte_end":203318,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203835,"byte_end":203853,"line_start":145,"line_end":145,"column_start":19,"column_end":37},"name":"from_owned_ptr_opt","qualname":"<PyObject>::from_owned_ptr_opt","value":"pub unsafe fn from_owned_ptr_opt(Python, *mut ffi::PyObject)\n-> Option<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Creates a PyObject instance for the given FFI pointer.\n This moves ownership over the pointer into the PyObject.\n Returns None for null pointers; undefined behavior if the pointer is invalid.\n","sig":null,"attributes":[{"value":"/ Creates a PyObject instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203593,"byte_end":203651,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"/ This moves ownership over the pointer into the PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203656,"byte_end":203716,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/ Returns None for null pointers; undefined behavior if the pointer is invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203721,"byte_end":203802,"line_start":143,"line_end":143,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":203807,"byte_end":203816,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204161,"byte_end":204182,"line_start":155,"line_end":155,"column_start":19,"column_end":40},"name":"from_borrowed_ptr_opt","qualname":"<PyObject>::from_borrowed_ptr_opt","value":"pub unsafe fn from_borrowed_ptr_opt(Python, *mut ffi::PyObject)\n-> Option<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Returns None for null pointers; undefined behavior if the pointer is invalid.\n","sig":null,"attributes":[{"value":"/ Returns None for null pointers; undefined behavior if the pointer is invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204047,"byte_end":204128,"line_start":153,"line_end":153,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204133,"byte_end":204142,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204477,"byte_end":204483,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PyObject>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying FFI pointer.\n Returns a borrowed pointer.\n","sig":null,"attributes":[{"value":"/ Gets the underlying FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204379,"byte_end":204415,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ Returns a borrowed pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204420,"byte_end":204451,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204456,"byte_end":204465,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204718,"byte_end":204727,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"steal_ptr","qualname":"<PyObject>::steal_ptr","value":"pub fn steal_ptr(Self) -> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying FFI pointer.\n Consumes `self` without calling `Py_DECREF()`, thus returning an owned pointer.\n","sig":null,"attributes":[{"value":"/ Gets the underlying FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204552,"byte_end":204588,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ Consumes `self` without calling `Py_DECREF()`, thus returning an owned pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204593,"byte_end":204676,"line_start":171,"line_end":171,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204681,"byte_end":204690,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204695,"byte_end":204706,"line_start":173,"line_end":173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204981,"byte_end":204996,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"name":"borrow_from_ptr","qualname":"<PyObject>::borrow_from_ptr","value":"pub unsafe fn borrow_from_ptr(&*mut ffi::PyObject) -> &PyObject","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an FFI pointer to `&PyObject`.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Transmutes an FFI pointer to `&PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204841,"byte_end":204886,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204891,"byte_end":204948,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":204953,"byte_end":204962,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205286,"byte_end":205313,"line_start":191,"line_end":191,"column_start":19,"column_end":46},"name":"borrow_from_owned_ptr_slice","qualname":"<PyObject>::borrow_from_owned_ptr_slice","value":"pub unsafe fn borrow_from_owned_ptr_slice(&[*mut ffi::PyObject])\n-> &[PyObject]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a slice of owned FFI pointers to `&[PyObject]`.\n Undefined behavior if any pointer in the slice is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Transmutes a slice of owned FFI pointers to `&[PyObject]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205116,"byte_end":205178,"line_start":188,"line_end":188,"column_start":5,"column_end":67}},{"value":"/ Undefined behavior if any pointer in the slice is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205183,"byte_end":205253,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205258,"byte_end":205267,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205475,"byte_end":205485,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"get_refcnt","qualname":"<PyObject>::get_refcnt","value":"pub fn get_refcnt(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference count of this Python object.\n","sig":null,"attributes":[{"value":"/ Gets the reference count of this Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205398,"byte_end":205449,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205454,"byte_end":205463,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205653,"byte_end":205661,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"get_type","qualname":"<PyObject>::get_type","value":"pub fn get_type(&Self, Python) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python type object for this object's type.\n","sig":null,"attributes":[{"value":"/ Gets the Python type object for this object's type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205586,"byte_end":205641,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206026,"byte_end":206045,"line_start":210,"line_end":210,"column_start":19,"column_end":38},"name":"unchecked_cast_into","qualname":"<PyObject>::unchecked_cast_into","value":"pub unsafe fn unchecked_cast_into<T>(Self) -> T where T: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Causes undefined behavior if the object is not of the expected type.\n This is a wrapper function around `PythonObject::unchecked_downcast_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205775,"byte_end":205831,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/ Causes undefined behavior if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205836,"byte_end":205908,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ This is a wrapper function around `PythonObject::unchecked_downcast_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205913,"byte_end":205993,"line_start":208,"line_end":208,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":205998,"byte_end":206007,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206430,"byte_end":206439,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"cast_into","qualname":"<PyObject>::cast_into","value":"pub fn cast_into<T>(Self, Python) -> Result<T, PythonObjectDowncastError>\nwhere T: PythonObjectWithCheckedDowncast","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Fails with `PythonObjectDowncastError` if the object is not of the expected type.\n This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206164,"byte_end":206220,"line_start":217,"line_end":217,"column_start":5,"column_end":61}},{"value":"/ Fails with `PythonObjectDowncastError` if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206225,"byte_end":206310,"line_start":218,"line_end":218,"column_start":5,"column_end":90}},{"value":"/ This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206315,"byte_end":206404,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206409,"byte_end":206418,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206903,"byte_end":206920,"line_start":232,"line_end":232,"column_start":19,"column_end":36},"name":"unchecked_cast_as","qualname":"<PyObject>::unchecked_cast_as","value":"pub unsafe fn unchecked_cast_as<T>(&Self) -> &T where T: PythonObject","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Causes undefined behavior if the object is not of the expected type.\n This is a wrapper function around `PythonObject::unchecked_downcast_borrow_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206645,"byte_end":206701,"line_start":228,"line_end":228,"column_start":5,"column_end":61}},{"value":"/ Causes undefined behavior if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206706,"byte_end":206778,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ This is a wrapper function around `PythonObject::unchecked_downcast_borrow_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206783,"byte_end":206870,"line_start":230,"line_end":230,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":206875,"byte_end":206884,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207321,"byte_end":207328,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"cast_as","qualname":"<PyObject>::cast_as","value":"pub fn cast_as<'s, 'p, T>(&'s Self, Python)\n-> Result<&'s T, PythonObjectDowncastError> where\nT: PythonObjectWithCheckedDowncast","parent":null,"children":[],"decl_id":null,"docs":" Casts the PyObject to a concrete Python object type.\n Fails with `PythonObjectDowncastError` if the object is not of the expected type.\n This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_borrow_from()`.\n","sig":null,"attributes":[{"value":"/ Casts the PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207048,"byte_end":207104,"line_start":239,"line_end":239,"column_start":5,"column_end":61}},{"value":"/ Fails with `PythonObjectDowncastError` if the object is not of the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207109,"byte_end":207194,"line_start":240,"line_end":240,"column_start":5,"column_end":90}},{"value":"/ This is a wrapper function around `PythonObjectWithCheckedDowncast::downcast_borrow_from()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207199,"byte_end":207295,"line_start":241,"line_end":241,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207300,"byte_end":207309,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207728,"byte_end":207735,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"extract","qualname":"<PyObject>::extract","value":"pub fn extract<'a, T>(&'a Self, Python) -> PyResult<T> where\nT: crate::conversion::FromPyObject","parent":null,"children":[],"decl_id":null,"docs":" Extracts some type from the Python object.\n This is a wrapper function around `FromPyObject::from_py_object()`.\n","sig":null,"attributes":[{"value":"/ Extracts some type from the Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207580,"byte_end":207626,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/ This is a wrapper function around `FromPyObject::from_py_object()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207631,"byte_end":207702,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207707,"byte_end":207716,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207975,"byte_end":207982,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"is_none","qualname":"<PyObject>::is_none","value":"pub fn is_none(&Self, Python) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this is None in Python.\n","sig":null,"attributes":[{"value":"/ True if this is None in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207914,"byte_end":207949,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":207954,"byte_end":207963,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210448,"byte_end":210458,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"PySequence","qualname":"::objects::sequence::PySequence","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a reference to a python object supporting the sequence protocol.\n","sig":null,"attributes":[{"value":"/ Represents a reference to a python object supporting the sequence protocol.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210357,"byte_end":210436,"line_start":30,"line_end":30,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210653,"byte_end":210656,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<PySequence>::len","value":"pub fn len(&Self, Python) -> PyResult<isize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of objects in sequence. This is equivalent to Python `len()`.\n","sig":null,"attributes":[{"value":"/ Returns the number of objects in sequence. This is equivalent to Python `len()`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210543,"byte_end":210627,"line_start":36,"line_end":36,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210632,"byte_end":210641,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210982,"byte_end":210988,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"concat","qualname":"<PySequence>::concat","value":"pub fn concat(&Self, Python, &PySequence) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the concatenation of o1 and o2. Equivalent to python `o1 + o2`\n","sig":null,"attributes":[{"value":"/ Return the concatenation of o1 and o2. Equivalent to python `o1 + o2`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210883,"byte_end":210956,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210961,"byte_end":210970,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211394,"byte_end":211400,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"repeat","qualname":"<PySequence>::repeat","value":"pub fn repeat(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the result of repeating sequence object o count times.\n Equivalent to python `o * count`\n NB: Python accepts negative counts; it returns an empty Sequence.\n","sig":null,"attributes":[{"value":"/ Return the result of repeating sequence object o count times.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211188,"byte_end":211253,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ Equivalent to python `o * count`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211258,"byte_end":211294,"line_start":56,"line_end":56,"column_start":5,"column_end":41}},{"value":"/ NB: Python accepts negative counts; it returns an empty Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211299,"byte_end":211368,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211373,"byte_end":211382,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211757,"byte_end":211772,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"in_place_concat","qualname":"<PySequence>::in_place_concat","value":"pub fn in_place_concat(&Self, Python, &PySequence) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the concatenation of o1 and o2 on success. Equivalent to python `o1 += o2`\n","sig":null,"attributes":[{"value":"/ Return the concatenation of o1 and o2 on success. Equivalent to python `o1 += o2`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211646,"byte_end":211731,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":211736,"byte_end":211745,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212223,"byte_end":212238,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"in_place_repeat","qualname":"<PySequence>::in_place_repeat","value":"pub fn in_place_repeat(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the result of repeating sequence object o count times.\n Equivalent to python `o *= count`\n NB: Python accepts negative counts; it empties the Sequence.\n","sig":null,"attributes":[{"value":"/ Return the result of repeating sequence object o count times.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212021,"byte_end":212086,"line_start":79,"line_end":79,"column_start":5,"column_end":70}},{"value":"/ Equivalent to python `o *= count`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212091,"byte_end":212128,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/ NB: Python accepts negative counts; it empties the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212133,"byte_end":212197,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212202,"byte_end":212211,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212587,"byte_end":212595,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PySequence>::get_item","value":"pub fn get_item(&Self, Python, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the ith element of the Sequence. Equivalent to python `o[index]`\n","sig":null,"attributes":[{"value":"/ Return the ith element of the Sequence. Equivalent to python `o[index]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212486,"byte_end":212561,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212566,"byte_end":212575,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212998,"byte_end":213007,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"get_slice","qualname":"<PySequence>::get_slice","value":"pub fn get_slice(&Self, Python, isize, isize) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Return the slice of sequence object o between begin and end.\n This is the equivalent of the Python expression `o[begin:end]`\n","sig":null,"attributes":[{"value":"/ Return the slice of sequence object o between begin and end.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212837,"byte_end":212901,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ This is the equivalent of the Python expression `o[begin:end]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212906,"byte_end":212972,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":212977,"byte_end":212986,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213401,"byte_end":213409,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"set_item","qualname":"<PySequence>::set_item","value":"pub fn set_item(&Self, Python, isize, &PyObject) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Assign object v to the ith element of o.\n Equivalent to Python statement `o[i] = v`\n","sig":null,"attributes":[{"value":"/ Assign object v to the ith element of o.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213281,"byte_end":213325,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ Equivalent to Python statement `o[i] = v`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213330,"byte_end":213375,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213380,"byte_end":213389,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213765,"byte_end":213773,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"del_item","qualname":"<PySequence>::del_item","value":"pub fn del_item(&Self, Python, isize) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete the ith element of object o.\n Python statement `del o[i]`\n","sig":null,"attributes":[{"value":"/ Delete the ith element of object o.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213664,"byte_end":213703,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ Python statement `del o[i]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213708,"byte_end":213739,"line_start":128,"line_end":128,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213744,"byte_end":213753,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214132,"byte_end":214141,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"set_slice","qualname":"<PySequence>::set_slice","value":"pub fn set_slice(&Self, Python, isize, isize, &PyObject) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Assign the sequence object v to the slice in sequence object o from i1 to i2.\n This is the equivalent of the Python statement `o[i1:i2] = v`\n","sig":null,"attributes":[{"value":"/ Assign the sequence object v to the slice in sequence object o from i1 to i2.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":213955,"byte_end":214036,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/ This is the equivalent of the Python statement `o[i1:i2] = v`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214041,"byte_end":214106,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214111,"byte_end":214120,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214667,"byte_end":214676,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"del_slice","qualname":"<PySequence>::del_slice","value":"pub fn del_slice(&Self, Python, isize, isize) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete the slice in sequence object o from i1 to i2.\n equivalent of the Python statement `del o[i1:i2]`\n","sig":null,"attributes":[{"value":"/ Delete the slice in sequence object o from i1 to i2.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214527,"byte_end":214583,"line_start":153,"line_end":153,"column_start":5,"column_end":61}},{"value":"/ equivalent of the Python statement `del o[i1:i2]`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214588,"byte_end":214641,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214646,"byte_end":214655,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215085,"byte_end":215090,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"count","qualname":"<PySequence>::count","value":"pub fn count<V>(&Self, Python, V) -> PyResult<usize> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return the number of occurrences of value in o, that is, return the number of keys for\n which `o[key] == value`\n","sig":null,"attributes":[{"value":"/ Return the number of occurrences of value in o, that is, return the number of keys for","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":214937,"byte_end":215027,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ which `o[key] == value`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215032,"byte_end":215059,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215064,"byte_end":215073,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215543,"byte_end":215551,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"contains","qualname":"<PySequence>::contains","value":"pub fn contains<V>(&Self, Python, V) -> PyResult<bool> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if o contains value. this is equivalent to the Python expression `value in o`\n","sig":null,"attributes":[{"value":"/ Determine if o contains value. this is equivalent to the Python expression `value in o`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215426,"byte_end":215517,"line_start":182,"line_end":182,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215522,"byte_end":215531,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216051,"byte_end":216056,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"index","qualname":"<PySequence>::index","value":"pub fn index<V>(&Self, Python, V) -> PyResult<usize> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Return the first index i for which o[i] == value.\n This is equivalent to the Python expression `o.index(value)`\n","sig":null,"attributes":[{"value":"/ Return the first index i for which o[i] == value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215903,"byte_end":215956,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"/ This is equivalent to the Python expression `o.index(value)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":215961,"byte_end":216025,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216030,"byte_end":216039,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216464,"byte_end":216468,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"list","qualname":"<PySequence>::list","value":"pub fn list(&Self, Python) -> PyResult<PyList>","parent":null,"children":[],"decl_id":null,"docs":" Return a fresh list based on the Sequence.\n","sig":null,"attributes":[{"value":"/ Return a fresh list based on the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216392,"byte_end":216438,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216443,"byte_end":216452,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216681,"byte_end":216686,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"tuple","qualname":"<PySequence>::tuple","value":"pub fn tuple(&Self, Python) -> PyResult<PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Return a fresh tuple based on the Sequence.\n","sig":null,"attributes":[{"value":"/ Return a fresh tuple based on the Sequence.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216608,"byte_end":216655,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216660,"byte_end":216669,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216849,"byte_end":216853,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"iter","qualname":"<PySequence>::iter","value":"pub fn iter<'p>(&Self, Python) -> PyResult<PyIterator>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":216828,"byte_end":216837,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232037,"byte_end":232042,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"PySet","qualname":"::objects::set::PySet","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python `set`.\n","sig":null,"attributes":[{"value":"/ Represents a Python `set`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":231995,"byte_end":232025,"line_start":27,"line_end":27,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232233,"byte_end":232236,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<PySet>::new","value":"pub fn new<I>(Python, I) -> PyResult<PySet> where I: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set from any iterable","sig":null,"attributes":[{"value":"/ Creates a new set from any iterable","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232124,"byte_end":232163,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232168,"byte_end":232171,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `set(iterable)` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232176,"byte_end":232221,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232577,"byte_end":232582,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"empty","qualname":"<PySet>::empty","value":"pub fn empty(Python) -> PyResult<PySet>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty set","sig":null,"attributes":[{"value":"/ Creates an empty set","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232478,"byte_end":232502,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232507,"byte_end":232510,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `set()` in Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232515,"byte_end":232551,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232556,"byte_end":232565,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232781,"byte_end":232786,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"clear","qualname":"<PySet>::clear","value":"pub fn clear(&Self, Python) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Empty an existing set of all values.\n","sig":null,"attributes":[{"value":"/ Empty an existing set of all values.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232715,"byte_end":232755,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232760,"byte_end":232769,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233032,"byte_end":233035,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"len","qualname":"<PySet>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of items in the set\n This is equivalent to Python `len(self)`\n","sig":null,"attributes":[{"value":"/ Return the number of items in the set","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232916,"byte_end":232957,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ This is equivalent to Python `len(self)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232962,"byte_end":233006,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233011,"byte_end":233020,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233274,"byte_end":233282,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"contains","qualname":"<PySet>::contains","value":"pub fn contains<V>(&Self, Python, V) -> PyResult<bool> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Determine if the set contains the specified value.\n This is equivalent to the Python expression `value in self`.\n","sig":null,"attributes":[{"value":"/ Determine if the set contains the specified value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233139,"byte_end":233193,"line_start":66,"line_end":66,"column_start":5,"column_end":59}},{"value":"/ This is equivalent to the Python expression `value in self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233198,"byte_end":233262,"line_start":67,"line_end":67,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233727,"byte_end":233730,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"add","qualname":"<PySet>::add","value":"pub fn add<V>(&Self, Python, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Add a value.\n This is equivalent to the Python expression `self.add(value)`.\n","sig":null,"attributes":[{"value":"/ Add a value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233628,"byte_end":233644,"line_start":81,"line_end":81,"column_start":5,"column_end":21}},{"value":"/ This is equivalent to the Python expression `self.add(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233649,"byte_end":233715,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234078,"byte_end":234085,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"discard","qualname":"<PySet>::discard","value":"pub fn discard<V>(&Self, Python, V) -> PyResult<()> where V: ToPyObject","parent":null,"children":[],"decl_id":null,"docs":" Discard a value\n This is equivalent to the Python expression `self.discard(value)`.\n","sig":null,"attributes":[{"value":"/ Discard a value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233972,"byte_end":233991,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ This is equivalent to the Python expression `self.discard(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":233996,"byte_end":234066,"line_start":93,"line_end":93,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234473,"byte_end":234476,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"pop","qualname":"<PySet>::pop","value":"pub fn pop(&Self, Python) -> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Pop a value\n This is equivalent to the Python expression `self.pop(value)`.\n We get KeyError if the set is empty\n","sig":null,"attributes":[{"value":"/ Pop a value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234331,"byte_end":234346,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/ This is equivalent to the Python expression `self.pop(value)`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234351,"byte_end":234417,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/ We get KeyError if the set is empty","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234422,"byte_end":234461,"line_start":105,"line_end":105,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":240719,"byte_end":240727,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"PyString","qualname":"::objects::string::PyString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python string.\n Corresponds to `basestring` in Python 2, and `str` in Python 3.\n","sig":null,"attributes":[{"value":"/ Represents a Python string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":240608,"byte_end":240639,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/ Corresponds to `basestring` in Python 2, and `str` in Python 3.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":240640,"byte_end":240707,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":241008,"byte_end":241015,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"PyBytes","qualname":"::objects::string::PyBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python byte string.\n Corresponds to `str` in Python 2, and `bytes` in Python 3.\n","sig":null,"attributes":[{"value":"/ Represents a Python byte string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":240897,"byte_end":240933,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ Corresponds to `str` in Python 2, and `bytes` in Python 3.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":240934,"byte_end":240996,"line_start":39,"line_end":39,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243188,"byte_end":243194,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::objects::string::PyStringData::Latin1","value":"PyStringData::Latin1(&'a [u8])","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243210,"byte_end":243214,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::objects::string::PyStringData::Utf8","value":"PyStringData::Utf8(&'a [u8])","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243230,"byte_end":243235,"line_start":120,"line_end":120,"column_start":5,"column_end":10},"name":"Utf16","qualname":"::objects::string::PyStringData::Utf16","value":"PyStringData::Utf16(&'a [u16])","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243252,"byte_end":243257,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"Utf32","qualname":"::objects::string::PyStringData::Utf32","value":"PyStringData::Utf32(&'a [u32])","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243165,"byte_end":243177,"line_start":117,"line_end":117,"column_start":10,"column_end":22},"name":"PyStringData","qualname":"::objects::string::PyStringData","value":"pub enum PyStringData<'a> {\n    Latin1(&'a [u8]),\n    Utf8(&'a [u8]),\n    Utf16(&'a [u16]),\n    Utf32(&'a [u32]),\n}","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4392}],"decl_id":null,"docs":" Enum of possible Python string representations.\n","sig":null,"attributes":[{"value":"/ Enum of possible Python string representations.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243074,"byte_end":243125,"line_start":115,"line_end":115,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":244094,"byte_end":244103,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"to_string","qualname":"<PyStringData>::to_string","value":"pub fn to_string(Self, Python) -> PyResult<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Convert the Python string data to a Rust string.","sig":null,"attributes":[{"value":"/ Convert the Python string data to a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243773,"byte_end":243825,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243830,"byte_end":243833,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ For UTF-8 and ASCII-only latin-1, returns a borrow into the original string data.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243838,"byte_end":243923,"line_start":148,"line_end":148,"column_start":5,"column_end":90}},{"value":"/ For Latin-1, UTF-16 and UTF-32, returns an owned string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243928,"byte_end":243988,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243993,"byte_end":243996,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Fails with UnicodeDecodeError if the string data isn't valid in its encoding.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":244001,"byte_end":244082,"line_start":151,"line_end":151,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246492,"byte_end":246507,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<PyStringData>::to_string_lossy","value":"pub fn to_string_lossy(Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Convert the Python string data to a Rust string.","sig":null,"attributes":[{"value":"/ Convert the Python string data to a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246238,"byte_end":246290,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246295,"byte_end":246298,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns a borrow into the original string data if possible.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246303,"byte_end":246366,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246371,"byte_end":246374,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Data that isn't valid in its encoding will be replaced","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246379,"byte_end":246437,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":246442,"byte_end":246480,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247735,"byte_end":247738,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<PyString>::new","value":"pub fn new(Python, &str) -> PyString","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python string object.","sig":null,"attributes":[{"value":"/ Creates a new Python string object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247236,"byte_end":247275,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247280,"byte_end":247283,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, this function will create a byte string if the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247288,"byte_end":247353,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ feature `py2-no-auto-unicode-promotion` is set, or the input","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247358,"byte_end":247422,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ input string is ASCII-only; otherwise, the input string will be","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247427,"byte_end":247494,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/ converted to a unicode string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247499,"byte_end":247533,"line_start":239,"line_end":239,"column_start":5,"column_end":39}},{"value":"/ Use `PyUnicode::new()` to always create a unicode string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247538,"byte_end":247599,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247604,"byte_end":247607,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On Python 3.x, this function always creates unicode `str` objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247612,"byte_end":247682,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247687,"byte_end":247690,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Panics if out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247695,"byte_end":247723,"line_start":244,"line_end":244,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248792,"byte_end":248796,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"data","qualname":"<PyString>::data","value":"pub fn data(&Self, Python) -> PyStringData","parent":null,"children":[],"decl_id":null,"docs":" Gets the python string data in its underlying representation.","sig":null,"attributes":[{"value":"/ Gets the python string data in its underlying representation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248491,"byte_end":248556,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248561,"byte_end":248564,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ For Python 2 byte strings, this function always returns `PyStringData::Utf8`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248569,"byte_end":248650,"line_start":267,"line_end":267,"column_start":5,"column_end":86}},{"value":"/ even if the bytes are not valid UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248655,"byte_end":248697,"line_start":268,"line_end":268,"column_start":5,"column_end":47}},{"value":"/ For unicode strings, returns the underlying representation used by Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":248702,"byte_end":248780,"line_start":269,"line_end":269,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250732,"byte_end":250741,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"to_string","qualname":"<PyString>::to_string","value":"pub fn to_string(&Self, Python) -> PyResult<Cow<, str>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the `PyString` into a Rust string.","sig":null,"attributes":[{"value":"/ Convert the `PyString` into a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250376,"byte_end":250422,"line_start":313,"line_end":313,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250427,"byte_end":250430,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, if the `PyString` refers to a byte string,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250435,"byte_end":250496,"line_start":315,"line_end":315,"column_start":5,"column_end":66}},{"value":"/ it will be decoded using UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250501,"byte_end":250536,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250541,"byte_end":250544,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Returns a `UnicodeDecodeError` if the input is not valid unicode","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250549,"byte_end":250617,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ (containing unpaired surrogates, or a Python 2.7 byte string that is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250622,"byte_end":250694,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ not valid UTF-8).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":250699,"byte_end":250720,"line_start":320,"line_end":320,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251952,"byte_end":251967,"line_start":351,"line_end":351,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<PyString>::to_string_lossy","value":"pub fn to_string_lossy(&Self, Python) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Convert the `PyString` into a Rust string.","sig":null,"attributes":[{"value":"/ Convert the `PyString` into a Rust string.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251644,"byte_end":251690,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251695,"byte_end":251698,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ On Python 2.7, if the `PyString` refers to a byte string,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251703,"byte_end":251764,"line_start":346,"line_end":346,"column_start":5,"column_end":66}},{"value":"/ it will be decoded using UTF-8.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251769,"byte_end":251804,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251809,"byte_end":251812,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Unpaired surrogates and (on Python 2.7) invalid UTF-8 sequences are","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251817,"byte_end":251888,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/ replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":251893,"byte_end":251940,"line_start":350,"line_end":350,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252243,"byte_end":252246,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<PyBytes>::new","value":"pub fn new(Python, &[u8]) -> PyBytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Python byte string object.\n The byte string is initialized by copying the data from the `&[u8]`.","sig":null,"attributes":[{"value":"/ Creates a new Python byte string object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252069,"byte_end":252113,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/ The byte string is initialized by copying the data from the `&[u8]`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252118,"byte_end":252190,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252195,"byte_end":252198,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Panics if out of memory.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252203,"byte_end":252231,"line_start":360,"line_end":360,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252543,"byte_end":252547,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"data","qualname":"<PyBytes>::data","value":"pub fn data(&Self, Python) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python string data as byte slice.\n","sig":null,"attributes":[{"value":"/ Gets the Python string data as byte slice.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252485,"byte_end":252531,"line_start":367,"line_end":367,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264126,"byte_end":264133,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"PyTuple","qualname":"::objects::tuple::PyTuple","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Python tuple object.\n","sig":null,"attributes":[{"value":"/ Represents a Python tuple object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264077,"byte_end":264114,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264285,"byte_end":264288,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PyTuple>::new","value":"pub fn new(Python, &[PyObject]) -> PyTuple","parent":null,"children":[],"decl_id":null,"docs":" Construct a new tuple with the given elements.\n","sig":null,"attributes":[{"value":"/ Construct a new tuple with the given elements.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264223,"byte_end":264273,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264757,"byte_end":264762,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"empty","qualname":"<PyTuple>::empty","value":"pub fn empty(Python) -> PyTuple","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the empty tuple.\n","sig":null,"attributes":[{"value":"/ Retrieves the empty tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264715,"byte_end":264745,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264954,"byte_end":264957,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<PyTuple>::len","value":"pub fn len(&Self, Python) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of the tuple.\n","sig":null,"attributes":[{"value":"/ Gets the length of the tuple.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264895,"byte_end":264928,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264933,"byte_end":264942,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265265,"byte_end":265273,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"get_item","qualname":"<PyTuple>::get_item","value":"pub fn get_item(&Self, Python, usize) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the item at the specified index.","sig":null,"attributes":[{"value":"/ Gets the item at the specified index.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265159,"byte_end":265200,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265205,"byte_end":265208,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of range.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265213,"byte_end":265253,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265713,"byte_end":265721,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<PyTuple>::as_slice","value":"pub fn as_slice<'a>(&'a Self, Python) -> &'a [PyObject]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":265692,"byte_end":265701,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":266259,"byte_end":266263,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"iter","qualname":"<PyTuple>::iter","value":"pub fn iter(&Self, Python) -> slice::Iter<, PyObject>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":266238,"byte_end":266247,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4586},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269363,"byte_end":269369,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"NoArgs","qualname":"::objects::tuple::NoArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that represents the empty argument list.\n Corresponds to the empty tuple `()` in Python.","sig":null,"attributes":[{"value":"/ An empty struct that represents the empty argument list.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":268983,"byte_end":269043,"line_start":202,"line_end":202,"column_start":1,"column_end":61}},{"value":"/ Corresponds to the empty tuple `()` in Python.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269044,"byte_end":269094,"line_start":203,"line_end":203,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269095,"byte_end":269098,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269099,"byte_end":269112,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269113,"byte_end":269120,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ let gil_guard = cpython::Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269121,"byte_end":269172,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/ let py = gil_guard.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269173,"byte_end":269205,"line_start":208,"line_end":208,"column_start":1,"column_end":33}},{"value":"/ let os = py.import(\"os\").unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269206,"byte_end":269244,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/ let pid = os.call(py, \"getpid\", cpython::NoArgs, None).unwrap();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269245,"byte_end":269313,"line_start":210,"line_end":210,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269314,"byte_end":269321,"line_start":211,"line_end":211,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271698,"byte_end":271704,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"PyType","qualname":"::objects::typeobject::PyType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a reference to a Python type object.\n","sig":null,"attributes":[{"value":"/ Represents a reference to a Python type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271635,"byte_end":271686,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271892,"byte_end":271903,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"as_type_ptr","qualname":"<PyType>::as_type_ptr","value":"pub fn as_type_ptr(&Self) -> *mut ffi::PyTypeObject","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying FFI pointer associated with this Python object.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying FFI pointer associated with this Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271790,"byte_end":271866,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271871,"byte_end":271880,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272219,"byte_end":272232,"line_start":44,"line_end":44,"column_start":19,"column_end":32},"name":"from_type_ptr","qualname":"<PyType>::from_type_ptr","value":"pub unsafe fn from_type_ptr(Python, *mut ffi::PyTypeObject) -> PyType","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the PyType instance for the given FFI pointer.\n This increments the reference count on the type object.\n Undefined behavior if the pointer is NULL or invalid.\n","sig":null,"attributes":[{"value":"/ Retrieves the PyType instance for the given FFI pointer.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272000,"byte_end":272060,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/ This increments the reference count on the type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272065,"byte_end":272124,"line_start":41,"line_end":41,"column_start":5,"column_end":64}},{"value":"/ Undefined behavior if the pointer is NULL or invalid.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272129,"byte_end":272186,"line_start":42,"line_end":42,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272191,"byte_end":272200,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272436,"byte_end":272440,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"name","qualname":"<PyType>::name","value":"pub fn name<'a>(&'a Self, Python) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Gets the name of the PyType.\n","sig":null,"attributes":[{"value":"/ Gets the name of the PyType.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272392,"byte_end":272424,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272656,"byte_end":272669,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"is_subtype_of","qualname":"<PyType>::is_subtype_of","value":"pub fn is_subtype_of(&Self, Python, &PyType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is a subtype of `b`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is a subtype of `b`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272584,"byte_end":272630,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272635,"byte_end":272644,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272880,"byte_end":272891,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_instance","qualname":"<PyType>::is_instance","value":"pub fn is_instance(&Self, Python, &PyObject) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `obj` is an instance of `self`.\n","sig":null,"attributes":[{"value":"/ Return true if `obj` is an instance of `self`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272804,"byte_end":272854,"line_start":59,"line_end":59,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":272859,"byte_end":272868,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273188,"byte_end":273192,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"call","qualname":"<PyType>::call","value":"pub fn call<A>(&Self, Python, A, Option<&PyDict>) -> PyResult<PyObject> where\nA: ToPyObject<ObjectType = PyTuple>","parent":null,"children":[],"decl_id":null,"docs":" Calls the type object, thus creating a new instance.\n This is equivalent to the Python expression: `self(*args, **kwargs)`\n","sig":null,"attributes":[{"value":"/ Calls the type object, thus creating a new instance.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273029,"byte_end":273085,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ This is equivalent to the Python expression: `self(*args, **kwargs)`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273090,"byte_end":273162,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273167,"byte_end":273176,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277612,"byte_end":277618,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Python","qualname":"::python::Python","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type that indicates that the GIL is currently held.","sig":null,"attributes":[{"value":"/ Marker type that indicates that the GIL is currently held.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":276947,"byte_end":277009,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277010,"byte_end":277013,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The 'Python' struct is a zero-size marker struct that is required for most Python operations.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277014,"byte_end":277111,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ This is used to indicate that the operation accesses/modifies the Python interpreter state,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277112,"byte_end":277207,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ and thus can only be called if the Python interpreter is initialized and the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277208,"byte_end":277288,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ Python global interpreter lock (GIL) is acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277289,"byte_end":277342,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/ The lifetime `'p` represents the lifetime of the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277343,"byte_end":277415,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277416,"byte_end":277419,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You can imagine the GIL to be a giant `Mutex<PythonInterpreterState>`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277420,"byte_end":277494,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ The type `Python<'p>` then acts like a reference `&'p PythonInterpreterState`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277495,"byte_end":277577,"line_start":37,"line_end":37,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277712,"byte_end":277724,"line_start":42,"line_end":42,"column_start":11,"column_end":23},"name":"PythonObject","qualname":"::python::PythonObject","value":"PythonObject: crate::conversion::ToPyObject + Send + Sized + 'static","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"decl_id":null,"docs":" Trait implemented by all Python object types.\n","sig":null,"attributes":[{"value":"/ Trait implemented by all Python object types.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277652,"byte_end":277701,"line_start":41,"line_end":41,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277835,"byte_end":277844,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"as_object","qualname":"::python::PythonObject::as_object","value":"pub fn as_object(&Self) -> &PyObject","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Casts the Python object to PyObject.\n","sig":null,"attributes":[{"value":"/ Casts the Python object to PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277787,"byte_end":277827,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277919,"byte_end":277930,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"into_object","qualname":"::python::PythonObject::into_object","value":"pub fn into_object(Self) -> PyObject","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Casts the Python object to PyObject.\n","sig":null,"attributes":[{"value":"/ Casts the Python object to PyObject.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277871,"byte_end":277911,"line_start":46,"line_end":46,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278095,"byte_end":278118,"line_start":51,"line_end":51,"column_start":15,"column_end":38},"name":"unchecked_downcast_from","qualname":"::python::PythonObject::unchecked_downcast_from","value":"pub unsafe fn unchecked_downcast_from(PyObject) -> Self","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Unchecked downcast from PyObject to Self.\n Undefined behavior if the input object does not have the expected type.\n","sig":null,"attributes":[{"value":"/ Unchecked downcast from PyObject to Self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277955,"byte_end":278000,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the input object does not have the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278005,"byte_end":278080,"line_start":50,"line_end":50,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278288,"byte_end":278318,"line_start":55,"line_end":55,"column_start":15,"column_end":45},"name":"unchecked_downcast_borrow_from","qualname":"::python::PythonObject::unchecked_downcast_borrow_from","value":"pub unsafe fn unchecked_downcast_borrow_from(&PyObject) -> &Self","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Unchecked downcast from PyObject to Self.\n Undefined behavior if the input object does not have the expected type.\n","sig":null,"attributes":[{"value":"/ Unchecked downcast from PyObject to Self.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278148,"byte_end":278193,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/ Undefined behavior if the input object does not have the expected type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278198,"byte_end":278273,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278416,"byte_end":278441,"line_start":59,"line_end":59,"column_start":12,"column_end":37},"name":"PythonObjectDowncastError","qualname":"::python::PythonObjectDowncastError","value":"PythonObjectDowncastError {  }","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278615,"byte_end":278618,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<PythonObjectDowncastError>::new","value":"pub fn new<impl Into<String>: Into<String>>(Python, impl Into<String>, PyType)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279014,"byte_end":279045,"line_start":81,"line_end":81,"column_start":11,"column_end":42},"name":"PythonObjectWithCheckedDowncast","qualname":"::python::PythonObjectWithCheckedDowncast","value":"PythonObjectWithCheckedDowncast: PythonObject","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"decl_id":null,"docs":" Trait implemented by Python object types that allow a checked downcast.\n","sig":null,"attributes":[{"value":"/ Trait implemented by Python object types that allow a checked downcast.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278928,"byte_end":279003,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279130,"byte_end":279143,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"downcast_from","qualname":"::python::PythonObjectWithCheckedDowncast::downcast_from","value":"pub fn downcast_from(Python, PyObject)\n-> Result<Self, PythonObjectDowncastError>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Cast from PyObject to a concrete Python object type.\n","sig":null,"attributes":[{"value":"/ Cast from PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279066,"byte_end":279122,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279292,"byte_end":279312,"line_start":86,"line_end":86,"column_start":8,"column_end":28},"name":"downcast_borrow_from","qualname":"::python::PythonObjectWithCheckedDowncast::downcast_borrow_from","value":"pub fn downcast_borrow_from<'a, 'p>(Python, &'a PyObject)\n-> Result<&'a Self, PythonObjectDowncastError>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Cast from PyObject to a concrete Python object type.\n","sig":null,"attributes":[{"value":"/ Cast from PyObject to a concrete Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279228,"byte_end":279284,"line_start":85,"line_end":85,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279528,"byte_end":279554,"line_start":93,"line_end":93,"column_start":11,"column_end":37},"name":"PythonObjectWithTypeObject","qualname":"::python::PythonObjectWithTypeObject","value":"PythonObjectWithTypeObject: PythonObjectWithCheckedDowncast","parent":null,"children":[{"krate":0,"index":1819}],"decl_id":null,"docs":" Trait implemented by Python object types that have a corresponding type object.\n","sig":null,"attributes":[{"value":"/ Trait implemented by Python object types that have a corresponding type object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279434,"byte_end":279517,"line_start":92,"line_end":92,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279660,"byte_end":279671,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"type_object","qualname":"::python::PythonObjectWithTypeObject::type_object","value":"pub fn type_object(Python) -> PyType","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Retrieves the type object for this Python object type.\n","sig":null,"attributes":[{"value":"/ Retrieves the type object for this Python object type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279594,"byte_end":279652,"line_start":94,"line_end":94,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279708,"byte_end":279715,"line_start":98,"line_end":98,"column_start":11,"column_end":18},"name":"PyClone","qualname":"::python::PyClone","value":"PyClone: Sized","parent":null,"children":[{"krate":0,"index":1821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279732,"byte_end":279741,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"clone_ref","qualname":"::python::PyClone::clone_ref","value":"pub fn clone_ref(&Self, Python) -> Self","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280204,"byte_end":280210,"line_start":123,"line_end":123,"column_start":11,"column_end":17},"name":"PyDrop","qualname":"::python::PyDrop","value":"PyDrop: Sized","parent":null,"children":[{"krate":0,"index":1830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280227,"byte_end":280238,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"release_ref","qualname":"::python::PyDrop::release_ref","value":"pub fn release_ref(Self, Python)","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282554,"byte_end":282573,"line_start":220,"line_end":220,"column_start":19,"column_end":38},"name":"assume_gil_acquired","qualname":"<Python>::assume_gil_acquired","value":"pub unsafe fn assume_gil_acquired() -> Python","parent":null,"children":[],"decl_id":null,"docs":" Retrieve Python instance under the assumption that the GIL is already acquired at this point,\n and stays acquired for the lifetime `'p`.","sig":null,"attributes":[{"value":"/ Retrieve Python instance under the assumption that the GIL is already acquired at this point,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282163,"byte_end":282260,"line_start":213,"line_end":213,"column_start":5,"column_end":102}},{"value":"/ and stays acquired for the lifetime `'p`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282265,"byte_end":282310,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282315,"byte_end":282318,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Because the output lifetime `'p` is not connected to any input parameter,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282323,"byte_end":282400,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ care must be taken that the compiler infers an appropriate lifetime for `'p`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282405,"byte_end":282485,"line_start":217,"line_end":217,"column_start":5,"column_end":85}},{"value":"/ when calling this function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282490,"byte_end":282521,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282526,"byte_end":282535,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282935,"byte_end":282946,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"acquire_gil","qualname":"<Python>::acquire_gil","value":"pub fn acquire_gil() -> GILGuard","parent":null,"children":[],"decl_id":null,"docs":" Acquires the global interpreter lock, which allows access to the Python runtime.","sig":null,"attributes":[{"value":"/ Acquires the global interpreter lock, which allows access to the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282631,"byte_end":282715,"line_start":224,"line_end":224,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282720,"byte_end":282723,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If the Python runtime is not already initialized, this function will initialize it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282728,"byte_end":282815,"line_start":226,"line_end":226,"column_start":5,"column_end":92}},{"value":"/ See [prepare_freethreaded_python()](fn.prepare_freethreaded_python.html) for details.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282820,"byte_end":282909,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282914,"byte_end":282923,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283090,"byte_end":283103,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"allow_threads","qualname":"<Python>::allow_threads","value":"pub fn allow_threads<T, F>(Self, F) -> T where F: Send + FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Temporarily releases the GIL, thus allowing other Python threads to run.\n","sig":null,"attributes":[{"value":"/ Temporarily releases the GIL, thus allowing other Python threads to run.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283002,"byte_end":283078,"line_start":233,"line_end":233,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283725,"byte_end":283729,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"eval","qualname":"<Python>::eval","value":"pub fn eval(Self, &str, Option<&PyDict>, Option<&PyDict>)\n-> PyResult<PyObject>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a Python expression in the given context and returns the result.","sig":null,"attributes":[{"value":"/ Evaluates a Python expression in the given context and returns the result.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283484,"byte_end":283562,"line_start":248,"line_end":248,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283567,"byte_end":283570,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If `globals` is `None`, it defaults to Python module `__main__`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283575,"byte_end":283643,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ If `locals` is `None`, it defaults to the value of `globals`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283648,"byte_end":283713,"line_start":251,"line_end":251,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":284165,"byte_end":284168,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"run","qualname":"<Python>::run","value":"pub fn run(Self, &str, Option<&PyDict>, Option<&PyDict>) -> PyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes one or more Python statements in the given context.","sig":null,"attributes":[{"value":"/ Executes one or more Python statements in the given context.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":283938,"byte_end":284002,"line_start":261,"line_end":261,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":284007,"byte_end":284010,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If `globals` is `None`, it defaults to Python module `__main__`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":284015,"byte_end":284083,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ If `locals` is `None`, it defaults to the value of `globals`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":284088,"byte_end":284153,"line_start":264,"line_end":264,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285768,"byte_end":285772,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"None","qualname":"<Python>::None","value":"pub fn None(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `None`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `None`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285628,"byte_end":285669,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285674,"byte_end":285698,"line_start":317,"line_end":317,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285747,"byte_end":285756,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286013,"byte_end":286017,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"True","qualname":"<Python>::True","value":"pub fn True(Self) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `True`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `True`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285873,"byte_end":285914,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285919,"byte_end":285943,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":285992,"byte_end":286001,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286289,"byte_end":286294,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"False","qualname":"<Python>::False","value":"pub fn False(Self) -> PyBool","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `False`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `False`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286148,"byte_end":286190,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286195,"byte_end":286219,"line_start":331,"line_end":331,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286268,"byte_end":286277,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286596,"byte_end":286610,"line_start":342,"line_end":342,"column_start":12,"column_end":26},"name":"NotImplemented","qualname":"<Python>::NotImplemented","value":"pub fn NotImplemented(Self) -> PyObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python builtin value `NotImplemented`.\n","sig":null,"attributes":[{"value":"/ Gets the Python builtin value `NotImplemented`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286446,"byte_end":286497,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286502,"byte_end":286526,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286575,"byte_end":286584,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286776,"byte_end":286784,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"get_type","qualname":"<Python>::get_type","value":"pub fn get_type<T>(Self) -> PyType where T: PythonObjectWithTypeObject","parent":null,"children":[],"decl_id":null,"docs":" Gets the Python type object for type T.\n","sig":null,"attributes":[{"value":"/ Gets the Python type object for type T.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286721,"byte_end":286764,"line_start":346,"line_end":346,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286964,"byte_end":286970,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"import","qualname":"<Python>::import","value":"pub fn import(Self, &str) -> PyResult<PyModule>","parent":null,"children":[],"decl_id":null,"docs":" Import the Python module with the specified name.\n","sig":null,"attributes":[{"value":"/ Import the Python module with the specified name.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":286899,"byte_end":286952,"line_start":354,"line_end":354,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290343,"byte_end":290370,"line_start":47,"line_end":47,"column_start":8,"column_end":35},"name":"prepare_freethreaded_python","qualname":"::pythonrun::prepare_freethreaded_python","value":"pub fn prepare_freethreaded_python()","parent":null,"children":[],"decl_id":null,"docs":" Prepares the use of Python in a free-threaded context.","sig":null,"attributes":[{"value":"/ Prepares the use of Python in a free-threaded context.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289416,"byte_end":289474,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289475,"byte_end":289478,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the Python interpreter is not already initialized, this function","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289479,"byte_end":289550,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ will initialize it with disabled signal handling","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289551,"byte_end":289603,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ (Python will not raise the `KeyboardInterrupt` exception).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289604,"byte_end":289666,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ Python signal handling depends on the notion of a 'main thread', which must be","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289667,"byte_end":289749,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ the thread that initializes the Python interpreter.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289750,"byte_end":289805,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289806,"byte_end":289809,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If both the Python interpreter and Python threading are already initialized,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289810,"byte_end":289890,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ this function has no effect.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289891,"byte_end":289923,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289924,"byte_end":289927,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289928,"byte_end":289939,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ If the Python interpreter is initialized but Python threading is not,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":289940,"byte_end":290013,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ a panic occurs.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290014,"byte_end":290033,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ It is not possible to safely access the Python runtime unless the main","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290034,"byte_end":290108,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ thread (the thread which originally initialized Python) also initializes","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290109,"byte_end":290185,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ threading.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290186,"byte_end":290200,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290201,"byte_end":290204,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When writing an extension module, the `py_module_initializer!` macro","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290205,"byte_end":290277,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ will ensure that Python threading is initialized.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290278,"byte_end":290331,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":290332,"byte_end":290335,"line_start":46,"line_end":46,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292752,"byte_end":292760,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"GILGuard","qualname":"::pythonrun::GILGuard","value":"GILGuard {  }","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894}],"decl_id":null,"docs":" RAII type that represents the Global Interpreter Lock acquisition.","sig":null,"attributes":[{"value":"/ RAII type that represents the Global Interpreter Lock acquisition.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292454,"byte_end":292524,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292525,"byte_end":292528,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292529,"byte_end":292542,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292543,"byte_end":292550,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use cpython::Python;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292551,"byte_end":292575,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292576,"byte_end":292579,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292580,"byte_end":292585,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/     let gil_guard = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292586,"byte_end":292632,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/     let py = gil_guard.python();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292633,"byte_end":292669,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/ } // GIL is released when gil_guard is dropped","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292670,"byte_end":292720,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292721,"byte_end":292728,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":292729,"byte_end":292740,"line_start":95,"line_end":95,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293423,"byte_end":293430,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"acquire","qualname":"<GILGuard>::acquire","value":"pub fn acquire() -> GILGuard","parent":null,"children":[],"decl_id":null,"docs":" Acquires the global interpreter lock, which allows access to the Python runtime.","sig":null,"attributes":[{"value":"/ Acquires the global interpreter lock, which allows access to the Python runtime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293133,"byte_end":293217,"line_start":111,"line_end":111,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293222,"byte_end":293225,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the Python runtime is not already initialized, this function will initialize it.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293230,"byte_end":293317,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ See [prepare_freethreaded_python()](fn.prepare_freethreaded_python.html) for details.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293322,"byte_end":293411,"line_start":114,"line_end":114,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293838,"byte_end":293844,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"python","qualname":"<GILGuard>::python","value":"pub fn python(&Self) -> Python","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the marker type that proves that the GIL was acquired.\n","sig":null,"attributes":[{"value":"/ Retrieves the marker type that proves that the GIL was acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293744,"byte_end":293812,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293817,"byte_end":293826,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294311,"byte_end":294323,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"GILProtected","qualname":"::pythonrun::GILProtected","value":"GILProtected {  }","parent":null,"children":[{"krate":0,"index":1902}],"decl_id":null,"docs":" Mutex-like wrapper object for data that is protected by the Python GIL.","sig":null,"attributes":[{"value":"/ Mutex-like wrapper object for data that is protected by the Python GIL.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293926,"byte_end":294001,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294002,"byte_end":294005,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294006,"byte_end":294019,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294020,"byte_end":294027,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294028,"byte_end":294052,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/ use cpython::{Python, GILProtected};","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294053,"byte_end":294093,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294094,"byte_end":294097,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let data = GILProtected::new(Cell::new(0));","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294098,"byte_end":294145,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294146,"byte_end":294149,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294150,"byte_end":294155,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/     let gil_guard = Python::acquire_gil();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294156,"byte_end":294202,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/     let cell = data.get(gil_guard.python());","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294203,"byte_end":294251,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/     cell.set(cell.get() + 1);","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294252,"byte_end":294285,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294286,"byte_end":294291,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294292,"byte_end":294299,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294728,"byte_end":294731,"line_start":163,"line_end":163,"column_start":18,"column_end":21},"name":"new","qualname":"<GILProtected<T>>::new","value":"pub const fn new(T) -> GILProtected<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `GILProtected`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `GILProtected`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294651,"byte_end":294696,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294701,"byte_end":294710,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294981,"byte_end":294984,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"get","qualname":"<GILProtected<T>>::get","value":"pub fn get<'a>(&'a Self, Python) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the data stored in the `GILProtected`.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the data stored in the `GILProtected`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294803,"byte_end":294875,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294880,"byte_end":294883,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Requires a `Python` instance as proof that the GIL is acquired.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294888,"byte_end":294955,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294960,"byte_end":294969,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":295144,"byte_end":295154,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GILProtected<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `GILProtected`, returning the wrapped value.\n","sig":null,"attributes":[{"value":"/ Consumes the `GILProtected`, returning the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":295057,"byte_end":295118,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":295123,"byte_end":295132,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"py_class","qualname":"::py_class","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1955},{"krate":0,"index":2010},{"krate":0,"index":4645},{"krate":0,"index":2013},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":4667},{"krate":0,"index":4686},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2193}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gc","qualname":"::py_class::gc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":4635},{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":1943},{"krate":0,"index":1948},{"krate":0,"index":1952}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":302087,"byte_end":302100,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"TraverseError","qualname":"::py_class::gc::TraverseError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":302150,"byte_end":302159,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"VisitProc","qualname":"::py_class::gc::VisitProc","value":"VisitProc {  }","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":302447,"byte_end":302451,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"call","qualname":"<VisitProc>::call","value":"pub fn call<T>(&Self, &T) -> Result<(), TraverseError> where T: PythonObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":303801,"byte_end":303812,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"name":"tp_traverse","qualname":"::py_class::gc::tp_traverse","value":"pub unsafe fn tp_traverse<C,\n                          F>(&str, *mut ffi::PyObject, ffi::visitproc,\n                             *mut libc::c_void, F) -> libc::c_int where\nC: PythonObject, F: FnOnce(&C, Python, VisitProc) -> Result<(), TraverseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":304979,"byte_end":304987,"line_start":137,"line_end":137,"column_start":15,"column_end":23},"name":"tp_clear","qualname":"::py_class::gc::tp_clear","value":"pub unsafe fn tp_clear<C, F>(&str, *mut ffi::PyObject, F) -> libc::c_int where\nC: PythonObject, F: FnOnce(&C, Python) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"members","qualname":"::py_class::members","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1991},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307744,"byte_end":307754,"line_start":30,"line_end":30,"column_start":11,"column_end":21},"name":"TypeMember","qualname":"::py_class::members::TypeMember","value":"TypeMember<T>","parent":null,"children":[{"krate":0,"index":1984}],"decl_id":null,"docs":" Represents something that can be added as a member to a Python class/type.","sig":null,"attributes":[{"value":"/ Represents something that can be added as a member to a Python class/type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307580,"byte_end":307658,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307659,"byte_end":307662,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ T: type of rust class used for instances of the Python class/type.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307663,"byte_end":307733,"line_start":29,"line_end":29,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":308082,"byte_end":308097,"line_start":40,"line_end":40,"column_start":15,"column_end":30},"name":"into_descriptor","qualname":"::py_class::members::TypeMember::into_descriptor","value":"pub unsafe fn into_descriptor(Self, Python, *mut ffi::PyTypeObject)\n-> PyResult<PyObject>","parent":{"krate":0,"index":1982},"children":[],"decl_id":null,"docs":" Convert the type member into a python object\n that can be stored in the type dict.","sig":null,"attributes":[{"value":"/ Convert the type member into a python object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307791,"byte_end":307839,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/ that can be stored in the type dict.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307844,"byte_end":307884,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307889,"byte_end":307892,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Because the member may expect `self` values to be of type `T`,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307897,"byte_end":307963,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ `ty` must be T::type_object() or a derived class.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":307968,"byte_end":308021,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/ (otherwise the behavior is undefined)","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":308026,"byte_end":308067,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":310942,"byte_end":310966,"line_start":111,"line_end":111,"column_start":12,"column_end":36},"name":"InstanceMethodDescriptor","qualname":"::py_class::members::InstanceMethodDescriptor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":311048,"byte_end":311081,"line_start":114,"line_end":114,"column_start":15,"column_end":48},"name":"create_instance_method_descriptor","qualname":"::py_class::members::create_instance_method_descriptor","value":"pub unsafe fn create_instance_method_descriptor<T>(*mut ffi::PyMethodDef)\n-> InstanceMethodDescriptor<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":311024,"byte_end":311033,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":313239,"byte_end":313260,"line_start":168,"line_end":168,"column_start":12,"column_end":33},"name":"ClassMethodDescriptor","qualname":"::py_class::members::ClassMethodDescriptor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":313310,"byte_end":313340,"line_start":171,"line_end":171,"column_start":15,"column_end":45},"name":"create_class_method_descriptor","qualname":"::py_class::members::create_class_method_descriptor","value":"pub unsafe fn create_class_method_descriptor(*mut ffi::PyMethodDef)\n-> ClassMethodDescriptor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":313286,"byte_end":313295,"line_start":170,"line_end":170,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slots","qualname":"::py_class::slots","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2081},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2110},{"krate":0,"index":4647},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4653},{"krate":0,"index":4655},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4663},{"krate":0,"index":4665},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":340005,"byte_end":340020,"line_start":77,"line_end":77,"column_start":11,"column_end":26},"name":"TPFLAGS_DEFAULT","qualname":"::py_class::slots::TPFLAGS_DEFAULT","value":"::libc::c_ulong","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":339963,"byte_end":339994,"line_start":76,"line_end":76,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":341328,"byte_end":341341,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"build_tp_name","qualname":"::py_class::slots::build_tp_name","value":"pub fn build_tp_name(Option<&str>, &str) -> *mut c_char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":341686,"byte_end":341705,"line_start":118,"line_end":118,"column_start":26,"column_end":45},"name":"tp_dealloc_callback","qualname":"::py_class::slots::tp_dealloc_callback","value":"pub unsafe extern \"C\" fn tp_dealloc_callback<T>(*mut ffi::PyObject) where\nT: super::BaseObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":346369,"byte_end":346391,"line_start":247,"line_end":247,"column_start":15,"column_end":37},"name":"mp_ass_subscript_error","qualname":"::py_class::slots::mp_ass_subscript_error","value":"pub unsafe fn mp_ass_subscript_error(*mut ffi::PyObject, &[u8]) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":351744,"byte_end":351754,"line_start":407,"line_end":407,"column_start":8,"column_end":18},"name":"extract_op","qualname":"::py_class::slots::extract_op","value":"pub fn extract_op(Python, c_int) -> PyResult<CompareOp>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":355627,"byte_end":355646,"line_start":507,"line_end":507,"column_start":8,"column_end":27},"name":"type_error_to_false","qualname":"::py_class::slots::type_error_to_false","value":"pub fn type_error_to_false(Python, PyErr) -> PyResult<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":356814,"byte_end":356835,"line_start":541,"line_end":541,"column_start":12,"column_end":33},"name":"UnitCallbackConverter","qualname":"::py_class::slots::UnitCallbackConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357066,"byte_end":357084,"line_start":557,"line_end":557,"column_start":12,"column_end":30},"name":"LenResultConverter","qualname":"::py_class::slots::LenResultConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357495,"byte_end":357518,"line_start":577,"line_end":577,"column_start":12,"column_end":35},"name":"IterNextResultConverter","qualname":"::py_class::slots::IterNextResultConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":358066,"byte_end":358080,"line_start":601,"line_end":601,"column_start":11,"column_end":25},"name":"WrappingCastTo","qualname":"::py_class::slots::WrappingCastTo","value":"WrappingCastTo<T>","parent":null,"children":[{"krate":0,"index":2112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":358093,"byte_end":358106,"line_start":602,"line_end":602,"column_start":8,"column_end":21},"name":"wrapping_cast","qualname":"::py_class::slots::WrappingCastTo::wrapping_cast","value":"pub fn wrapping_cast(Self) -> T","parent":{"krate":0,"index":2110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":358685,"byte_end":358698,"line_start":626,"line_end":626,"column_start":12,"column_end":25},"name":"HashConverter","qualname":"::py_class::slots::HashConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":359091,"byte_end":359104,"line_start":650,"line_end":650,"column_start":12,"column_end":25},"name":"BoolConverter","qualname":"::py_class::slots::BoolConverter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":360647,"byte_end":360654,"line_start":695,"line_end":695,"column_start":26,"column_end":33},"name":"sq_item","qualname":"::py_class::slots::sq_item","value":"pub unsafe extern \"C\" fn sq_item(*mut ffi::PyObject, ffi::Py_ssize_t)\n-> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":" Used as implementation in the `sq_item` slot to forward calls to the `mp_subscript` slot.\n","sig":null,"attributes":[{"value":"/ Used as implementation in the `sq_item` slot to forward calls to the `mp_subscript` slot.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":360528,"byte_end":360621,"line_start":694,"line_end":694,"column_start":1,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296889,"byte_end":296891,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"Lt","qualname":"::py_class::CompareOp::Lt","value":"CompareOp::Lt","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296919,"byte_end":296921,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"Le","qualname":"::py_class::CompareOp::Le","value":"CompareOp::Le","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296949,"byte_end":296951,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Eq","qualname":"::py_class::CompareOp::Eq","value":"CompareOp::Eq","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296979,"byte_end":296981,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"Ne","qualname":"::py_class::CompareOp::Ne","value":"CompareOp::Ne","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297009,"byte_end":297011,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"Gt","qualname":"::py_class::CompareOp::Gt","value":"CompareOp::Gt","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297039,"byte_end":297041,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"Ge","qualname":"::py_class::CompareOp::Ge","value":"CompareOp::Ge","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296873,"byte_end":296882,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"CompareOp","qualname":"::py_class::CompareOp","value":"pub enum CompareOp { Lt = , Le = , Eq = , Ne = , Gt = , Ge = , }","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4677},{"krate":0,"index":4680},{"krate":0,"index":4683}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297228,"byte_end":297256,"line_start":59,"line_end":59,"column_start":11,"column_end":39},"name":"PythonObjectFromPyClassMacro","qualname":"::py_class::PythonObjectFromPyClassMacro","value":"PythonObjectFromPyClassMacro: python::PythonObjectWithTypeObject","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"decl_id":null,"docs":" Trait implemented by the types produced by the `py_class!()` macro.","sig":null,"attributes":[{"value":"/ Trait implemented by the types produced by the `py_class!()` macro.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297068,"byte_end":297139,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297140,"byte_end":297143,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This is an unstable implementation detail; do not implement manually!","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297144,"byte_end":297217,"line_start":58,"line_end":58,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297429,"byte_end":297439,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"initialize","qualname":"::py_class::PythonObjectFromPyClassMacro::initialize","value":"pub fn initialize(Python, Option<&str>) -> PyResult<PyType>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":" Initializes the class.","sig":null,"attributes":[{"value":"/ Initializes the class.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297299,"byte_end":297325,"line_start":60,"line_end":60,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297330,"byte_end":297333,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ module_name: the name of the parent module into which the class will be placed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297338,"byte_end":297421,"line_start":62,"line_end":62,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297565,"byte_end":297578,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"add_to_module","qualname":"::py_class::PythonObjectFromPyClassMacro::add_to_module","value":"pub fn add_to_module(Python, &PyModule) -> PyResult<()>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":" Initializes the class and adds it to the module.\n","sig":null,"attributes":[{"value":"/ Initializes the class and adds it to the module.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297505,"byte_end":297557,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297662,"byte_end":297673,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"data_offset","qualname":"::py_class::data_offset","value":"pub fn data_offset<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297630,"byte_end":297639,"line_start":69,"line_end":69,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297875,"byte_end":297888,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"data_new_size","qualname":"::py_class::data_new_size","value":"pub fn data_new_size<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297843,"byte_end":297852,"line_start":77,"line_end":77,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298017,"byte_end":298025,"line_start":85,"line_end":85,"column_start":15,"column_end":23},"name":"data_get","qualname":"::py_class::data_get","value":"pub unsafe fn data_get<'a, T>(Python, &'a PyObject, usize) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297978,"byte_end":297987,"line_start":83,"line_end":83,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298214,"byte_end":298223,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"name":"data_init","qualname":"::py_class::data_init","value":"pub unsafe fn data_init<'a, T>(Python, &'a PyObject, usize, T) where T: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298175,"byte_end":298184,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298455,"byte_end":298464,"line_start":102,"line_end":102,"column_start":15,"column_end":24},"name":"data_drop","qualname":"::py_class::data_drop","value":"pub unsafe fn data_drop<T>(Python, *mut ffi::PyObject, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298416,"byte_end":298425,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298644,"byte_end":298652,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"is_ready","qualname":"::py_class::is_ready","value":"pub fn is_ready(Python, &ffi::PyTypeObject) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298612,"byte_end":298621,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298839,"byte_end":298849,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"BaseObject","qualname":"::py_class::BaseObject","value":"BaseObject: PythonObject","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192}],"decl_id":null,"docs":" A PythonObject that is usable as a base type with the `py_class!()` macro.\n","sig":null,"attributes":[{"value":"/ A PythonObject that is usable as a base type with the `py_class!()` macro.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298750,"byte_end":298828,"line_start":113,"line_end":113,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298920,"byte_end":298924,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"size","qualname":"::py_class::BaseObject::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":" Gets the size of the object, in bytes.\n","sig":null,"attributes":[{"value":"/ Gets the size of the object, in bytes.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298870,"byte_end":298912,"line_start":115,"line_end":115,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298947,"byte_end":298955,"line_start":118,"line_end":118,"column_start":10,"column_end":18},"name":"InitType","qualname":"::py_class::BaseObject::InitType","value":"type InitType;","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299185,"byte_end":299190,"line_start":124,"line_end":124,"column_start":15,"column_end":20},"name":"alloc","qualname":"::py_class::BaseObject::alloc","value":"pub unsafe fn alloc(Python, &PyType, Self::InitType) -> PyResult<PyObject>","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":" Allocates a new object (usually by calling ty->tp_alloc),\n and initializes it using init_val.\n `ty` must be derived from the Self type, and the resulting object\n must be of type `ty`.\n","sig":null,"attributes":[{"value":"/ Allocates a new object (usually by calling ty->tp_alloc),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298962,"byte_end":299023,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ and initializes it using init_val.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299028,"byte_end":299066,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/ `ty` must be derived from the Self type, and the resulting object","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299071,"byte_end":299140,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ must be of type `ty`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299145,"byte_end":299170,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299462,"byte_end":299469,"line_start":129,"line_end":129,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::py_class::BaseObject::dealloc","value":"pub unsafe fn dealloc(Python, *mut ffi::PyObject)","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":" Calls the rust destructor for the object and frees the memory\n (usually by calling ptr->ob_type->tp_free).\n This function is used as tp_dealloc implementation.\n","sig":null,"attributes":[{"value":"/ Calls the rust destructor for the object and frees the memory","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299270,"byte_end":299335,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/ (usually by calling ptr->ob_type->tp_free).","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299340,"byte_end":299387,"line_start":127,"line_end":127,"column_start":5,"column_end":52}},{"value":"/ This function is used as tp_dealloc implementation.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299392,"byte_end":299447,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368653,"byte_end":368668,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"PySharedRefCell","qualname":"::sharedref::PySharedRefCell","value":"PySharedRefCell {  }","parent":null,"children":[{"krate":0,"index":4690},{"krate":0,"index":4691}],"decl_id":null,"docs":" A mutable memory location shareable immutably across Python objects.","sig":null,"attributes":[{"value":"/ A mutable memory location shareable immutably across Python objects.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366713,"byte_end":366785,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366786,"byte_end":366789,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This is a [RefCell] that can also be borrowed immutably by another Python","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366790,"byte_end":366867,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366868,"byte_end":366879,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366880,"byte_end":366883,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The primary use case is to implement a Python iterator over a Rust","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366884,"byte_end":366954,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ iterator. Since a Python object cannot hold a lifetime-bound object,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":366955,"byte_end":367027,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ `Iter<'a, T>` cannot be a data field of the Python iterator object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367028,"byte_end":367099,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ [PySharedRef::leak_immutable()] provides a way around this issue.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367100,"byte_end":367169,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367170,"byte_end":367173,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367174,"byte_end":367181,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # use cpython::*;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367182,"byte_end":367203,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ # use std::cell::RefCell;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367204,"byte_end":367233,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ # use std::slice::Iter;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367234,"byte_end":367261,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ py_class!(pub class List |py| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367262,"byte_end":367297,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/     @shared data rust_vec: Vec<i32>;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367298,"byte_end":367338,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367339,"byte_end":367342,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     def __iter__(&self) -> PyResult<ListIterator> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367343,"byte_end":367398,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/         let leaked = self.rust_vec(py).leak_immutable();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367399,"byte_end":367459,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/         ListIterator::create_instance(","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367460,"byte_end":367502,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/             py,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367503,"byte_end":367522,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/             RefCell::new(unsafe { leaked.map(py, |o| o.iter()) }),","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367523,"byte_end":367593,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/         )","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367594,"byte_end":367607,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367608,"byte_end":367617,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367618,"byte_end":367625,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367626,"byte_end":367629,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ py_class!(pub class ListIterator |py| {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367630,"byte_end":367673,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     data rust_iter: RefCell<UnsafePyLeaked<Iter<'static, i32>>>;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367674,"byte_end":367742,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367743,"byte_end":367746,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     def __next__(&self) -> PyResult<Option<PyInt>> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367747,"byte_end":367803,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/         let mut leaked = self.rust_iter(py).borrow_mut();","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367804,"byte_end":367865,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/         let mut iter = unsafe { leaked.try_borrow_mut(py)? };","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367866,"byte_end":367931,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/         Ok(iter.next().map(|v| v.to_py_object(py)))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367932,"byte_end":367987,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367988,"byte_end":367997,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":367998,"byte_end":368001,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     def __iter__(&self) -> PyResult<Self> {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368002,"byte_end":368049,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/         Ok(self.clone_ref(py))","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368050,"byte_end":368084,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368085,"byte_end":368094,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368095,"byte_end":368102,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368103,"byte_end":368110,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368111,"byte_end":368114,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The borrow rules are enforced dynamically in a similar manner to the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368115,"byte_end":368187,"line_start":72,"line_end":72,"column_start":1,"column_end":73}},{"value":"/ Python iterator.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368188,"byte_end":368208,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368209,"byte_end":368212,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ `PySharedRefCell` is merely a data struct to be stored in a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368213,"byte_end":368291,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ Any further operation will be performed through [PySharedRef], which is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368292,"byte_end":368367,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ a lifetime-bound reference to the `PySharedRefCell`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368368,"byte_end":368424,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368425,"byte_end":368428,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [RefCell]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368429,"byte_end":368498,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ [PySharedRef]: struct.PySharedRef.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368499,"byte_end":368541,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/ [PySharedRef::leak_immutable()]: struct.PySharedRef.html#method.leak_immutable","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368542,"byte_end":368624,"line_start":81,"line_end":81,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368876,"byte_end":368879,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<PySharedRefCell<T>>::new","value":"pub fn new(T) -> PySharedRefCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PySharedRefCell` containing `value`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PySharedRefCell` containing `value`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368766,"byte_end":368821,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369442,"byte_end":369453,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"PySharedRef","qualname":"::sharedref::PySharedRef","value":"PySharedRef {  }","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262}],"decl_id":null,"docs":" A reference to `PySharedRefCell` owned by a Python object.","sig":null,"attributes":[{"value":"/ A reference to `PySharedRefCell` owned by a Python object.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369028,"byte_end":369090,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369091,"byte_end":369094,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This is a lifetime-bound reference to the [PySharedRefCell] data field,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369095,"byte_end":369170,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ and will be created by the automatically generated accessor function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369171,"byte_end":369244,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369245,"byte_end":369248,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369249,"byte_end":369262,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ impl MyType {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369263,"byte_end":369280,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/     fn data_name<'a>(&'a self, py: Python<'a>) -> PySharedRef<'a, T> { ... }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369281,"byte_end":369361,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369362,"byte_end":369367,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369368,"byte_end":369375,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369376,"byte_end":369379,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [PySharedRefCell]: struct.PySharedRefCell.html","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369380,"byte_end":369430,"line_start":110,"line_end":110,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369911,"byte_end":369914,"line_start":127,"line_end":127,"column_start":19,"column_end":22},"name":"new","qualname":"<PySharedRef>::new","value":"pub unsafe fn new(Python, &'a PyObject, &'a PySharedRefCell<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to the given `PySharedRefCell` owned by the\n given `PyObject`.","sig":null,"attributes":[{"value":"/ Creates a reference to the given `PySharedRefCell` owned by the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369625,"byte_end":369692,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ given `PyObject`.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369697,"byte_end":369718,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369723,"byte_end":369726,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369731,"byte_end":369743,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369748,"byte_end":369751,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The `data` must be owned by the `owner`. Otherwise, `leak_immutable()`","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369756,"byte_end":369830,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ would create an invalid reference.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369835,"byte_end":369873,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370269,"byte_end":370275,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"borrow","qualname":"<PySharedRef>::borrow","value":"pub fn borrow(&Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370125,"byte_end":370165,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370170,"byte_end":370173,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370178,"byte_end":370190,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370195,"byte_end":370198,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370203,"byte_end":370257,"line_start":140,"line_end":140,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370494,"byte_end":370504,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"try_borrow","qualname":"<PySharedRef>::try_borrow","value":"pub fn try_borrow(&Self) -> result::Result<Ref, BorrowError>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value, returning an error if the value\n is currently mutably borrowed.\n","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value, returning an error if the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370371,"byte_end":370443,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370448,"byte_end":370482,"line_start":146,"line_end":146,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370984,"byte_end":370994,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<PySharedRef>::borrow_mut","value":"pub fn borrow_mut(&Self) -> RefMut","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370782,"byte_end":370820,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370825,"byte_end":370828,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Any existing leaked references will be invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370833,"byte_end":370888,"line_start":156,"line_end":156,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370893,"byte_end":370896,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370901,"byte_end":370913,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370918,"byte_end":370921,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":370926,"byte_end":370972,"line_start":160,"line_end":160,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371202,"byte_end":371216,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"try_borrow_mut","qualname":"<PySharedRef>::try_borrow_mut","value":"pub fn try_borrow_mut(&Self) -> result::Result<RefMut, BorrowMutError>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value, returning an error if the value\n is currently borrowed.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value, returning an error if the value","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371089,"byte_end":371159,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ is currently borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371164,"byte_end":371190,"line_start":166,"line_end":166,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371943,"byte_end":371957,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"leak_immutable","qualname":"<PySharedRef>::leak_immutable","value":"pub fn leak_immutable(&Self) -> UnsafePyLeaked<&'static T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an immutable reference which is not bound to lifetime.","sig":null,"attributes":[{"value":"/ Creates an immutable reference which is not bound to lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371773,"byte_end":371839,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371844,"byte_end":371847,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371852,"byte_end":371864,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371869,"byte_end":371872,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Panics if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":371877,"byte_end":371931,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":372226,"byte_end":372244,"line_start":192,"line_end":192,"column_start":12,"column_end":30},"name":"try_leak_immutable","qualname":"<PySharedRef>::try_leak_immutable","value":"pub fn try_leak_immutable(&Self)\n-> result::Result<UnsafePyLeaked<&'static T>, BorrowError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an immutable reference which is not bound to lifetime,\n returning an error if the value is currently mutably borrowed.\n","sig":null,"attributes":[{"value":"/ Creates an immutable reference which is not bound to lifetime,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":372077,"byte_end":372143,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ returning an error if the value is currently mutably borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":372148,"byte_end":372214,"line_start":191,"line_end":191,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377167,"byte_end":377181,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnsafePyLeaked","qualname":"::sharedref::UnsafePyLeaked","value":"UnsafePyLeaked {  }","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295}],"decl_id":null,"docs":" An immutable reference to `PySharedRefCell` value, not bound to lifetime.","sig":null,"attributes":[{"value":"/ An immutable reference to `PySharedRefCell` value, not bound to lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376291,"byte_end":376368,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376369,"byte_end":376372,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ The reference will be invalidated once the original value is mutably","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376373,"byte_end":376445,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ borrowed.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376446,"byte_end":376459,"line_start":301,"line_end":301,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376460,"byte_end":376463,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376464,"byte_end":376476,"line_start":303,"line_end":303,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376477,"byte_end":376480,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Even though `UnsafePyLeaked` tries to enforce the real lifetime of the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376481,"byte_end":376555,"line_start":305,"line_end":305,"column_start":1,"column_end":75}},{"value":"/ underlying object, the object having the artificial `'static` lifetime","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376556,"byte_end":376630,"line_start":306,"line_end":306,"column_start":1,"column_end":75}},{"value":"/ may be exposed to your Rust code. You must be careful to not make a bare","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376631,"byte_end":376707,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ reference outlive the actual object lifetime.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376708,"byte_end":376757,"line_start":308,"line_end":308,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376758,"byte_end":376761,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376762,"byte_end":376775,"line_start":310,"line_end":310,"column_start":1,"column_end":14}},{"value":"/ let outer;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376776,"byte_end":376790,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/ unsafe { leaked.map(py, |o| { outer = o }) };  // Bad","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376791,"byte_end":376848,"line_start":312,"line_end":312,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376849,"byte_end":376856,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376857,"byte_end":376860,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376861,"byte_end":376874,"line_start":315,"line_end":315,"column_start":1,"column_end":14}},{"value":"/ let outer;","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376875,"byte_end":376889,"line_start":316,"line_end":316,"column_start":1,"column_end":15}},{"value":"/ let mut leaked_iter = leaked.map(py, |o| o.iter());","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376890,"byte_end":376945,"line_start":317,"line_end":317,"column_start":1,"column_end":56}},{"value":"/ {","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376946,"byte_end":376951,"line_start":318,"line_end":318,"column_start":1,"column_end":6}},{"value":"/     let mut iter = unsafe { leaked_iter.try_borrow_mut(py) };","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376952,"byte_end":377017,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/     let inner = iter.next();  // Good, in borrow scope","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377018,"byte_end":377076,"line_start":320,"line_end":320,"column_start":1,"column_end":59}},{"value":"/     outer = inner;            // Bad, &'static T may outlive","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377077,"byte_end":377141,"line_start":321,"line_end":321,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377142,"byte_end":377147,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377148,"byte_end":377155,"line_start":323,"line_end":323,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378510,"byte_end":378520,"line_start":356,"line_end":356,"column_start":19,"column_end":29},"name":"try_borrow","qualname":"<UnsafePyLeaked<T>>::try_borrow","value":"pub unsafe fn try_borrow<'a>(&'a Self, Python) -> PyResult<PyLeakedRef>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378217,"byte_end":378257,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378262,"byte_end":378265,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Borrowing fails if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378270,"byte_end":378339,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378344,"byte_end":378347,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378352,"byte_end":378364,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378369,"byte_end":378372,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the innermost object is artificial. Do not obtain and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378377,"byte_end":378450,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ copy it out of the borrow scope.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378455,"byte_end":378491,"line_start":355,"line_end":355,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379201,"byte_end":379215,"line_start":375,"line_end":375,"column_start":19,"column_end":33},"name":"try_borrow_mut","qualname":"<UnsafePyLeaked<T>>::try_borrow_mut","value":"pub unsafe fn try_borrow_mut<'a>(&'a mut Self, Python)\n-> PyResult<PyLeakedRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value.","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378759,"byte_end":378797,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378802,"byte_end":378805,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Borrowing fails if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378810,"byte_end":378879,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378884,"byte_end":378887,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Typically `T` is an iterator. If `T` is an immutable reference,","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378892,"byte_end":378959,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ `get_mut()` is useless since the inner value can't be mutated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":378964,"byte_end":379030,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379035,"byte_end":379038,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379043,"byte_end":379055,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379060,"byte_end":379063,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the innermost object is artificial. Do not obtain and","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379068,"byte_end":379141,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ copy it out of the borrow scope.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379146,"byte_end":379182,"line_start":374,"line_end":374,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380606,"byte_end":380609,"line_start":418,"line_end":418,"column_start":19,"column_end":22},"name":"map","qualname":"<UnsafePyLeaked<T>>::map","value":"pub unsafe fn map<U, impl FnOnce(T) -> U: FnOnce(T) ->\n                  U>(Self, Python, impl FnOnce(T) -> U) -> UnsafePyLeaked<U>","parent":null,"children":[],"decl_id":null,"docs":" Converts the inner value by the given function.","sig":null,"attributes":[{"value":"/ Converts the inner value by the given function.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379859,"byte_end":379910,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379915,"byte_end":379918,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Typically `T` is a static reference to a collection, and `U` is an","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379923,"byte_end":379993,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ iterator of that collection.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379998,"byte_end":380030,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380035,"byte_end":380038,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380043,"byte_end":380055,"line_start":404,"line_end":404,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380060,"byte_end":380063,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Panics if the underlying reference has been invalidated.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380068,"byte_end":380128,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380133,"byte_end":380136,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This is typically called immediately after the `UnsafePyLeaked` is","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380141,"byte_end":380211,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ obtained. At this time, the reference must be valid and no panic","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380216,"byte_end":380284,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ would occur.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380289,"byte_end":380305,"line_start":410,"line_end":410,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380310,"byte_end":380313,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380318,"byte_end":380330,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380335,"byte_end":380338,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the object passed in to the function `f` is artificial.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380343,"byte_end":380418,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ It's typically a static reference, but is valid only while the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380423,"byte_end":380489,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/ corresponding `UnsafePyLeaked` is alive. Do not copy it out of the","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380494,"byte_end":380564,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ function call.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":380569,"byte_end":380587,"line_start":417,"line_end":417,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381447,"byte_end":381458,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"PyLeakedRef","qualname":"::sharedref::PyLeakedRef","value":"PyLeakedRef {  }","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312}],"decl_id":null,"docs":" An immutably borrowed reference to a leaked value.\n","sig":null,"attributes":[{"value":"/ An immutably borrowed reference to a leaked value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381381,"byte_end":381435,"line_start":438,"line_end":438,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381725,"byte_end":381739,"line_start":453,"line_end":453,"column_start":12,"column_end":26},"name":"PyLeakedRefMut","qualname":"::sharedref::PyLeakedRefMut","value":"PyLeakedRefMut {  }","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322}],"decl_id":null,"docs":" A mutably borrowed reference to a leaked value.\n","sig":null,"attributes":[{"value":"/ A mutably borrowed reference to a leaked value.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381662,"byte_end":381713,"line_start":452,"line_end":452,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7107,"byte_end":7114,"line_start":226,"line_end":226,"column_start":9,"column_end":16},"name":"_detail","qualname":"::_detail","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2369}],"decl_id":null,"docs":" Private re-exports for macros. Do not use.\n","sig":null,"attributes":[{"value":"/ Private re-exports for macros. Do not use.","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7037,"byte_end":7083,"line_start":224,"line_end":224,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7129,"byte_end":7132,"line_start":227,"line_end":227,"column_start":13,"column_end":16},"name":"ffi","qualname":"::_detail::ffi","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":7184,"byte_end":7188,"line_start":230,"line_end":230,"column_start":13,"column_end":17},"name":"libc","qualname":"::_detail::libc","value":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2340},{"krate":0,"index":2343}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2373},"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":12055,"byte_end":12081,"line_start":372,"line_end":372,"column_start":15,"column_end":41},"name":"py_module_initializer_impl","qualname":"::py_module_initializer_impl","value":"pub unsafe fn py_module_initializer_impl(*mut ffi::PyModuleDef,\n                                         fn(: Python, : &PyModule)\n                                             -> PyResult<()>)\n-> *mut ffi::PyObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"python3-sys\")","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":12009,"byte_end":12040,"line_start":371,"line_end":371,"column_start":1,"column_end":32}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14893,"byte_end":14909,"line_start":38,"line_end":38,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38049,"byte_end":38057,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38082,"byte_end":38090,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38289,"byte_end":38300,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41956,"byte_end":41964,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":58878,"byte_end":58886,"line_start":603,"line_end":603,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59025,"byte_end":59033,"line_start":610,"line_end":610,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59491,"byte_end":59503,"line_start":624,"line_end":624,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69954,"byte_end":69955,"line_start":137,"line_end":137,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":71443,"byte_end":71449,"line_start":199,"line_end":199,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":72050,"byte_end":72056,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78970,"byte_end":78975,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88705,"byte_end":88710,"line_start":428,"line_end":428,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88892,"byte_end":88897,"line_start":436,"line_end":436,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89256,"byte_end":89261,"line_start":447,"line_end":447,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98387,"byte_end":98412,"line_start":174,"line_end":174,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98799,"byte_end":98828,"line_start":192,"line_end":192,"column_start":37,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":100215,"byte_end":100226,"line_start":247,"line_end":247,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112245,"byte_end":112253,"line_start":333,"line_end":333,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112278,"byte_end":112286,"line_start":335,"line_end":335,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112651,"byte_end":112659,"line_start":345,"line_end":345,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119810,"byte_end":119816,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140449,"byte_end":140458,"line_start":519,"line_end":519,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146220,"byte_end":146226,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":149995,"byte_end":150002,"line_start":138,"line_end":138,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":150434,"byte_end":150442,"line_start":156,"line_end":156,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161408,"byte_end":161426,"line_start":152,"line_end":152,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164030,"byte_end":164040,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164804,"byte_end":164814,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167611,"byte_end":167617,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":170200,"byte_end":170214,"line_start":112,"line_end":112,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":171656,"byte_end":171659,"line_start":159,"line_end":159,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176771,"byte_end":176779,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":183065,"byte_end":183071,"line_start":41,"line_end":41,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":183227,"byte_end":183233,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187292,"byte_end":187299,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201402,"byte_end":201410,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201435,"byte_end":201443,"line_start":58,"line_end":58,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201539,"byte_end":201547,"line_start":61,"line_end":61,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201728,"byte_end":201736,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202129,"byte_end":202137,"line_start":92,"line_end":92,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202533,"byte_end":202541,"line_start":110,"line_end":110,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202689,"byte_end":202697,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1303},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":208230,"byte_end":208238,"line_start":272,"line_end":272,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":208491,"byte_end":208499,"line_start":281,"line_end":281,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210526,"byte_end":210536,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":217322,"byte_end":217325,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232112,"byte_end":232117,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234792,"byte_end":234799,"line_start":116,"line_end":116,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":235143,"byte_end":235151,"line_start":132,"line_end":132,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243300,"byte_end":243312,"line_start":124,"line_end":124,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243462,"byte_end":243474,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243616,"byte_end":243628,"line_start":138,"line_end":138,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243750,"byte_end":243762,"line_start":145,"line_end":145,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247221,"byte_end":247229,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252055,"byte_end":252062,"line_start":356,"line_end":356,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":255980,"byte_end":255983,"line_start":468,"line_end":468,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":256465,"byte_end":256471,"line_start":484,"line_end":484,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":256970,"byte_end":256973,"line_start":500,"line_end":500,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":257466,"byte_end":257472,"line_start":513,"line_end":513,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":258061,"byte_end":258064,"line_start":526,"line_end":526,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264209,"byte_end":264216,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269440,"byte_end":269446,"line_start":216,"line_end":216,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271777,"byte_end":271783,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273567,"byte_end":273573,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273695,"byte_end":273701,"line_start":87,"line_end":87,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278572,"byte_end":278597,"line_start":65,"line_end":65,"column_start":10,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279793,"byte_end":279794,"line_start":102,"line_end":102,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280039,"byte_end":280045,"line_start":113,"line_end":113,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280280,"byte_end":280281,"line_start":127,"line_end":127,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280503,"byte_end":280509,"line_start":140,"line_end":140,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":281098,"byte_end":281106,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":281721,"byte_end":281727,"line_start":191,"line_end":191,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282146,"byte_end":282152,"line_start":212,"line_end":212,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":287088,"byte_end":287113,"line_start":360,"line_end":360,"column_start":30,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293012,"byte_end":293020,"line_start":104,"line_end":104,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293118,"byte_end":293126,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294375,"byte_end":294387,"line_start":152,"line_end":152,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294601,"byte_end":294613,"line_start":158,"line_end":158,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294629,"byte_end":294641,"line_start":160,"line_end":160,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":302420,"byte_end":302429,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":308199,"byte_end":308200,"line_start":43,"line_end":43,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":311251,"byte_end":311275,"line_start":120,"line_end":120,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":313477,"byte_end":313498,"line_start":177,"line_end":177,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":356869,"byte_end":356890,"line_start":543,"line_end":543,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357121,"byte_end":357139,"line_start":559,"line_end":559,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357562,"byte_end":357585,"line_start":579,"line_end":579,"column_start":42,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":358734,"byte_end":358747,"line_start":628,"line_end":628,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":359140,"byte_end":359153,"line_start":652,"line_end":652,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299531,"byte_end":299539,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368741,"byte_end":368756,"line_start":88,"line_end":88,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369600,"byte_end":369611,"line_start":118,"line_end":118,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":374584,"byte_end":374597,"line_start":242,"line_end":242,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":375982,"byte_end":375996,"line_start":285,"line_end":285,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376185,"byte_end":376199,"line_start":292,"line_end":292,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377709,"byte_end":377723,"line_start":338,"line_end":338,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379835,"byte_end":379849,"line_start":398,"line_end":398,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381564,"byte_end":381575,"line_start":444,"line_end":444,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381849,"byte_end":381863,"line_start":458,"line_end":458,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381983,"byte_end":381997,"line_start":466,"line_end":466,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":6806,"byte_end":6814,"line_start":208,"line_end":208,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":6824,"byte_end":6830,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\mod.rs","byte_start":119363,"byte_end":119366,"line_start":141,"line_end":141,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":883}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\lib.rs","byte_start":6961,"byte_end":6969,"line_start":218,"line_end":218,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1913}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296311,"byte_end":296313,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1914}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296339,"byte_end":296346,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1955}},{"kind":"Mod","span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":296563,"byte_end":296568,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2013}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\argparse.rs","byte_start":14893,"byte_end":14909,"line_start":38,"line_end":38,"column_start":10,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38049,"byte_end":38057,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38082,"byte_end":38090,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":38289,"byte_end":38300,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":41956,"byte_end":41964,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":58878,"byte_end":58886,"line_start":603,"line_end":603,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":1829}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59025,"byte_end":59033,"line_start":610,"line_end":610,"column_start":15,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\buffer.rs","byte_start":59491,"byte_end":59503,"line_start":624,"line_end":624,"column_start":15,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":68392,"byte_end":68397,"line_start":102,"line_end":102,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":69954,"byte_end":69955,"line_start":137,"line_end":137,"column_start":37,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":316}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":71443,"byte_end":71449,"line_start":199,"line_end":199,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\conversion.rs","byte_start":72050,"byte_end":72056,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":78970,"byte_end":78975,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88705,"byte_end":88710,"line_start":428,"line_end":428,"column_start":17,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2436},"to":{"krate":0,"index":1829}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":88892,"byte_end":88897,"line_start":436,"line_end":436,"column_start":18,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2436},"to":{"krate":0,"index":1820}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\err.rs","byte_start":89256,"byte_end":89261,"line_start":447,"line_end":447,"column_start":64,"column_end":69},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98387,"byte_end":98412,"line_start":174,"line_end":174,"column_start":34,"column_end":59},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":98799,"byte_end":98828,"line_start":192,"line_end":192,"column_start":37,"column_end":66},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":516},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\function.rs","byte_start":100215,"byte_end":100226,"line_start":247,"line_end":247,"column_start":19,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":532},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":101879,"byte_end":101891,"line_start":29,"line_end":29,"column_start":27,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1799},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112245,"byte_end":112253,"line_start":333,"line_end":333,"column_start":25,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112278,"byte_end":112286,"line_start":335,"line_end":335,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objectprotocol.rs","byte_start":112651,"byte_end":112659,"line_start":345,"line_end":345,"column_start":23,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\boolobject.rs","byte_start":119810,"byte_end":119816,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\capsule.rs","byte_start":140449,"byte_end":140458,"line_start":519,"line_end":519,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":146220,"byte_end":146226,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":149995,"byte_end":150002,"line_start":138,"line_end":138,"column_start":43,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":1,"index":1092},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\dict.rs","byte_start":150434,"byte_end":150442,"line_start":156,"line_end":156,"column_start":40,"column_end":48},"kind":{"Impl":{"id":41}},"from":{"krate":5,"index":1219},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\exc.rs","byte_start":161408,"byte_end":161426,"line_start":152,"line_end":152,"column_start":6,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164030,"byte_end":164040,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\iterator.rs","byte_start":164804,"byte_end":164814,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":963},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":167611,"byte_end":167617,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":170200,"byte_end":170214,"line_start":112,"line_end":112,"column_start":27,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\list.rs","byte_start":171656,"byte_end":171659,"line_start":159,"line_end":159,"column_start":24,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\module.rs","byte_start":176771,"byte_end":176779,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":183065,"byte_end":183071,"line_start":41,"line_end":41,"column_start":21,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4113},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\none.rs","byte_start":183227,"byte_end":183233,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4113},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\num.rs","byte_start":187292,"byte_end":187299,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201402,"byte_end":201410,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201435,"byte_end":201443,"line_start":58,"line_end":58,"column_start":22,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201539,"byte_end":201547,"line_start":61,"line_end":61,"column_start":15,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":201728,"byte_end":201736,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202129,"byte_end":202137,"line_start":92,"line_end":92,"column_start":42,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":1813}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202533,"byte_end":202541,"line_start":110,"line_end":110,"column_start":37,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":1818}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":202689,"byte_end":202697,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":208230,"byte_end":208238,"line_start":272,"line_end":272,"column_start":20,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2487}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\object.rs","byte_start":208491,"byte_end":208499,"line_start":281,"line_end":281,"column_start":13,"column_end":21},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2492}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":210526,"byte_end":210536,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\sequence.rs","byte_start":217322,"byte_end":217325,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":232112,"byte_end":232117,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":234792,"byte_end":234799,"line_start":116,"line_end":116,"column_start":40,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":1,"index":1802},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\set.rs","byte_start":235143,"byte_end":235151,"line_start":132,"line_end":132,"column_start":37,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":7143},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243300,"byte_end":243312,"line_start":124,"line_end":124,"column_start":28,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4381},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243462,"byte_end":243474,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4381},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243616,"byte_end":243628,"line_start":138,"line_end":138,"column_start":30,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4381},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":243750,"byte_end":243762,"line_start":145,"line_end":145,"column_start":10,"column_end":22},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":247221,"byte_end":247229,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":252055,"byte_end":252062,"line_start":356,"line_end":356,"column_start":6,"column_end":13},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":255980,"byte_end":255983,"line_start":468,"line_end":468,"column_start":25,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":256465,"byte_end":256471,"line_start":484,"line_end":484,"column_start":21,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":256970,"byte_end":256973,"line_start":500,"line_end":500,"column_start":31,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":257466,"byte_end":257472,"line_start":513,"line_end":513,"column_start":31,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\string.rs","byte_start":258061,"byte_end":258064,"line_start":526,"line_end":526,"column_start":31,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":313}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":264209,"byte_end":264216,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\tuple.rs","byte_start":269440,"byte_end":269446,"line_start":216,"line_end":216,"column_start":21,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4586},"to":{"krate":0,"index":306}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":271777,"byte_end":271783,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273567,"byte_end":273573,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":2487}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\objects\\typeobject.rs","byte_start":273695,"byte_end":273701,"line_start":87,"line_end":87,"column_start":13,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":2492}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277745,"byte_end":277755,"line_start":42,"line_end":42,"column_start":44,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":306},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277758,"byte_end":277762,"line_start":42,"line_end":42,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":277765,"byte_end":277770,"line_start":42,"line_end":42,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1799}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":278572,"byte_end":278597,"line_start":65,"line_end":65,"column_start":10,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279047,"byte_end":279059,"line_start":81,"line_end":81,"column_start":44,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1799},"to":{"krate":0,"index":1813}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279556,"byte_end":279587,"line_start":93,"line_end":93,"column_start":39,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":1813},"to":{"krate":0,"index":1818}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279717,"byte_end":279722,"line_start":98,"line_end":98,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1820}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":279793,"byte_end":279794,"line_start":102,"line_end":102,"column_start":21,"column_end":22},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1823},"to":{"krate":0,"index":1820}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280039,"byte_end":280045,"line_start":113,"line_end":113,"column_start":21,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1820}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280212,"byte_end":280217,"line_start":123,"line_end":123,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1829}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280280,"byte_end":280281,"line_start":127,"line_end":127,"column_start":20,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1832},"to":{"krate":0,"index":1829}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":280503,"byte_end":280509,"line_start":140,"line_end":140,"column_start":20,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1829}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":281098,"byte_end":281106,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":1837}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":281721,"byte_end":281727,"line_start":191,"line_end":191,"column_start":29,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":39707},"to":{"krate":0,"index":1837}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":282146,"byte_end":282152,"line_start":212,"line_end":212,"column_start":10,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\python.rs","byte_start":287088,"byte_end":287113,"line_start":360,"line_end":360,"column_start":30,"column_end":55},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1804},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293012,"byte_end":293020,"line_start":104,"line_end":104,"column_start":15,"column_end":23},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1892},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":293118,"byte_end":293126,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294375,"byte_end":294387,"line_start":152,"line_end":152,"column_start":31,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294601,"byte_end":294613,"line_start":158,"line_end":158,"column_start":31,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\pythonrun.rs","byte_start":294629,"byte_end":294641,"line_start":160,"line_end":160,"column_start":9,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\gc.rs","byte_start":302420,"byte_end":302429,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":308199,"byte_end":308200,"line_start":43,"line_end":43,"column_start":30,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1987},"to":{"krate":0,"index":1982}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":311251,"byte_end":311275,"line_start":120,"line_end":120,"column_start":27,"column_end":51},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1991},"to":{"krate":0,"index":1982}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\members.rs","byte_start":313477,"byte_end":313498,"line_start":177,"line_end":177,"column_start":27,"column_end":48},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2002},"to":{"krate":0,"index":1982}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":356869,"byte_end":356890,"line_start":543,"line_end":543,"column_start":32,"column_end":53},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2091},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357121,"byte_end":357139,"line_start":559,"line_end":559,"column_start":35,"column_end":53},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2097},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":357562,"byte_end":357585,"line_start":579,"line_end":579,"column_start":42,"column_end":65},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":358734,"byte_end":358747,"line_start":628,"line_end":628,"column_start":34,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2114},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\slots.rs","byte_start":359140,"byte_end":359153,"line_start":652,"line_end":652,"column_start":34,"column_end":47},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2121},"to":{"krate":0,"index":504}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":297266,"byte_end":297292,"line_start":59,"line_end":59,"column_start":49,"column_end":75},"kind":"SuperTrait","from":{"krate":0,"index":1818},"to":{"krate":0,"index":2172}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":298851,"byte_end":298863,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1799},"to":{"krate":0,"index":2188}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\py_class\\mod.rs","byte_start":299531,"byte_end":299539,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":2188}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":368741,"byte_end":368756,"line_start":88,"line_end":88,"column_start":9,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":369600,"byte_end":369611,"line_start":118,"line_end":118,"column_start":21,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":374584,"byte_end":374597,"line_start":242,"line_end":242,"column_start":6,"column_end":19},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":375982,"byte_end":375996,"line_start":285,"line_end":285,"column_start":10,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":376185,"byte_end":376199,"line_start":292,"line_end":292,"column_start":19,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2280},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":377709,"byte_end":377723,"line_start":338,"line_end":338,"column_start":17,"column_end":31},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":379835,"byte_end":379849,"line_start":398,"line_end":398,"column_start":9,"column_end":23},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381564,"byte_end":381575,"line_start":444,"line_end":444,"column_start":31,"column_end":42},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2308},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381849,"byte_end":381863,"line_start":458,"line_end":458,"column_start":31,"column_end":45},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\treva\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpython-0.6.0\\src\\sharedref.rs","byte_start":381983,"byte_end":381997,"line_start":466,"line_end":466,"column_start":34,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":3067}}]}